import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as s,o as c,c as i,d as e,b as d,w as t,e as a,f as r}from"./app-dd440c47.js";const n={},u=r(`<h1 id="murex-package" tabindex="-1"><a class="header-anchor" href="#murex-package" aria-hidden="true">#</a> <code>murex-package</code></h1><blockquote><p>Murex&#39;s package manager</p></blockquote><h2 id="description" tabindex="-1"><a class="header-anchor" href="#description" aria-hidden="true">#</a> Description</h2><p>Murex comes with it&#39;s own package manager to make managing plugins easier.</p><p>The format of the packages is a directory, typically located at <code>~/.murex_modules</code>, which contains one or more murex scripts. Each script can be it&#39;s own module. ie there are multiple modules that can be grouped together and distributed as a single package.</p><p>The way packages and modules are represented is as a path:</p><pre><code>package/module
</code></pre><p><code>murex-package</code> is a package management tool for administrating murex modules and packages.</p><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><p>Install a new package</p><pre><code>murex-package: install uri -&gt; \`&lt;stdout&gt;\`
</code></pre><p>Update all packages</p><pre><code>murex-package: update -&gt; \`&lt;stdout&gt;\`
</code></pre><p>Enable a package or module which had been disabled</p><pre><code>murex-package: enable package

murex-package: enable package/module
</code></pre><p>Disable a package</p><pre><code>murex-package: disable package

murex-package: disable package/module
</code></pre><p>Import packages from another package database</p><pre><code>murex-package: import [ uri/ | local/path/ ]packages.json -&gt; \`&lt;stdout&gt;\`
</code></pre><p>Check status of murex packages</p><pre><code>murex-package: status -&gt; \`&lt;stdout&gt;\`
</code></pre><h2 id="flags" tabindex="-1"><a class="header-anchor" href="#flags" aria-hidden="true">#</a> Flags</h2><ul><li><code>cd</code> Changes working directory to a package&#39;s install location</li><li><code>disable</code> Disables a previously enabled package or module</li><li><code>enable</code> Enables a previously disabled package or module</li><li><code>import</code> Import packages described in a backup package DB from user defined URI or local path</li><li><code>install</code> Installs a package from a user defined URI</li><li><code>list</code> Returns a list of indexed packages/modules (eg what&#39;s enabled or disabled)</li><li><code>reload</code> Reloads all enabled modules</li><li><code>status</code> Returns the version status of locally installed packages</li><li><code>update</code> Updates all installed packages</li></ul><h2 id="detail" tabindex="-1"><a class="header-anchor" href="#detail" aria-hidden="true">#</a> Detail</h2><h3 id="murex-package-list-enabled-vs-loaded" tabindex="-1"><a class="header-anchor" href="#murex-package-list-enabled-vs-loaded" aria-hidden="true">#</a> <code>murex-package: list</code>... <code>enabled</code> vs <code>loaded</code></h3><p><code>enabled</code> and <code>disabled</code> reads the package status from disk rather than the package cache in your current Murex session (like <code>runtime</code> reports). This because the typical use for <code>murex-package list enabled|disabled</code> is to view which packages and modules will be loaded with any new murex session.</p><p>If you wish to view what modules are loaded in a current session then use <code>murex-package list loaded</code> instead. This is also equivalent to using <code>runtime --modules</code>.</p><h2 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also" aria-hidden="true">#</a> See Also</h2>`,28),p=e("code",null,"alias",-1),m=e("code",null,"config",-1),h=e("code",null,"function",-1),g=e("code",null,"murex-docs",-1),k=e("code",null,"private",-1),f=e("code",null,"runtime",-1);function x(b,_){const o=s("RouterLink");return c(),i("div",null,[u,e("ul",null,[e("li",null,[d(o,{to:"/user-guide/modules.html"},{default:t(()=>[a("Modules and Packages")]),_:1}),a(": An introduction to Murex modules and packages")]),e("li",null,[d(o,{to:"/user-guide/profile.html"},{default:t(()=>[a("Murex Profile Files")]),_:1}),a(": A breakdown of the different files loaded on start up")]),e("li",null,[d(o,{to:"/commands/alias.html"},{default:t(()=>[p]),_:1}),a(": Create an alias for a command")]),e("li",null,[d(o,{to:"/commands/config.html"},{default:t(()=>[m]),_:1}),a(": Query or define Murex runtime settings")]),e("li",null,[d(o,{to:"/commands/function.html"},{default:t(()=>[h]),_:1}),a(": Define a function block")]),e("li",null,[d(o,{to:"/commands/murex-docs.html"},{default:t(()=>[g]),_:1}),a(": Displays the man pages for Murex builtins")]),e("li",null,[d(o,{to:"/commands/private.html"},{default:t(()=>[k]),_:1}),a(": Define a private function block")]),e("li",null,[d(o,{to:"/commands/runtime.html"},{default:t(()=>[f]),_:1}),a(": Returns runtime information on the internal state of Murex")])])])}const y=l(n,[["render",x],["__file","murex-package.html.vue"]]);export{y as default};
