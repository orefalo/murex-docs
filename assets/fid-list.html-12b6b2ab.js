import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as n,o as d,c as a,a as e,d as i,w as l,b as t,e as c}from"./app-524c2bb5.js";const u={},r=c('<h1 id="fid-list-command-reference" tabindex="-1"><a class="header-anchor" href="#fid-list-command-reference" aria-hidden="true">#</a> <code>fid-list</code> - Command Reference</h1><blockquote><p>Lists all running functions within the current Murex session</p></blockquote><h2 id="description" tabindex="-1"><a class="header-anchor" href="#description" aria-hidden="true">#</a> Description</h2><p><code>fid-list</code> is a tool for outputting all the functions currently managed by that Murex session. Those functions could be Murex functions, builtins or any external executables launched from Murex.</p><p>Conceptually <code>fid-list</code> is a little like <code>ps</code> (on POSIX systems) however <code>fid-list</code> was not written to be POSIX compliant.</p><p>Multiple flags cannot be used with each other.</p><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><pre><code>fid-list [ flag ] -&gt; `&lt;stdout&gt;`\n</code></pre><p><code>jobs</code> is an alias for <code>fid-list: --jobs</code>: jobs -&gt; <code>&lt;stdout&gt;</code></p><h2 id="flags" tabindex="-1"><a class="header-anchor" href="#flags" aria-hidden="true">#</a> Flags</h2><ul><li><code>--background</code> Returns a <code>json</code> map of background jobs</li><li><code>--csv</code> Output table in a <code>csv</code> format</li><li><code>--help</code> Outputs a list of parameters and a descriptions</li><li><code>--jobs</code> Show background and stopped jobs</li><li><code>--jsonl</code> Output table in a jsonlines (<code>jsonl</code>) format (defaulted to when piped)</li><li><code>--stopped</code> Returns a <code>json</code> map of stopped jobs</li><li><code>--tty</code> Force default TTY output even when piped</li></ul><h2 id="detail" tabindex="-1"><a class="header-anchor" href="#detail" aria-hidden="true">#</a> Detail</h2><p>Because Murex is a multi-threaded shell, builtins are not forked processes like in a traditional / POSIX shell. This means that you cannot use the operating systems default process viewer (eg <code>ps</code>) to list Murex functions. This is where <code>fid-list</code> comes into play. It is used to view all the functions and processes that are managed by the current Murex session. That would include:</p><ul><li>any aliases within Murex</li><li>public and private Murex functions</li><li>builtins (eg <code>fid-list</code> is a builtin command)</li><li>any external processes that were launched from within this shell session</li><li>any background functions or processes of any of the above</li></ul><h2 id="synonyms" tabindex="-1"><a class="header-anchor" href="#synonyms" aria-hidden="true">#</a> Synonyms</h2><ul><li><code>fid-list</code></li><li><code>jobs</code></li></ul><h2 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also" aria-hidden="true">#</a> See Also</h2>',17),h=e("code",null,"*",-1),f=e("code",null,"bexists",-1),m=e("code",null,"bg",-1),p=e("code",null,"builtins",-1),_=e("code",null,"csv",-1),g=e("code",null,"exec",-1),b=e("code",null,"fexec",-1),x=e("code",null,"fg",-1),y=e("code",null,"fid-kill",-1),k=e("code",null,"fid-killall",-1),w=e("em",null,"all",-1),j=e("code",null,"jobs",-1),M=e("code",null,"jsonl",-1),v=e("code",null,"murex-update-exe-list",-1);function S(T,R){const o=n("RouterLink");return d(),a("div",null,[r,e("ul",null,[e("li",null,[i(o,{to:"/guide/types/generic.html"},{default:l(()=>[h,t(" (generic) ")]),_:1}),t(": generic (primitive)")]),e("li",null,[i(o,{to:"/guide/commands/bexists.html"},{default:l(()=>[f]),_:1}),t(": Check which builtins exist")]),e("li",null,[i(o,{to:"/guide/commands/bg.html"},{default:l(()=>[m]),_:1}),t(": Run processes in the background")]),e("li",null,[i(o,{to:"/guide/commands/runtime.html"},{default:l(()=>[p]),_:1}),t(": Returns runtime information on the internal state of Murex")]),e("li",null,[i(o,{to:"/guide/types/csv.html"},{default:l(()=>[_]),_:1}),t(": CSV files (and other character delimited tables)")]),e("li",null,[i(o,{to:"/guide/commands/exec.html"},{default:l(()=>[g]),_:1}),t(": Runs an executable")]),e("li",null,[i(o,{to:"/guide/commands/fexec.html"},{default:l(()=>[b]),_:1}),t(": Execute a command or function, bypassing the usual order of precedence.")]),e("li",null,[i(o,{to:"/guide/commands/fg.html"},{default:l(()=>[x]),_:1}),t(": Sends a background process into the foreground")]),e("li",null,[i(o,{to:"/guide/commands/fid-kill.html"},{default:l(()=>[y]),_:1}),t(": Terminate a running Murex function")]),e("li",null,[i(o,{to:"/guide/commands/fid-killall.html"},{default:l(()=>[k]),_:1}),t(": Terminate "),w,t(" running Murex functions")]),e("li",null,[i(o,{to:"/guide/commands/fid-list.html"},{default:l(()=>[j]),_:1}),t(": Lists all running functions within the current Murex session")]),e("li",null,[i(o,{to:"/guide/types/jsonl.html"},{default:l(()=>[M]),_:1}),t(": JSON Lines")]),e("li",null,[i(o,{to:"/guide/commands/murex-update-exe-list.html"},{default:l(()=>[v]),_:1}),t(": Forces Murex to rescan $PATH looking for executables")])])])}const L=s(u,[["render",S],["__file","fid-list.html.vue"]]);export{L as default};
