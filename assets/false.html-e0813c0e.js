import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as n,o as d,c,d as e,b as a,w as s,e as o,f as r}from"./app-97fd9f14.js";const i={},u=r(`<h1 id="false" tabindex="-1"><a class="header-anchor" href="#false" aria-hidden="true">#</a> <code>false</code></h1><blockquote><p>Returns a <code>false</code> value</p></blockquote><h2 id="description" tabindex="-1"><a class="header-anchor" href="#description" aria-hidden="true">#</a> Description</h2><p>Returns a <code>false</code> value.</p><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><pre><code>false -&gt; \`&lt;stdout&gt;\`
</code></pre><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>By default, <code>false</code> also outputs the term &quot;false&quot;:</p><pre><code>» false
false
</code></pre><p>However you can suppress that with the silent flag:</p><pre><code>» false -s
</code></pre><h2 id="flags" tabindex="-1"><a class="header-anchor" href="#flags" aria-hidden="true">#</a> Flags</h2><ul><li><code>-s</code> silent - don&#39;t output the term &quot;false&quot;</li></ul><h2 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also" aria-hidden="true">#</a> See Also</h2>`,14),h=e("code",null,"!",-1),f=e("code",null,"and",-1),_=e("code",null,"true",-1),p=e("code",null,"false",-1),m=e("code",null,"if",-1),x=e("code",null,"or",-1),b=e("code",null,"true",-1),g=e("code",null,"false",-1),k=e("code",null,"true",-1),v=e("code",null,"true",-1);function R(q,w){const t=n("RouterLink");return d(),c("div",null,[u,e("ul",null,[e("li",null,[a(t,{to:"/commands/not.html"},{default:s(()=>[h,o(" (not)")]),_:1}),o(": Reads the STDIN and exit number from previous process and not's it's condition")]),e("li",null,[a(t,{to:"/commands/and.html"},{default:s(()=>[f]),_:1}),o(": Returns "),_,o(" or "),p,o(" depending on whether multiple conditions are met")]),e("li",null,[a(t,{to:"/commands/if.html"},{default:s(()=>[m]),_:1}),o(": Conditional statement to execute different blocks of code depending on the result of the condition")]),e("li",null,[a(t,{to:"/commands/or.html"},{default:s(()=>[x]),_:1}),o(": Returns "),b,o(" or "),g,o(" depending on whether one code-block out of multiple ones supplied is successful or unsuccessful.")]),e("li",null,[a(t,{to:"/commands/true.html"},{default:s(()=>[k]),_:1}),o(": Returns a "),v,o(" value")])])])}const V=l(i,[["render",R],["__file","false.html.vue"]]);export{V as default};
