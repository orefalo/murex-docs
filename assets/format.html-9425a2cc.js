import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as n,o as d,c as i,d as e,b as o,w as r,e as t,f as l}from"./app-74c664c1.js";const c={},u=l(`<h1 id="format" tabindex="-1"><a class="header-anchor" href="#format" aria-hidden="true">#</a> <code>format</code></h1><blockquote><p>Reformat one data-type into another data-type</p></blockquote><h2 id="description" tabindex="-1"><a class="header-anchor" href="#description" aria-hidden="true">#</a> Description</h2><p><code>format</code> takes a data from STDIN and returns that data reformated in another specified data-type</p><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><pre><code>&lt;stdin&gt; -&gt; format data-type -&gt; &lt;stdout&gt;
</code></pre><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Â» tout json { &quot;One&quot;: 1, &quot;Two&quot;: 2, &quot;Three&quot;: 3 } -&gt; format yaml
One: 1
Three: 3
Two: 2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also" aria-hidden="true">#</a> See Also</h2>`,9),h=e("code",null,"Marshal()",-1),m=e("code",null,"Unmarshal()",-1),f=e("code",null,"cast",-1),p=e("code",null,"tout",-1);function _(v,x){const a=n("RouterLink");return d(),i("div",null,[u,e("ul",null,[e("li",null,[o(a,{to:"/apis/Marshal.html"},{default:r(()=>[h,t(" (type)")]),_:1}),t(": Converts structured memory into a structured file format (eg for stdio)")]),e("li",null,[o(a,{to:"/apis/Unmarshal.html"},{default:r(()=>[m,t(" (type)")]),_:1}),t(": Converts a structured file format into structured memory")]),e("li",null,[o(a,{to:"/commands/cast.html"},{default:r(()=>[f]),_:1}),t(": Alters the data type of the previous function without altering it's output")]),e("li",null,[o(a,{to:"/commands/tout.html"},{default:r(()=>[p]),_:1}),t(": Print a string to the STDOUT and set it's data-type")])])])}const y=s(c,[["render",_],["__file","format.html.vue"]]);export{y as default};
