import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as d,c as o,d as e,b as i,w as s,e as a,f as r}from"./app-8b62c3ab.js";const u={},c=r(`<h1 id="suffix" tabindex="-1"><a class="header-anchor" href="#suffix" aria-hidden="true">#</a> <code>suffix</code></h1><blockquote><p>Prefix a string to every item in a list</p></blockquote><h2 id="description" tabindex="-1"><a class="header-anchor" href="#description" aria-hidden="true">#</a> Description</h2><p>Takes a list from STDIN and returns that same list with each element suffixed.</p><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><pre><code>&lt;stdin&gt; -&gt; suffix str -&gt; &lt;stdout&gt;
</code></pre><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Â» ja: [Monday..Wednesday] -&gt; suffix foobar
[
    &quot;Mondayfoobar&quot;,
    &quot;Tuesdayfoobar&quot;,
    &quot;Wednesdayfoobar&quot;
]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="detail" tabindex="-1"><a class="header-anchor" href="#detail" aria-hidden="true">#</a> Detail</h2><p>Supported data types can queried via <code>runtime</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>runtime: --marshallers
runtime: --unmarshallers
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="synonyms" tabindex="-1"><a class="header-anchor" href="#synonyms" aria-hidden="true">#</a> Synonyms</h2><ul><li><code>suffix</code></li><li><code>list.suffix</code></li></ul><h2 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also" aria-hidden="true">#</a> See Also</h2>`,14),m=e("code",null,"a",-1),h=e("code",null,"count",-1),f=e("code",null,"ja",-1),_=e("code",null,"lang.MarshalData()",-1),x=e("code",null,"lang.UnmarshalData()",-1),p=e("code",null,"left",-1),v=e("code",null,"prefix",-1),y=e("code",null,"right",-1),b=e("code",null,"runtime",-1);function g(k,q){const t=l("RouterLink");return d(),o("div",null,[c,e("ul",null,[e("li",null,[i(t,{to:"/commands/a.html"},{default:s(()=>[m,a(" (mkarray)")]),_:1}),a(": A sophisticated yet simple way to build an array or list")]),e("li",null,[i(t,{to:"/commands/count.html"},{default:s(()=>[h]),_:1}),a(": Count items in a map, list or array")]),e("li",null,[i(t,{to:"/commands/ja.html"},{default:s(()=>[f,a(" (mkarray)")]),_:1}),a(": A sophisticated yet simply way to build a JSON array")]),e("li",null,[i(t,{to:"/apis/lang.MarshalData.html"},{default:s(()=>[_,a(" (system API)")]),_:1}),a(": Converts structured memory into a Murex data-type (eg for stdio)")]),e("li",null,[i(t,{to:"/apis/lang.UnmarshalData.html"},{default:s(()=>[x,a(" (system API)")]),_:1}),a(": Converts a Murex data-type into structured memory")]),e("li",null,[i(t,{to:"/commands/left.html"},{default:s(()=>[p]),_:1}),a(": Left substring every item in a list")]),e("li",null,[i(t,{to:"/commands/prefix.html"},{default:s(()=>[v]),_:1}),a(": Prefix a string to every item in a list")]),e("li",null,[i(t,{to:"/commands/right.html"},{default:s(()=>[y]),_:1}),a(": Right substring every item in a list")]),e("li",null,[i(t,{to:"/commands/runtime.html"},{default:s(()=>[b]),_:1}),a(": Returns runtime information on the internal state of Murex")])])])}const N=n(u,[["render",g],["__file","suffix.html.vue"]]);export{N as default};
