const e=JSON.parse('{"key":"v-8daa1a0e","path":"/","title":"Murex","lang":"en-US","frontmatter":{"home":true,"icon":"home","title":"Murex","heroImage":"favicon.svg","heroText":"Murex.Rocks","tagline":"An intuitive, typed and content aware shell for the 2020s and beyond.","actions":[{"text":"Getting Started 💡","link":"./tour","type":"primary"},{"text":"Rosetta Stone 🪨","link":"./rosetta"},{"text":"Built-ins 📔","link":"./commands"}],"highlights":[{"header":"A Modern shell for the rest of us","description":"Murex carries tons of unique features...","features":[{"title":"Content Aware","icon":"arrows-to-circle","details":"Natively manipulate JSON, TOML, YAML, XML, CSV, and commonlog files","link":"types/"},{"title":"Objects and Maps","icon":"table-columns","details":"Use maps, hashes, lists, and dictionaries for data manipulation","link":"mkarray/"},{"title":"Arrays manipulation","icon":"layer-group","details":"Native built-ins allow for proper manipulation of arrays","link":"lmkarray/"},{"title":"Scalar expression","icon":"check-double","details":"The shell parses variables as expressions to avoid accidental bugs due to spaces","link":"tour/#scalars"},{"title":"Public & Private functions","icon":"unlock-keyhole","details":"Private functions restrict scope visibility to the nearest module or source file","link":"commands/private"},{"title":"Type inference","icon":"text-height","details":"The shell tries to infer the data type of variables and pipelines it manages","link":"tour/#type-inference"},{"title":"Enhanced pipelines & redirection","icon":"puzzle-piece","details":"urex supports sending typed information to compatible functions via redirection and pipelines. This allows for more efficient and flexible data processing.","link":"user-guide/pipeline"},{"title":"Type casting and formats","icon":"text-width","details":"Murex allows you to change the meta-data about how an information should be read or displayed. This can be useful for manipulating and formatting data in a desired way.","link":"tour/#type-conversion"},{"title":"Inline spellchecking","icon":"spell-check","details":"Murex provides inline spellchecking, which quickly identifies typing spelling errors with underlined text. This helps to catch and correct errors in real-time.","link":"user-guide/spellcheck"},{"title":"Smart Autocomplete","icon":"wand-magic-sparkles","details":"Murex parses man pages for command line flags and provides smart autocomplete functionality. By pressing the TAB key, you can auto-complete commands and parameters, making command line navigation faster and more efficient.","link":"commands/autocomplete"},{"title":"Hint text","icon":"comment","details":"Murex provides hint text, which gives clues to the user without any distractions. This can be useful for providing additional information or guidance to the user","link":"user-guide/interactive-shell#hint-text"},{"title":"Syntax highlighting","icon":"highlighter","details":"In the interactive terminal, Murex provides syntax highlighting, making it easier to read and understand code. Syntax highlighting can also be piped to the next built-in for further processing.","link":"user-guide/interactive-shell#syntax-highlighting"},{"title":"Syntax Completion","icon":"down-left-and-up-right-to-center","details":"Murex balances and auto-closes brackets and accolades, making it easier to write and edit code. This feature helps to ensure that code is properly formatted and avoids syntax errors.","link":"user-guide/interactive-shell#syntax-completion"},{"title":"Extension Framework","icon":"cube","details":"Murex has an extension framework that allows you to design your own modules or enjoy prebuilt extensions such as `auto-jump` or `starfish`. This allows for customization and additional functionality.","link":"user-guide/modules"},{"title":"Built-in Package Manager","icon":"cubes","details":"Murex comes with a built-in package manager that allows you to search and manage the lifecycle of packages. This makes it easy to install and manage dependencies.","link":"commands/murex-package"},{"title":"80 builtins commands","icon":"building","details":"Murex provides 80 built-in commands allowing for fast execution and portability. These built-in commands cover a wide range of functionalities.","link":"commands/"},{"title":"Realtime Events","icon":"bolt","details":"Murex supports realtime events, which streamline script notifications upon elapsed time, keypress, completion, prompt, or filesystem changes. This allows for more dynamic and responsive scripts.","link":"events/"},{"title":"PNG Generation","icon":"image","details":"Murex can generate barcodes and images directly from scripts. This can be useful for generating visual representations of data or for creating graphical outputs.","link":"optional/qr"},{"title":"Multi-threaded","icon":"gears","details":"Murex uses separate threads for built-ins, rather than forking processes like in a traditional POSIX shell. This optimizes resource usage and improves performance.","link":"commands/fid-list"},{"title":"NOT POSIX compliant!","icon":"recycle","details":"Murex is purposely not POSIX compliant in order to be performant and allow for extended capabilities. This allows for more flexibility and advanced features.","link":"/"}]}],"copyright":false,"footer":"GPL Licensed, Copyright © 2017-present Laurence Morgan","description":"👁‍🗨 Screenshots .image-preview { display: flex; justify-content: space-evenly; align-items: center; flex-wrap: wrap; } .image-preview > img { box-sizing: border-box; width: 33...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/murex-docs/"}],["meta",{"property":"og:title","content":"Murex"}],["meta",{"property":"og:description","content":"👁‍🗨 Screenshots .image-preview { display: flex; justify-content: space-evenly; align-items: center; flex-wrap: wrap; } .image-preview > img { box-sizing: border-box; width: 33..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-07-23T04:05:07.000Z"}],["meta",{"property":"article:author","content":"Laurence Morgan"}],["meta",{"property":"article:modified_time","content":"2023-07-23T04:05:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"Murex\\",\\"description\\":\\"👁‍🗨 Screenshots .image-preview { display: flex; justify-content: space-evenly; align-items: center; flex-wrap: wrap; } .image-preview > img { box-sizing: border-box; width: 33...\\"}"]]},"headers":[{"level":2,"title":"👁‍🗨 Screenshots","slug":"👁‍🗨-screenshots","link":"#👁‍🗨-screenshots","children":[]},{"level":2,"title":"📦 Easy to Install","slug":"📦-easy-to-install","link":"#📦-easy-to-install","children":[]},{"level":2,"title":"🛟 Getting Started","slug":"🛟-getting-started","link":"#🛟-getting-started","children":[]}],"git":{"createdTime":1689830547000,"updatedTime":1690085107000,"contributors":[{"name":"Olivier Refalo","email":"orefalo@snapcore.com","commits":13}]},"readingTime":{"minutes":2.96,"words":887},"filePathRelative":"README.md","localizedDate":"July 20, 2023","autoDesc":true,"excerpt":""}');export{e as data};
