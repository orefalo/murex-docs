import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as d,c as s,a as e,d as n,w as a,b as t,e as l}from"./app-5c3d1e58.js";const c={},u=l(`<h1 id="version-command-reference" tabindex="-1"><a class="header-anchor" href="#version-command-reference" aria-hidden="true">#</a> <code>version</code> - Command Reference</h1><blockquote><p>Get Murex version</p></blockquote><h2 id="description" tabindex="-1"><a class="header-anchor" href="#description" aria-hidden="true">#</a> Description</h2><p>Returns Murex version number</p><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><pre><code>version [ flags ] -&gt; \`&lt;stdout&gt;\`
</code></pre><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Ran without any parameters</p><pre><code>» version
murex: 0.51.1200 BETA
</code></pre><p>Ran with the <code>--no-app-name</code> parameter</p><pre><code>» version --no-app-name
0.51.1200 BETA
</code></pre><p>Ran with the <code>--short</code> parameter</p><pre><code>» version --short
0.51
</code></pre><h2 id="flags" tabindex="-1"><a class="header-anchor" href="#flags" aria-hidden="true">#</a> Flags</h2><ul><li><code>--no-app-name</code> Returns full version string minus app name</li><li><code>--short</code> Returns only the major and minor version as a <code>num</code> data-type</li></ul><h2 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also" aria-hidden="true">#</a> See Also</h2>`,16),m=e("code",null,"args",-1),h=e("code",null,"autocomplete",-1),p=e("code",null,"config",-1),f=e("code",null,"function",-1),_=e("code",null,"murex-parser",-1),g=e("code",null,"private",-1),x=e("code",null,"runtime",-1),v=e("code",null,"source",-1);function b(R,k){const o=i("RouterLink");return d(),s("div",null,[u,e("ul",null,[e("li",null,[n(o,{to:"/guide/commands/args.html"},{default:a(()=>[m]),_:1}),t(": Command line flag parser for Murex shell scripting")]),e("li",null,[n(o,{to:"/guide/commands/autocomplete.html"},{default:a(()=>[h]),_:1}),t(": Set definitions for tab-completion in the command line")]),e("li",null,[n(o,{to:"/guide/commands/config.html"},{default:a(()=>[p]),_:1}),t(": Query or define Murex runtime settings")]),e("li",null,[n(o,{to:"/guide/commands/function.html"},{default:a(()=>[f]),_:1}),t(": Define a function block")]),e("li",null,[n(o,{to:"/guide/commands/murex-parser.html"},{default:a(()=>[_]),_:1}),t(": Runs the Murex parser against a block of code")]),e("li",null,[n(o,{to:"/guide/commands/private.html"},{default:a(()=>[g]),_:1}),t(": Define a private function block")]),e("li",null,[n(o,{to:"/guide/commands/runtime.html"},{default:a(()=>[x]),_:1}),t(": Returns runtime information on the internal state of Murex")]),e("li",null,[n(o,{to:"/guide/commands/source.html"},{default:a(()=>[v]),_:1}),t(": Import Murex code from another file of code block")])])])}const B=r(c,[["render",b],["__file","version.html.vue"]]);export{B as default};
