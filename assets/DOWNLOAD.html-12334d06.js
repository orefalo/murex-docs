import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as s,o as l,c as i,d as e,b as n,w as d,e as r,f as u}from"./app-27c1e3fb.js";const h={},c=e("h1",null,"Download Murex",-1),m=e("img",{src:"https://raw.githubusercontent.com/lmorg/murex/master/version.svg",alt:"Version",loading:"lazy"},null,-1),x=e("h2",{id:"download-links",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#download-links","aria-hidden":"true"},"#"),r(" Download Links")],-1),p={href:"/install",target:"_blank",rel:"noopener noreferrer"},_=e("p",null,"All files are approximately 6 MB in size (aside the Plan 9 builds which are 3 MB).",-1),b=e("h3",{id:"darwin-macos",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#darwin-macos","aria-hidden":"true"},"#"),r(" Darwin (macOS)")],-1),f=e("p",null,[r("The "),e("code",null,"arm64"),r(" builds support the ARM-based M1 processor. Older Macs will need to run "),e("code",null,"amd64"),r(". Murex is also available on Homebrew and MacPorts.")],-1),g={href:"https://murex.rocks/bin/latest/murex-darwin-amd64.gz",target:"_blank",rel:"noopener noreferrer"},k={href:"https://murex.rocks/bin/latest/murex-darwin-amd64.gz",target:"_blank",rel:"noopener noreferrer"},w=e("h3",{id:"bsd-s",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#bsd-s","aria-hidden":"true"},"#"),r(" BSD's")],-1),z=e("h4",{id:"dragonflybsd",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#dragonflybsd","aria-hidden":"true"},"#"),r(" DragonflyBSD")],-1),v={href:"https://murex.rocks/bin/latest/murex-dragonfly-amd64.gz",target:"_blank",rel:"noopener noreferrer"},y=e("h4",{id:"freebsd",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#freebsd","aria-hidden":"true"},"#"),r(" FreeBSD")],-1),S={href:"https://murex.rocks/bin/latest/murex-freebsd-386.gz",target:"_blank",rel:"noopener noreferrer"},L={href:"https://murex.rocks/bin/latest/murex-freebsd-amd64.gz",target:"_blank",rel:"noopener noreferrer"},O={href:"https://murex.rocks/bin/latest/murex-freebsd-arm.gz",target:"_blank",rel:"noopener noreferrer"},D={href:"https://murex.rocks/bin/latest/murex-freebsd-arm64.gz",target:"_blank",rel:"noopener noreferrer"},I=e("h4",{id:"netbsd",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#netbsd","aria-hidden":"true"},"#"),r(" NetBSD")],-1),P={href:"https://murex.rocks/bin/latest/murex-netbsd-386.gz",target:"_blank",rel:"noopener noreferrer"},W={href:"https://murex.rocks/bin/latest/murex-netbsd-amd64.gz",target:"_blank",rel:"noopener noreferrer"},M={href:"https://murex.rocks/bin/latest/murex-netbsd-arm.gz",target:"_blank",rel:"noopener noreferrer"},B={href:"https://murex.rocks/bin/latest/murex-netbsd-arm64.gz",target:"_blank",rel:"noopener noreferrer"},N=e("h4",{id:"openbsd",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#openbsd","aria-hidden":"true"},"#"),r(" OpenBSD")],-1),T={href:"https://murex.rocks/bin/latest/murex-openbsd-386.gz",target:"_blank",rel:"noopener noreferrer"},A={href:"https://murex.rocks/bin/latest/murex-openbsd-amd64.gz",target:"_blank",rel:"noopener noreferrer"},C={href:"https://murex.rocks/bin/latest/murex-openbsd-arm.gz",target:"_blank",rel:"noopener noreferrer"},U={href:"https://murex.rocks/bin/latest/murex-openbsd-arm64.gz",target:"_blank",rel:"noopener noreferrer"},V=e("h3",{id:"linux",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#linux","aria-hidden":"true"},"#"),r(" Linux")],-1),X={href:"https://murex.rocks/bin/latest/murex-linux-386.gz",target:"_blank",rel:"noopener noreferrer"},E={href:"https://murex.rocks/bin/latest/murex-linux-amd64.gz",target:"_blank",rel:"noopener noreferrer"},R={href:"https://murex.rocks/bin/latest/murex-linux-arm.gz",target:"_blank",rel:"noopener noreferrer"},q={href:"https://murex.rocks/bin/latest/murex-linux-arm64.gz",target:"_blank",rel:"noopener noreferrer"},F=e("h3",{id:"windows",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#windows","aria-hidden":"true"},"#"),r(" Windows")],-1),H=e("p",null,"These builds should be treated as experimental. Please use the Linux builds in WSL (Windows Subsystem for Linux) for a more stable experience on Windows.",-1),j={href:"https://murex.rocks/bin/latest/murex-windows-386.exe.zip",target:"_blank",rel:"noopener noreferrer"},G={href:"https://murex.rocks/bin/latest/murex-windows-amd64.exe.zip",target:"_blank",rel:"noopener noreferrer"},J={href:"https://murex.rocks/bin/latest/murex-windows-arm.exe.zip",target:"_blank",rel:"noopener noreferrer"},K=e("h3",{id:"solaris",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#solaris","aria-hidden":"true"},"#"),r(" Solaris")],-1),Q=e("p",null,"This build should be treated as experimental however unlike the other experimental builds (Plan 9 and Windows), Solaris is at least POSIX compliant so expect fewer issues than on the non-POSIX platforms.",-1),Y={href:"https://murex.rocks/bin/latest/murex-solaris-amd64.gz",target:"_blank",rel:"noopener noreferrer"},Z=e("h3",{id:"plan-9",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#plan-9","aria-hidden":"true"},"#"),r(" Plan 9")],-1),$={href:"https://github.com/lmorg/murex/issues",target:"_blank",rel:"noopener noreferrer"},ee={href:"https://murex.rocks/bin/latest/murex-plan9-386.gz",target:"_blank",rel:"noopener noreferrer"},re={href:"https://murex.rocks/bin/latest/murex-plan9-amd64.gz",target:"_blank",rel:"noopener noreferrer"},ne={href:"https://murex.rocks/bin/latest/murex-plan9-arm.gz",target:"_blank",rel:"noopener noreferrer"},te=u(`<h2 id="install-instructions" tabindex="-1"><a class="header-anchor" href="#install-instructions" aria-hidden="true">#</a> Install Instructions</h2><h3 id="linux-unix-macos-instructions" tabindex="-1"><a class="header-anchor" href="#linux-unix-macos-instructions" aria-hidden="true">#</a> Linux / UNIX / macOS Instructions</h3><p>Please download the appropriate <code>.gz</code> file from the list above, one that matches both your OS and CPU architecture.</p><p>For example, to download a 64bit version for Linux:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>wget https://murex.rocks/bin/latest/murex-linux-amd64.gz
gunzip murex-linux-amd64.gz
chmod +x murex-linux-amd64
./murex-linux-amd64
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),se={href:"https://en.wikipedia.org/wiki/Darwin_(operating_system)",target:"_blank",rel:"noopener noreferrer"},oe={href:"https://en.wikipedia.org/wiki/MacOS#Architecture",target:"_blank",rel:"noopener noreferrer"},ae=e("p",null,[r("Most of these builds have received "),e("em",null,"some"),r(" level of user acceptance testing with Linux and macOS builds receiving the most attention, because that's what we use ourselves.")],-1),le=e("h3",{id:"windows-instructions",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#windows-instructions","aria-hidden":"true"},"#"),r(" Windows Instructions")],-1),ie=e("p",null,"Click the Windows link that matches your CPU architecture. Unzip using your preferred too then launch using your preferred console. Murex cannot be started via double clicking the executable -- it requires a starting from within an existing console session.",-1),de=e("strong",null,"coreutils",-1),ue=e("code",null,"linux-amd64",-1),he={href:"https://docs.microsoft.com/en-us/windows/wsl/install-win10",target:"_blank",rel:"noopener noreferrer"};function ce(me,xe){const o=s("RouterLink"),t=s("ExternalLinkIcon");return l(),i("div",null,[c,e("p",null,[n(o,{to:"/install/DOWNLOAD.html"},{default:d(()=>[m]),_:1})]),x,e("p",null,[r("Below are the instructions to download a pre-compiled binary via HTTPS. If you wish to install from source or use your preferred package manager, then please refer to the "),e("a",p,[r("INSTALL"),n(t)]),r(" page for further instructions.")]),_,b,f,e("ul",null,[e("li",null,[e("a",g,[r("murex-darwin-amd64.gz"),n(t)])]),e("li",null,[e("a",k,[r("murex-darwin-arm64.gz"),n(t)])])]),w,z,e("ul",null,[e("li",null,[e("a",v,[r("murex-dragonfly-amd64.gz"),n(t)])])]),y,e("ul",null,[e("li",null,[e("a",S,[r("murex-freebsd-386.gz"),n(t)])]),e("li",null,[e("a",L,[r("murex-freebsd-amd64.gz"),n(t)])]),e("li",null,[e("a",O,[r("murex-freebsd-arm.gz"),n(t)])]),e("li",null,[e("a",D,[r("murex-freebsd-arm64.gz"),n(t)])])]),I,e("ul",null,[e("li",null,[e("a",P,[r("murex-netbsd-386.gz"),n(t)])]),e("li",null,[e("a",W,[r("murex-netbsd-amd64.gz"),n(t)])]),e("li",null,[e("a",M,[r("murex-netbsd-arm.gz"),n(t)])]),e("li",null,[e("a",B,[r("murex-netbsd-arm64.gz"),n(t)])])]),N,e("ul",null,[e("li",null,[e("a",T,[r("murex-openbsd-386.gz"),n(t)])]),e("li",null,[e("a",A,[r("murex-openbsd-amd64.gz"),n(t)])]),e("li",null,[e("a",C,[r("murex-openbsd-arm.gz"),n(t)])]),e("li",null,[e("a",U,[r("murex-openbsd-arm64.gz"),n(t)])])]),V,e("ul",null,[e("li",null,[e("a",X,[r("murex-linux-386.gz"),n(t)])]),e("li",null,[e("a",E,[r("murex-linux-amd64.gz"),n(t)])]),e("li",null,[e("a",R,[r("murex-linux-arm.gz"),n(t)])]),e("li",null,[e("a",q,[r("murex-linux-arm64.gz"),n(t)])])]),F,H,e("ul",null,[e("li",null,[e("a",j,[r("murex-windows-386.exe.zip"),n(t)])]),e("li",null,[e("a",G,[r("murex-windows-amd64.exe.zip"),n(t)])]),e("li",null,[e("a",J,[r("murex-windows-arm.exe.zip"),n(t)])])]),K,Q,e("ul",null,[e("li",null,[e("a",Y,[r("murex-solaris-amd64.gz"),n(t)])])]),Z,e("p",null,[r("Plan9 is untested. The code compiles and it is syscall compatible with Plan9 operating systems, however you may experience bugs using Murex on Plan9. If you do encounter any issues then please raise them at: "),e("a",$,[r("github.com/lmorg/murex/issues"),n(t)])]),e("ul",null,[e("li",null,[e("a",ee,[r("murex-plan9-386.gz"),n(t)])]),e("li",null,[e("a",re,[r("murex-plan9-amd64.gz"),n(t)])]),e("li",null,[e("a",ne,[r("murex-plan9-arm.gz"),n(t)])])]),te,e("blockquote",null,[e("p",null,[r("macOS builds are listed as "),e("a",se,[r("darwin"),n(t)]),r(" as per the name of Apple have given to their "),e("a",oe,[r("underlying OS"),n(t)]),r(".")])]),ae,le,ie,e("p",null,[r("Please also note that Windows support is also considered experimental. In part due to the lack of "),de,r(" (as seen on Linux and UNIX) and in part due to the different underpinning technologies behind consoles / terminal emulators. If you do experience some wonky behavior then our recommendation is to run the "),ue,r(" build for Linux on top of WSL. The instructions above will guide you through installing on Linux, WSL install instructions can be found at the following site: "),e("a",he,[r("docs.microsoft.com/en-us/windows/wsl/install-win10"),n(t)])])])}const be=a(h,[["render",ce],["__file","DOWNLOAD.html.vue"]]);export{be as default};
