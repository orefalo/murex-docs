import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r as d,o as l,c as r,d as e,b as s,w as t,e as o,f as a}from"./app-dd440c47.js";const n={},p=a(`<h1 id="f" tabindex="-1"><a class="header-anchor" href="#f" aria-hidden="true">#</a> <code>f</code></h1><blockquote><p>Lists or filters file system objects (eg files)</p></blockquote><h2 id="description" tabindex="-1"><a class="header-anchor" href="#description" aria-hidden="true">#</a> Description</h2><p><code>f</code> lists or filters lists of file system objects, such as files, directories, etc. <code>f</code> provides a quick way to output file system items that confirm to specific criteria.</p><p>You define this criteria by using +flags (eg <code>+s</code> for all symlinks) and optionally then restricting that criteria with -flags (eg <code>-x</code> to remove all executable items). All flags supported as <code>+</code> are also supported as a <code>-</code>.</p><p>By default <code>f</code> will return no results. You need to include +flags.</p><p>Output is a JSON array as this format preserves whitespace in file names.</p><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><pre><code>f: options -&gt; \`&lt;stdout&gt;\`

\`&lt;stdin&gt;\` -&gt; f: options -&gt; \`&lt;stdout&gt;\`
</code></pre><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Return only directories:</p><pre><code>f: +d
</code></pre><p>Return file and directories but exclude symlinks:</p><pre><code>f: +fd -s
</code></pre><p>Filter out files in a list (eg created by <code>g</code>) using conditions set by <code>f</code>:</p><pre><code>g: &#39;*.go&#39; -&gt; f: +f

rx: &#39;\\.(txt|md)&#39; -&gt; f: +fw
</code></pre><h2 id="flags" tabindex="-1"><a class="header-anchor" href="#flags" aria-hidden="true">#</a> Flags</h2><ul><li><code>+</code> include files (pair this with any other flag apart from <code>-</code>)</li><li><code>-</code> exclude files (pair this with any other flag apart from <code>+</code>)</li><li><code>?</code> deprecated -- use <code>i</code> instead</li><li><code>D</code> regular directories</li><li><code>E</code> other read permissions</li><li><code>F</code> regular files (exc symlinks, devices, sockets, named pipes, etc)</li><li><code>Q</code> other write permissions</li><li><code>R</code> user read permissions</li><li><code>S</code> sockets</li><li><code>W</code> user write permissions</li><li><code>X</code> user execute permissions</li><li><code>Z</code> other execute permissions</li><li><code>b</code> block devices</li><li><code>c</code> character devices</li><li><code>d</code> all directories (inc symlinks)</li><li><code>e</code> group read permissions</li><li><code>f</code> all files (inc symlinks, devices, sockets, name pipes, etc)</li><li><code>i</code> irregular files (nothing else is known about these files)</li><li><code>l</code> symlinks</li><li><code>p</code> POSIX named pipes (FIFO)</li><li><code>q</code> group write permissions</li><li><code>r</code> read permissions (user, group, or other)</li><li><code>s</code> symlinks</li><li><code>w</code> write permissions (user, group, or other)</li><li><code>x</code> execute permissions (user, group, or other)</li><li><code>z</code> group execute permissions</li></ul><h2 id="detail" tabindex="-1"><a class="header-anchor" href="#detail" aria-hidden="true">#</a> Detail</h2><p><code>+</code> flags are always matched first. Then the <code>-</code> flags are used to filter out any matches from the <code>+</code> flags.</p><h2 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also" aria-hidden="true">#</a> See Also</h2>`,21),h=e("code",null,"g",-1),u=e("code",null,"*.txt",-1),f=e("code",null,"json",-1),m=e("code",null,"rx",-1),g=e("code",null,".*\\\\.txt",-1);function x(_,y){const i=d("RouterLink");return l(),r("div",null,[p,e("ul",null,[e("li",null,[s(i,{to:"/commands/g.html"},{default:t(()=>[h]),_:1}),o(": Glob pattern matching for file system objects (eg "),u,o(")")]),e("li",null,[s(i,{to:"/types/json.html"},{default:t(()=>[f]),_:1}),o(": JavaScript Object Notation (JSON)")]),e("li",null,[s(i,{to:"/commands/rx.html"},{default:t(()=>[m]),_:1}),o(": Regexp pattern matching for file system objects (eg "),g,o(")")])])])}const w=c(n,[["render",x],["__file","f.html.vue"]]);export{w as default};
