import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as s,c as i,d as e,b as o,w as d,e as t,f as r}from"./app-b92fd348.js";const c={},u=r('<h1 id="addheading" tabindex="-1"><a class="header-anchor" href="#addheading" aria-hidden="true">#</a> <code>addheading</code></h1><blockquote><p>Adds headings to a table</p></blockquote><h2 id="description" tabindex="-1"><a class="header-anchor" href="#description" aria-hidden="true">#</a> Description</h2><p><code>addheading</code> takes a list of parameters and adds them to the start of a table. Where <code>prepend</code> is designed to work with arrays, <code>addheading</code> is designed to prepend to tables.</p><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><pre><code>`&lt;stdin&gt;` -&gt; addheading: value value value ... -&gt; `&lt;stdout&gt;`\n</code></pre><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Â» tout: jsonl &#39;[&quot;Bob&quot;, 23, true]&#39; -&gt; addheading name age active\n[&quot;name&quot;,&quot;age&quot;,&quot;active&quot;]\n[&quot;Bob&quot;,&quot;23&quot;,&quot;true&quot;]\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also" aria-hidden="true">#</a> See Also</h2>',9),h=e("code",null,"[[",-1),m=e("code",null,"[",-1),_=e("code",null,"a",-1),p=e("code",null,"append",-1),f=e("code",null,"cast",-1),g=e("code",null,"count",-1),x=e("code",null,"ja",-1),b=e("code",null,"match",-1),v=e("code",null,"msort",-1),y=e("code",null,"mtac",-1),q=e("code",null,"prepend",-1),k=e("code",null,"regexp",-1);function w(A,B){const a=l("RouterLink");return s(),i("div",null,[u,e("ul",null,[e("li",null,[o(a,{to:"/commands/element.html"},{default:d(()=>[h,t(" (element)")]),_:1}),t(": Outputs an element from a nested structure")]),e("li",null,[o(a,{to:"/commands/"},{default:d(()=>[m,t(" (index)")]),_:1}),t(": Outputs an element from an array, map or table")]),e("li",null,[o(a,{to:"/commands/a.html"},{default:d(()=>[_,t(" (mkarray)")]),_:1}),t(": A sophisticated yet simple way to build an array or list")]),e("li",null,[o(a,{to:"/commands/append.html"},{default:d(()=>[p]),_:1}),t(": Add data to the end of an array")]),e("li",null,[o(a,{to:"/commands/cast.html"},{default:d(()=>[f]),_:1}),t(": Alters the data type of the previous function without altering it's output")]),e("li",null,[o(a,{to:"/commands/count.html"},{default:d(()=>[g]),_:1}),t(": Count items in a map, list or array")]),e("li",null,[o(a,{to:"/commands/ja.html"},{default:d(()=>[x,t(" (mkarray)")]),_:1}),t(": A sophisticated yet simply way to build a JSON array")]),e("li",null,[o(a,{to:"/commands/match.html"},{default:d(()=>[b]),_:1}),t(": Match an exact value in an array")]),e("li",null,[o(a,{to:"/commands/msort.html"},{default:d(()=>[v]),_:1}),t(": Sorts an array - data type agnostic")]),e("li",null,[o(a,{to:"/commands/mtac.html"},{default:d(()=>[y]),_:1}),t(": Reverse the order of an array")]),e("li",null,[o(a,{to:"/commands/prepend.html"},{default:d(()=>[q]),_:1}),t(": Add data to the start of an array")]),e("li",null,[o(a,{to:"/commands/regexp.html"},{default:d(()=>[k]),_:1}),t(": Regexp tools for arrays / lists of strings")])])])}const S=n(c,[["render",w],["__file","addheading.html.vue"]]);export{S as default};
