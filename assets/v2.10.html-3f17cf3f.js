import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as r,c as d,d as e,b as t,w as n,e as l,f as a}from"./app-143dece1.js";const u={},c=a(`<h1 id="what-s-new-in-murex-v2-10-change-log" tabindex="-1"><a class="header-anchor" href="#what-s-new-in-murex-v2-10-change-log" aria-hidden="true">#</a> What&#39;s new in murex v2.10 - Change Log</h1><p>This release brings a few minor improvements and bug fixes rather than big new headline features.</p><p>Breaking Changes:</p><ul><li>None</li></ul><p>Features:</p><ul><li><p>Added support for ranges to be used as variables. eg</p><pre><code>f: +f -&gt; set v
  echo: @v[2..]</code></pre></li><li><p>Complete re-write of <code>f</code>. It is now the tool I had always intended when I first created that builtin</p></li><li><p><code>g</code> now supports being run as a method (eg to filter items from a file list)</p></li><li><p><code>rx</code> now supports being run as a method (eg to filter items from a file list)</p></li><li><p>Updated autocompletes for <code>git</code></p></li><li><p>Updated autocompletes for <code>terraform</code></p></li></ul><p>Minor Changes:</p><ul><li><p>Added support for profiling</p></li><li><p>Removed unused data types</p></li><li><p>Dropped <code>profile/</code> prefix from the module string for modules and profiles (as seen in <code>FileRef</code>)</p></li></ul><p>Bug Fixes:</p><ul><li><p>Lots of improvements to how <code>||</code> and <code>&amp;&amp;</code> are used in other <code>runmode</code>&#39;s, <code>try</code>, and <code>trypipe</code></p></li><li><p>autoglob prompt now has a mutex wrapped around it to prevent concurrent processes sending the prompt haywire</p></li><li><p>Spellchecker no longer underlines partial words</p></li><li><p>Better removal of \\x16 and other non-printable characters leaking into readline</p></li></ul><hr><p>Published: 01.08.2022 at 20:10</p><h2 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also" aria-hidden="true">#</a> See Also</h2>`,13),p=e("code",null,"&&",-1),h=e("br",null,null,-1),m=e("br",null,null,-1),f=e("br",null,null,-1),_=e("br",null,null,-1),g=e("code",null,"||",-1),b=e("br",null,null,-1),w=e("br",null,null,-1),x=e("br",null,null,-1),v=e("code",null,"[",-1),k=e("br",null,null,-1),y=e("code",null,"autocomplete",-1),C=e("br",null,null,-1),A=e("code",null,"f",-1),L=e("br",null,null,-1),S=e("code",null,"g",-1),B=e("br",null,null,-1),N=e("code",null,"*.txt",-1),R=e("code",null,"runmode",-1),F=e("br",null,null,-1),M=e("code",null,"rx",-1),O=e("br",null,null,-1),I=e("code",null,".*\\\\.txt",-1),V=e("code",null,"try",-1),j=e("br",null,null,-1),H=e("code",null,"trypipe",-1),P=e("br",null,null,-1);function T(D,U){const o=i("RouterLink");return r(),d("div",null,[c,e("ul",null,[e("li",null,[t(o,{to:"/parser/logical-and.html"},{default:n(()=>[l("And ("),p,l(") Logical Operator")]),_:1}),l(":"),h,l(" Continues next operation if previous operation passes")]),e("li",null,[t(o,{to:"/user-guide/fileref.html"},{default:n(()=>[l("FileRef")]),_:1}),l(":"),m,l(" How to track what code was loaded and from where")]),e("li",null,[t(o,{to:"/user-guide/modules.html"},{default:n(()=>[l("Modules and Packages")]),_:1}),l(":"),f,l(" An introduction to Murex modules and packages")]),e("li",null,[t(o,{to:"/user-guide/profile.html"},{default:n(()=>[l("Murex Profile Files")]),_:1}),l(":"),_,l(" A breakdown of the different files loaded on start up")]),e("li",null,[t(o,{to:"/parser/logical-or.html"},{default:n(()=>[l("Or ("),g,l(") Logical Operator")]),_:1}),l(":"),b,l(" Continues next operation only if previous operation fails")]),e("li",null,[t(o,{to:"/user-guide/schedulers.html"},{default:n(()=>[l("Schedulers")]),_:1}),l(":"),w,l(" Overview of the different schedulers (or 'run modes') in Murex")]),e("li",null,[t(o,{to:"/user-guide/spellcheck.html"},{default:n(()=>[l("Spellcheck")]),_:1}),l(":"),x,l(" How to enable inline spellchecking")]),e("li",null,[t(o,{to:"/commands/range.html"},{default:n(()=>[v,l(" (range) ")]),_:1}),l(":"),k,l(" Outputs a ranged subset of data from STDIN")]),e("li",null,[t(o,{to:"/commands/autocomplete.html"},{default:n(()=>[y]),_:1}),l(":"),C,l(" Set definitions for tab-completion in the command line")]),e("li",null,[t(o,{to:"/commands/f.html"},{default:n(()=>[A]),_:1}),l(":"),L,l(" Lists or filters file system objects (eg files)")]),e("li",null,[t(o,{to:"/commands/g.html"},{default:n(()=>[S]),_:1}),l(":"),B,l(" Glob pattern matching for file system objects (eg "),N,l(")")]),e("li",null,[t(o,{to:"/commands/runmode.html"},{default:n(()=>[R]),_:1}),l(":"),F,l(" Alter the scheduler's behaviour at higher scoping level")]),e("li",null,[t(o,{to:"/commands/rx.html"},{default:n(()=>[M]),_:1}),l(":"),O,l(" Regexp pattern matching for file system objects (eg "),I,l(")")]),e("li",null,[t(o,{to:"/commands/try.html"},{default:n(()=>[V]),_:1}),l(":"),j,l(" Handles errors inside a block of code")]),e("li",null,[t(o,{to:"/commands/trypipe.html"},{default:n(()=>[H]),_:1}),l(":"),P,l(" Checks state of each function in a pipeline and exits block on error")])])])}const W=s(u,[["render",T],["__file","v2.10.html.vue"]]);export{W as default};
