import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as s,c as l,d as e,b as a,w as i,e as o,f as d}from"./app-8b62c3ab.js";const c={},h=d(`<h1 id="exit" tabindex="-1"><a class="header-anchor" href="#exit" aria-hidden="true">#</a> <code>exit</code></h1><blockquote><p>Exit murex</p></blockquote><h2 id="description" tabindex="-1"><a class="header-anchor" href="#description" aria-hidden="true">#</a> Description</h2><p>Exit&#39;s Murex with either a exit number of 0 (by default if no parameters supplied) or a custom value specified by the first parameter.</p><p><code>exit</code> is not scope aware; if it is included in a function then the whole shell will still exist and not just that function.</p><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><pre><code>exit
exit number
</code></pre><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><pre><code>» exit

» exit 42
</code></pre><h2 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also" aria-hidden="true">#</a> See Also</h2>`,10),u=e("code",null,"break",-1),m=e("code",null,"die",-1),x=e("code",null,"null",-1);function p(f,_){const t=r("RouterLink");return s(),l("div",null,[h,e("ul",null,[e("li",null,[a(t,{to:"/commands/break.html"},{default:i(()=>[u]),_:1}),o(": Terminate execution of a block within your processes scope")]),e("li",null,[a(t,{to:"/commands/die.html"},{default:i(()=>[m]),_:1}),o(": Terminate murex with an exit number of 1")]),e("li",null,[a(t,{to:"/commands/devnull.html"},{default:i(()=>[x]),_:1}),o(": null function. Similar to /dev/null")])])])}const w=n(c,[["render",p],["__file","exit.html.vue"]]);export{w as default};
