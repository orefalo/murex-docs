import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as d,o as l,c as o,d as e,b as i,w as t,e as n,f as r}from"./app-73035245.js";const c={},u=r(`<h1 id="bg" tabindex="-1"><a class="header-anchor" href="#bg" aria-hidden="true">#</a> <code>bg</code></h1><blockquote><p>Run processes in the background</p></blockquote><h2 id="description" tabindex="-1"><a class="header-anchor" href="#description" aria-hidden="true">#</a> Description</h2><p><code>bg</code> supports two modes: it can either be run as a function block which will execute in the background, or it can take stopped processes and daemonize them.</p><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><p>Any operating system:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>    bg { code block }

    &lt;stdin&gt; -&gt; bg
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>POSIX only:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>    bg { code block }

    &lt;stdin&gt; -&gt; bg

    bg fid
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>As a function:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>bg { sleep 5; out &quot;Morning&quot; }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>As a method:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Â» ({ sleep 5; out &quot;Morning&quot; }) -&gt; bg
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="detail" tabindex="-1"><a class="header-anchor" href="#detail" aria-hidden="true">#</a> Detail</h2><p>The examples above will work on any system (Windows included). However the <code>ctrl+z</code> usage of backgrounding a stopped process (like Bash) is only supported on POSIX systems due to the limitation of required signals on non-platforms. This means the usage described in the examples is cross cross platform while <code>bg int</code> currently does not work on Windows nor Plan 9.</p><h2 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also" aria-hidden="true">#</a> See Also</h2>`,17),h=e("code",null,"exec",-1),m=e("code",null,"fg",-1),g=e("code",null,"fid-kill",-1),p=e("code",null,"fid-killall",-1),b=e("em",null,"all",-1),f=e("code",null,"fid-list",-1),v=e("code",null,"jobs",-1);function x(_,k){const s=d("RouterLink");return l(),o("div",null,[u,e("ul",null,[e("li",null,[i(s,{to:"/commands/exec.html"},{default:t(()=>[h]),_:1}),n(": Runs an executable")]),e("li",null,[i(s,{to:"/commands/fg.html"},{default:t(()=>[m]),_:1}),n(": Sends a background process into the foreground")]),e("li",null,[i(s,{to:"/commands/fid-kill.html"},{default:t(()=>[g]),_:1}),n(": Terminate a running Murex function")]),e("li",null,[i(s,{to:"/commands/fid-killall.html"},{default:t(()=>[p]),_:1}),n(": Terminate "),b,n(" running Murex functions")]),e("li",null,[i(s,{to:"/commands/fid-list.html"},{default:t(()=>[f]),_:1}),n(": Lists all running functions within the current Murex session")]),e("li",null,[i(s,{to:"/commands/fid-list.html"},{default:t(()=>[v]),_:1}),n(": Lists all running functions within the current Murex session")])])])}const q=a(c,[["render",x],["__file","bg.html.vue"]]);export{q as default};
