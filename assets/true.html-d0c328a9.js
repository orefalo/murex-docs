import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as d,o as l,c as r,d as e,b as n,w as a,e as t,f as c}from"./app-cd07b44a.js";const u={},i=c(`<h1 id="true" tabindex="-1"><a class="header-anchor" href="#true" aria-hidden="true">#</a> <code>true</code></h1><blockquote><p>Returns a <code>true</code> value</p></blockquote><h2 id="description" tabindex="-1"><a class="header-anchor" href="#description" aria-hidden="true">#</a> Description</h2><p>Returns a <code>true</code> value.</p><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><pre><code>true -&gt; \`&lt;stdout&gt;\`
</code></pre><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>By default, <code>true</code> also outputs the term &quot;true&quot;:</p><pre><code>» true
true
</code></pre><p>However you can suppress that with the silent flag:</p><pre><code>» true -s
</code></pre><h2 id="flags" tabindex="-1"><a class="header-anchor" href="#flags" aria-hidden="true">#</a> Flags</h2><ul><li><code>-s</code> silent - don&#39;t output the term &quot;true&quot;</li></ul><h2 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also" aria-hidden="true">#</a> See Also</h2>`,14),h=e("code",null,"!",-1),_=e("code",null,"and",-1),p=e("code",null,"true",-1),f=e("code",null,"false",-1),m=e("code",null,"false",-1),x=e("code",null,"false",-1),b=e("code",null,"if",-1),g=e("code",null,"or",-1),k=e("code",null,"true",-1),v=e("code",null,"false",-1);function R(q,w){const o=d("RouterLink");return l(),r("div",null,[i,e("ul",null,[e("li",null,[n(o,{to:"/commands/not.html"},{default:a(()=>[h,t(" (not)")]),_:1}),t(": Reads the STDIN and exit number from previous process and not's it's condition")]),e("li",null,[n(o,{to:"/commands/and.html"},{default:a(()=>[_]),_:1}),t(": Returns "),p,t(" or "),f,t(" depending on whether multiple conditions are met")]),e("li",null,[n(o,{to:"/commands/false.html"},{default:a(()=>[m]),_:1}),t(": Returns a "),x,t(" value")]),e("li",null,[n(o,{to:"/commands/if.html"},{default:a(()=>[b]),_:1}),t(": Conditional statement to execute different blocks of code depending on the result of the condition")]),e("li",null,[n(o,{to:"/commands/or.html"},{default:a(()=>[g]),_:1}),t(": Returns "),k,t(" or "),v,t(" depending on whether one code-block out of multiple ones supplied is successful or unsuccessful.")])])])}const V=s(u,[["render",R],["__file","true.html.vue"]]);export{V as default};
