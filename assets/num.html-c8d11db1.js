import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as s,c as i,d as e,b as n,w as a,e as t,f as d}from"./app-cd07b44a.js";const u={},c=d('<h1 id="num-number-data-type-reference" tabindex="-1"><a class="header-anchor" href="#num-number-data-type-reference" aria-hidden="true">#</a> <code>num</code> (number) - Data-Type Reference</h1><blockquote><p>Floating point number (primitive)</p></blockquote><h2 id="description" tabindex="-1"><a class="header-anchor" href="#description" aria-hidden="true">#</a> Description</h2><p>Any number. To be precise, a full set of all IEEE-754 64-bit floating-point numbers.</p><blockquote><p>Unless you specifically know you only want whole numbers, it is recommended that you use this as your default numeric data-type as opposed to <code>int</code>.</p></blockquote><h2 id="supported-hooks" tabindex="-1"><a class="header-anchor" href="#supported-hooks" aria-hidden="true">#</a> Supported Hooks</h2><ul><li><code>Marshal()</code> Supported</li><li><code>Unmashal()</code> Supported</li></ul><h2 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also" aria-hidden="true">#</a> See Also</h2>',8),m=e("code",null,"Marshal()",-1),h=e("code",null,"Unmarshal()",-1),p=e("code",null,"[[",-1),f=e("code",null,"[",-1),_=e("code",null,"cast",-1),y=e("code",null,"format",-1),b=e("code",null,"int",-1),k=e("code",null,"open",-1),x=e("code",null,"runtime",-1),v=e("code",null,"str",-1);function w(g,R){const o=r("RouterLink");return s(),i("div",null,[c,e("ul",null,[e("li",null,[n(o,{to:"/apis/Marshal.html"},{default:a(()=>[m,t(" (type)")]),_:1}),t(": Converts structured memory into a structured file format (eg for stdio)")]),e("li",null,[n(o,{to:"/apis/Unmarshal.html"},{default:a(()=>[h,t(" (type)")]),_:1}),t(": Converts a structured file format into structured memory")]),e("li",null,[n(o,{to:"/commands/element.html"},{default:a(()=>[p,t(" (element)")]),_:1}),t(": Outputs an element from a nested structure")]),e("li",null,[n(o,{to:"/commands/index2.html"},{default:a(()=>[f,t(" (index)")]),_:1}),t(": Outputs an element from an array, map or table")]),e("li",null,[n(o,{to:"/commands/cast.html"},{default:a(()=>[_]),_:1}),t(": Alters the data type of the previous function without altering it's output")]),e("li",null,[n(o,{to:"/commands/format.html"},{default:a(()=>[y]),_:1}),t(": Reformat one data-type into another data-type")]),e("li",null,[n(o,{to:"/types/int.html"},{default:a(()=>[b]),_:1}),t(": Whole number (primitive)")]),e("li",null,[n(o,{to:"/commands/open.html"},{default:a(()=>[k]),_:1}),t(": Open a file with a preferred handler")]),e("li",null,[n(o,{to:"/commands/runtime.html"},{default:a(()=>[x]),_:1}),t(": Returns runtime information on the internal state of Murex")]),e("li",null,[n(o,{to:"/types/str.html"},{default:a(()=>[v,t(" (string) ")]),_:1}),t(": string (primitive)")])])])}const C=l(u,[["render",w],["__file","num.html.vue"]]);export{C as default};
