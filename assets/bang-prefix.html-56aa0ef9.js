import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as a,o as i,c as r,a as e,d as n,w as l,b as o,e as d}from"./app-11d32613.js";const c={},u=d('<h1 id="bang-prefix-user-guide" tabindex="-1"><a class="header-anchor" href="#bang-prefix-user-guide" aria-hidden="true">#</a> Bang Prefix - User Guide</h1><blockquote><p>Bang prefixing to reverse default actions</p></blockquote><p>Some builtins support a bang prefix, <code>!</code>, which provides a shorthand negative<br> action to default behavior. For example, <code>set</code> defines a variable where as<br><code>!set</code> will undefine a variable.</p><p>Sometimes the shortcut will be logical, like a <strong>not</strong> operator, as is the case<br> with <code>and</code> where typically each result has to equal <strong>true</strong> normally or<br><strong>false</strong> if used in <code>!and</code>.</p><p>Sometimes the shortcut will be more philosophical, such as with <code>config</code> where<br> normal operations is to query or set configuration but <code>!config</code> resets the<br> configuration to defaults (thus operating the same as <code>config default</code>).</p><p>Please read the respecting commands doc for details on whether it supports a<br> bang prefix and what the behavior of that prefix is.</p><h2 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also" aria-hidden="true">#</a> See Also</h2>',7),h=e("br",null,null,-1),_=e("br",null,null,-1),f=e("code",null,"!",-1),p=e("br",null,null,-1),m=e("code",null,"and",-1),b=e("br",null,null,-1),g=e("code",null,"true",-1),v=e("code",null,"false",-1),x=e("code",null,"config",-1),w=e("br",null,null,-1),k=e("code",null,"or",-1),S=e("br",null,null,-1),y=e("code",null,"true",-1),R=e("code",null,"false",-1),B=e("code",null,"set",-1),N=e("br",null,null,-1);function V(q,P){const t=a("RouterLink");return i(),r("div",null,[u,e("ul",null,[e("li",null,[n(t,{to:"/user-guide/pipeline.html"},{default:l(()=>[o("Pipeline")]),_:1}),o(":"),h,o(' Overview of what a "pipeline" is')]),e("li",null,[n(t,{to:"/user-guide/reserved-vars.html"},{default:l(()=>[o("Reserved Variables")]),_:1}),o(":"),_,o(" Special variables reserved by Murex")]),e("li",null,[n(t,{to:"/commands/not.html"},{default:l(()=>[f,o(" (not)")]),_:1}),o(":"),p,o(" Reads the STDIN and exit number from previous process and not's it's condition")]),e("li",null,[n(t,{to:"/commands/and.html"},{default:l(()=>[m]),_:1}),o(":"),b,o(" Returns "),g,o(" or "),v,o(" depending on whether multiple conditions are met")]),e("li",null,[n(t,{to:"/commands/config.html"},{default:l(()=>[x]),_:1}),o(":"),w,o(" Query or define Murex runtime settings")]),e("li",null,[n(t,{to:"/commands/or.html"},{default:l(()=>[k]),_:1}),o(":"),S,o(" Returns "),y,o(" or "),R,o(" depending on whether one code-block out of multiple ones supplied is successful or unsuccessful.")]),e("li",null,[n(t,{to:"/commands/set.html"},{default:l(()=>[B]),_:1}),o(":"),N,o(" Define a local variable and set it's value")])])])}const L=s(c,[["render",V],["__file","bang-prefix.html.vue"]]);export{L as default};
