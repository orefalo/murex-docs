import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as l,c as d,d as e,b as t,w as s,e as o,f as r}from"./app-e8b715b4.js";const c={},u=r(`<h1 id="bg" tabindex="-1"><a class="header-anchor" href="#bg" aria-hidden="true">#</a> <code>bg</code></h1><blockquote><p>Run processes in the background</p></blockquote><h2 id="description" tabindex="-1"><a class="header-anchor" href="#description" aria-hidden="true">#</a> Description</h2><p><code>bg</code> supports two modes: it can either be run as a function block which will execute in the background, or it can take stopped processes and daemonize them.</p><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><p>Any operating system:</p><pre><code>bg { code block }

\`&lt;stdin&gt;\` -&gt; bg
</code></pre><p>POSIX only:</p><pre><code>bg { code block }

\`&lt;stdin&gt;\` -&gt; bg

bg fid
</code></pre><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>As a function:</p><pre><code>bg { sleep 5; out &quot;Morning&quot; }
</code></pre><p>As a method:</p><pre><code>Â» ({ sleep 5; out &quot;Morning&quot; }) -&gt; bg
</code></pre><h2 id="detail" tabindex="-1"><a class="header-anchor" href="#detail" aria-hidden="true">#</a> Detail</h2><p>The examples above will work on any system (Windows included). However the <code>ctrl+z</code> usage of backgrounding a stopped process (like Bash) is only supported on POSIX systems due to the limitation of required signals on non-platforms. This means the usage described in the examples is cross cross platform while <code>bg int</code> currently does not work on Windows nor Plan 9.</p><h2 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also" aria-hidden="true">#</a> See Also</h2>`,17),h=e("code",null,"exec",-1),p=e("code",null,"fg",-1),m=e("code",null,"fid-kill",-1),f=e("code",null,"fid-killall",-1),g=e("em",null,"all",-1),_=e("code",null,"fid-list",-1),b=e("code",null,"jobs",-1);function x(k,w){const n=i("RouterLink");return l(),d("div",null,[u,e("ul",null,[e("li",null,[t(n,{to:"/commands/exec.html"},{default:s(()=>[h]),_:1}),o(": Runs an executable")]),e("li",null,[t(n,{to:"/commands/fg.html"},{default:s(()=>[p]),_:1}),o(": Sends a background process into the foreground")]),e("li",null,[t(n,{to:"/commands/fid-kill.html"},{default:s(()=>[m]),_:1}),o(": Terminate a running Murex function")]),e("li",null,[t(n,{to:"/commands/fid-killall.html"},{default:s(()=>[f]),_:1}),o(": Terminate "),g,o(" running Murex functions")]),e("li",null,[t(n,{to:"/commands/fid-list.html"},{default:s(()=>[_]),_:1}),o(": Lists all running functions within the current Murex session")]),e("li",null,[t(n,{to:"/commands/fid-list.html"},{default:s(()=>[b]),_:1}),o(": Lists all running functions within the current Murex session")])])])}const M=a(c,[["render",x],["__file","bg.html.vue"]]);export{M as default};
