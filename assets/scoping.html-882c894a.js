import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as s,o as l,c,d as e,b as n,w as a,e as o,f as d}from"./app-dae038b0.js";const r={},u=d(`<h1 id="variable-and-config-scoping-user-guide" tabindex="-1"><a class="header-anchor" href="#variable-and-config-scoping-user-guide" aria-hidden="true">#</a> Variable and Config Scoping - User Guide</h1><blockquote><p>How scoping works within Murex</p></blockquote><p>A &#39;scope&#39; in Murex is a collection of code blocks to which variables and config are persistent within. In Murex, a variable declared inside an <code>if</code> or <code>foreach</code> block will be persistent outside of their blocks as long as you&#39;re still inside the same function.</p><p>For example lets start with the following function that sets a variable called <strong>foo</strong></p><pre><code>function example {
    if { true } then { set foo=bar }
    out $foo
}
</code></pre><p>In here the value is getting set inside an <code>if</code> block but its value is is retrieved outside of that block. <code>out</code> and <code>set</code> have different parents but the same scoping.</p><p>Then lets set <strong>foo</strong> outside of that function and see what happens:</p><pre><code>» set foo=oof
» $foo
oof

» example
bar

» $foo
oof
</code></pre><p>Despite setting a variable named <strong>foo</strong>, the value inside <strong>example</strong> does not overwrite the value outside <strong>example</strong> because they occupy different scoping.</p><h2 id="what-instantiates-a-new-scope" tabindex="-1"><a class="header-anchor" href="#what-instantiates-a-new-scope" aria-hidden="true">#</a> What Instantiates A New Scope?</h2><p>A new scope is instantiated by anything which resembles a function. This would be code inside events, dynamic autocompletes, open agents, any code blocks defined in <code>config</code>, as well as public and private functions too.</p><p>Code inside an <code>if</code>, <code>switch</code>, <code>foreach</code> and <code>source</code> do not create a new scope. Subshells also do not create a new scoping either.</p><h2 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also" aria-hidden="true">#</a> See Also</h2>`,13),h=e("code",null,"autocomplete",-1),f=e("code",null,"config",-1),p=e("code",null,"event",-1),m=e("code",null,"foreach",-1),_=e("code",null,"function",-1),g=e("code",null,"if",-1),b=e("code",null,"let",-1),v=e("code",null,"openagent",-1),w=e("code",null,"private",-1),x=e("code",null,"set",-1),k=e("code",null,"source",-1),y=e("code",null,"switch",-1);function S(C,M){const t=s("RouterLink");return l(),c("div",null,[u,e("ul",null,[e("li",null,[n(t,{to:"/user-guide/reserved-vars.html"},{default:a(()=>[o("Reserved Variables")]),_:1}),o(": Special variables reserved by Murex")]),e("li",null,[n(t,{to:"/commands/autocomplete.html"},{default:a(()=>[h]),_:1}),o(": Set definitions for tab-completion in the command line")]),e("li",null,[n(t,{to:"/commands/config.html"},{default:a(()=>[f]),_:1}),o(": Query or define Murex runtime settings")]),e("li",null,[n(t,{to:"/commands/event.html"},{default:a(()=>[p]),_:1}),o(": Event driven programming for shell scripts")]),e("li",null,[n(t,{to:"/commands/foreach.html"},{default:a(()=>[m]),_:1}),o(": Iterate through an array")]),e("li",null,[n(t,{to:"/commands/function.html"},{default:a(()=>[_]),_:1}),o(": Define a function block")]),e("li",null,[n(t,{to:"/commands/if.html"},{default:a(()=>[g]),_:1}),o(": Conditional statement to execute different blocks of code depending on the result of the condition")]),e("li",null,[n(t,{to:"/commands/let.html"},{default:a(()=>[b]),_:1}),o(": Evaluate a mathematical function and assign to variable (deprecated)")]),e("li",null,[n(t,{to:"/commands/openagent.html"},{default:a(()=>[v]),_:1}),o(": Creates a handler function for `open")]),e("li",null,[n(t,{to:"/commands/private.html"},{default:a(()=>[w]),_:1}),o(": Define a private function block")]),e("li",null,[n(t,{to:"/commands/set.html"},{default:a(()=>[x]),_:1}),o(": Define a local variable and set it's value")]),e("li",null,[n(t,{to:"/commands/source.html"},{default:a(()=>[k]),_:1}),o(": Import Murex code from another file of code block")]),e("li",null,[n(t,{to:"/commands/switch.html"},{default:a(()=>[y]),_:1}),o(": Blocks of cascading conditionals")])])])}const N=i(r,[["render",S],["__file","scoping.html.vue"]]);export{N as default};
