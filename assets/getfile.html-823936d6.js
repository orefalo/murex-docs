import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as s,o as d,c as i,d as e,b as a,w as o,e as n,f as l}from"./app-b92fd348.js";const c={},h=l(`<h1 id="getfile" tabindex="-1"><a class="header-anchor" href="#getfile" aria-hidden="true">#</a> <code>getfile</code></h1><blockquote><p>Makes a standard HTTP request and return the contents as Murex-aware data type for passing along Murex pipelines.</p></blockquote><h2 id="description" tabindex="-1"><a class="header-anchor" href="#description" aria-hidden="true">#</a> Description</h2><p>Fetches a resource from a URL - setting STDOUT data-type</p><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><pre><code>getfile url -&gt; \`&lt;stdout&gt;\`
</code></pre><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><pre><code>getfile google.com
</code></pre><h2 id="detail" tabindex="-1"><a class="header-anchor" href="#detail" aria-hidden="true">#</a> Detail</h2><p>This simply fetches a resource (via HTTP GET request) from a URL and returns the byte stream to STDOUT. It will set STDOUT&#39;s data-type based on MIME defined in the <code>Content-Type</code> HTTP header.</p><p>It is recommended that you only use this command if you&#39;re pipelining the output (eg writing to file or passing on to another function). If you just want to render the output to the terminal then use <code>open</code> which has hooks for smart terminal rendering.</p><h3 id="configurable-options" tabindex="-1"><a class="header-anchor" href="#configurable-options" aria-hidden="true">#</a> Configurable options</h3><p><code>getfile</code> has a number of behavioral options which can be configured via Murex&#39;s standard <code>config</code> tool:</p><pre><code>config: -&gt; [ http ]
</code></pre><p>To change a default, for example the user agent string:</p><pre><code>config: set http user-agent &quot;bob&quot;
getfile: google.com
</code></pre><p>This enables sane, repeatable and readable defaults. Read the documents on <code>config</code> for more details about it&#39;s usage and the rational behind the command.</p><h2 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also" aria-hidden="true">#</a> See Also</h2>`,18),u=e("code",null,"config",-1),p=e("code",null,"get",-1),f=e("code",null,"open",-1),g=e("code",null,"post",-1);function m(_,b){const t=s("RouterLink");return d(),i("div",null,[h,e("ul",null,[e("li",null,[a(t,{to:"/commands/config.html"},{default:o(()=>[u]),_:1}),n(": Query or define Murex runtime settings")]),e("li",null,[a(t,{to:"/commands/get.html"},{default:o(()=>[p]),_:1}),n(": Makes a standard HTTP request and returns the result as a JSON object")]),e("li",null,[a(t,{to:"/commands/open.html"},{default:o(()=>[f]),_:1}),n(": Open a file with a preferred handler")]),e("li",null,[a(t,{to:"/commands/post.html"},{default:o(()=>[g]),_:1}),n(": HTTP POST request with a JSON-parsable return")])])])}const y=r(c,[["render",m],["__file","getfile.html.vue"]]);export{y as default};
