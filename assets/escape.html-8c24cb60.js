import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as c,c as l,d as e,b as s,w as t,e as d,f as r}from"./app-74c664c1.js";const o={},u=r(`<h1 id="escape" tabindex="-1"><a class="header-anchor" href="#escape" aria-hidden="true">#</a> <code>escape</code></h1><blockquote><p>Escape or unescape input</p></blockquote><h2 id="description" tabindex="-1"><a class="header-anchor" href="#description" aria-hidden="true">#</a> Description</h2><p><code>escape</code> takes input from either STDIN or the parameters and returns the same data, escaped.</p><p><code>!escape</code> does the same process in reverse, where it takes escaped data and returns its unescaped counterpart.</p><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><p>Escape</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;stdin&gt; -&gt; escape -&gt; &lt;stdout&gt;

escape string to escape -&gt; &lt;stdout&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Unescape</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;stdin&gt; -&gt; !escape -&gt; &lt;stdout&gt;

!escape string to unescape -&gt; &lt;stdout&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h2><p>Escape</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>» out (multi
» line
» string) -&gt; escape
&quot;multi\\nline\\nstring\\n&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="synonyms" tabindex="-1"><a class="header-anchor" href="#synonyms" aria-hidden="true">#</a> Synonyms</h2><ul><li><code>escape</code></li><li><code>!escape</code></li></ul><h2 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also" aria-hidden="true">#</a> See Also</h2>`,16),p=e("code",null,"esccli",-1),h=e("code",null,"eschtml",-1),m=e("code",null,"escurl",-1);function v(g,x){const a=i("RouterLink");return c(),l("div",null,[u,e("ul",null,[e("li",null,[s(a,{to:"/commands/esccli.html"},{default:t(()=>[p]),_:1}),d(": Escapes an array so output is valid shell code")]),e("li",null,[s(a,{to:"/commands/eschtml.html"},{default:t(()=>[h]),_:1}),d(": Encode or decodes text for HTML")]),e("li",null,[s(a,{to:"/commands/escurl.html"},{default:t(()=>[m]),_:1}),d(": Encode or decodes text for the URL")])])])}const f=n(o,[["render",v],["__file","escape.html.vue"]]);export{f as default};
