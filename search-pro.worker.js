const nt="ENTRIES",T="KEYS",V="VALUES",F="";class D{constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===F)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==F).join("")}value(){return E(this._path).node.get(F)}result(){switch(this._type){case V:return this.value();case T:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return W(e,t,s,n,i,1,o,""),n},W=(e,t,s,n,o,u,i,r)=>{const h=u*i;t:for(const c of e.keys())if(c===F){const a=o[h-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let l=0;l<c.length;++l,++a){const p=c[l],f=i*a,g=f-i;let d=o[f];const m=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let _=m;_<y;++_){const b=p!==t[_],z=o[g+_]+ +b,A=o[g+_+1]+1,w=o[f+_]+1,L=o[f+_+1]=Math.min(z,A,w);L<d&&(d=L)}if(d>s)continue t}W(e.get(c),t,s,n,o,a,i,r+c)}};class C{constructor(t=new Map,s=""){this._size=void 0,this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=I(n);for(const i of o.keys())if(i!==F&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ut(this._tree,t)}entries(){return new D(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=O(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=O(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new D(this,T)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,M(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);let o=n.get(F);return o===void 0&&n.set(F,o=s()),o}values(){return new D(this,V)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},O=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return O(e.get(s),t.slice(s.length))},M=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==F&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const h=e.get(u);if(r===u.length)e=h;else{const c=new Map;c.set(u.slice(r),h),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ut=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(F),s.size===0)R(n);else if(s.size===1){const[o,u]=s.entries().next().value;$(n,o,u)}}},R=e=>{if(e.length===0)return;const[t,s]=I(e);if(t.delete(s),t.size===0)R(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==F&&$(e.slice(0,-1),n,o)}},$=(e,t,s)=>{if(e.length===0)return;const[n,o]=I(e);n.set(o+t,s),n.delete(o)},I=e=>e[e.length-1],it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,S="or",P="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},q=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},G=({score:e},{score:t})=>t-e,lt=()=>new Map,k=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},N=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[S]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),q(n.terms,u)}}return e},[P]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);q(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},at=(e,t,s,n,o,u)=>{const{k:i,b:r,d:h}=u;return Math.log(1+(s-t+.5)/(t+.5))*(h+e*(i+1)/(e+i*(1-r+r*n/o)))},dt=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},ft={k:1.2,b:.7,d:.5},gt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof(console==null?void 0:console[e])=="function"&&console[e](t)},autoVacuum:!0},H={combineWith:S,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:ft},mt={combineWith:P,prefix:(e,t,s)=>t===s.length-1},pt={batchSize:1e3,batchWait:10},J={minDirtFactor:.1,minDirtCount:20},Ft={...pt,...J};class _t{constructor(t){if((t==null?void 0:t.fields)==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?Ft:t.autoVacuum;this._options={...gt,...t,autoVacuum:s,searchOptions:{...H,...t.searchOptions||{}},autoSuggestOptions:{...mt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=J,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const yt=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},U=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},At=(e,t,s,n)=>{if(!e._index.has(n)){U(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?U(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},Y=(e,t=S)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(ht[s])||new Map},B=(e,t,s,n,o,u,i,r,h=new Map)=>{if(o==null)return h;for(const c of Object.keys(u)){const a=u[c],l=e._fieldIds[c],p=o.get(l);if(p==null)continue;let f=p.size;const g=e._avgFieldLength[l];for(const d of p.keys()){if(!e._documentIds.has(d)){At(e,l,d,s),f-=1;continue}const m=i?i(e._documentIds.get(d),s,e._storedFields.get(d)):1;if(!m)continue;const y=p.get(d),_=e._fieldLength.get(d)[l],b=at(y,f,e._documentCount,_,g,r),z=n*a*m*b,A=h.get(d);if(A){A.score+=z,ct(A.terms,t);const w=N(A.match,s);w?w.push(c):A.match[s]=[c]}else h.set(d,{score:z,terms:[t],match:{[s]:[c]}})}}return h},Ct=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((d,m)=>({...d,[m]:N(n.boost,m)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:h}=n,{fuzzy:c,prefix:a}={...H.weights,...i},l=e._index.get(t.term),p=B(e,t.term,t.term,1,l,o,u,h);let f,g;if(t.prefix&&(f=e._index.atPrefix(t.term)),t.fuzzy){const d=t.fuzzy===!0?.2:t.fuzzy,m=d<1?Math.min(r,Math.round(t.term.length*d)):d;m&&(g=e._index.fuzzyGet(t.term,m))}if(f)for(const[d,m]of f){const y=d.length-t.term.length;if(!y)continue;g==null||g.delete(d);const _=a*d.length/(d.length+.3*y);B(e,t.term,d,_,m,o,u,h,p)}if(g)for(const d of g.keys()){const[m,y]=g.get(d);if(!y)continue;const _=c*d.length/(d.length+y);B(e,t.term,d,_,m,o,u,h,p)}return p},K=(e,t,s={})=>{if(typeof t!="string"){const a={...s,...t,queries:void 0},l=t.queries.map(p=>K(e,p,a));return Y(l,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:h}=i,c=r(t).flatMap(a=>h(a)).filter(a=>!!a).map(dt(i)).map(a=>Ct(e,a,i));return Y(c,i.combineWith)},X=(e,t,s={})=>{const n=K(e,t,s),o=[];for(const[u,{score:i,terms:r,match:h}]of n){const c=r.length,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(h),match:h};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return o.sort(G),o},Et=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of X(e,t,s)){const r=i.join(" "),h=n.get(r);h!=null?(h.score+=u,h.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:h}]of n)o.push({suggestion:u,terms:r,score:i/h});return o.sort(G),o},zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:h,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const l=new _t(a);l._documentCount=t,l._nextId=s,l._documentIds=k(n),l._idToShortId=new Map,l._fieldIds=o,l._fieldLength=k(u),l._avgFieldLength=i,l._storedFields=k(r),l._dirtCount=h||0,l._index=new C;for(const[p,f]of l._documentIds)l._idToShortId.set(f,p);for(const[p,f]of e){const g=new Map;for(const d of Object.keys(f)){let m=f[d];c===1&&(m=m.ds),g.set(parseInt(d,10),k(m))}l._index.set(p,g)}return l},Q=Object.entries,wt=Object.fromEntries,j=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let l="";i===0?l=c.length>20?`… ${c.slice(-20)}`:c:a?l=c.length+i>100?`${c.slice(0,100-i)}… `:c:l=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,l&&o.push(l),i+=l.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let h=s.indexOf(n,u);if(h===-1)return null;for(;h>=0;){const c=h+n.length;if(r(e.slice(u,h)),u=c,i>100)break;h=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},Z=/[\u4e00-\u9fa5]/g,tt=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(Z)||[],n=t.replace(Z,"").toLowerCase();return n?[n,...s]:[...s]},...e}),xt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),kt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),et=(e,t,s={})=>{const n={};return X(t,e,tt({boost:{h:2,t:1,c:4},...s})).forEach(o=>{const{id:u,terms:i,score:r}=o,h=u.includes("@"),c=u.includes("#"),[a,l]=u.split(/[#@]/),{contents:p}=n[a]??={title:"",contents:[]};if(h)p.push([{type:"customField",key:a,index:l,display:i.map(f=>o.c.map(g=>j(g,f))).flat().filter(f=>f!==null)},r]);else{const f=i.map(g=>j(o.h,g)).filter(g=>g!==null);if(f.length&&p.push([{type:c?"heading":"title",key:a,...c&&{anchor:l},display:f},r]),"t"in o)for(const g of o.t){const d=i.map(m=>j(g,m)).filter(m=>m!==null);d.length&&p.push([{type:"text",key:a,...c&&{anchor:l},display:d},r])}}}),Q(n).sort(([,o],[,u])=>"max"==="total"?xt(o,u):kt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=yt(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},st=(e,t,s={})=>Et(t,e,tt(s)).map(({suggestion:n})=>n),v=wt(Q(JSON.parse("{\"/\":{\"documentCount\":376,\"nextId\":376,\"documentIds\":{\"0\":\"v-8daa1a0e\",\"1\":\"v-8daa1a0e#🛠-easy-to-install\",\"2\":\"v-8daa1a0e#🚀-getting-started-tutorial\",\"3\":\"v-194812e8\",\"4\":\"v-194812e8#introduction\",\"5\":\"v-194812e8#read–eval–print-loop\",\"6\":\"v-194812e8#barewords\",\"7\":\"v-194812e8#expressions-and-statements\",\"8\":\"v-194812e8#functions-and-methods\",\"9\":\"v-194812e8#the-bang-prefix\",\"10\":\"v-194812e8#rosetta-stone\",\"11\":\"v-194812e8#basic-syntax\",\"12\":\"v-194812e8#quoting-strings\",\"13\":\"v-194812e8#code-comments\",\"14\":\"v-194812e8#variables\",\"15\":\"v-194812e8#global-variables\",\"16\":\"v-194812e8#environmental-variables\",\"17\":\"v-194812e8#type-inference\",\"18\":\"v-194812e8#scalars\",\"19\":\"v-194812e8#arrays\",\"20\":\"v-194812e8#piping-and-redirection\",\"21\":\"v-194812e8#pipes\",\"22\":\"v-194812e8#redirection\",\"23\":\"v-194812e8#redirecting-to-files\",\"24\":\"v-194812e8#type-conversion\",\"25\":\"v-194812e8#cast\",\"26\":\"v-194812e8#format\",\"27\":\"v-194812e8#sub-shells\",\"28\":\"v-194812e8#filesystem-wildcards-globbing\",\"29\":\"v-194812e8#brace-expansion\",\"30\":\"v-194812e8#executables\",\"31\":\"v-194812e8#aliases\",\"32\":\"v-194812e8#public-functions\",\"33\":\"v-194812e8#private-functions\",\"34\":\"v-194812e8#external-executables\",\"35\":\"v-194812e8#control-structures\",\"36\":\"v-194812e8#using-if-statements\",\"37\":\"v-194812e8#using-switch-statements\",\"38\":\"v-194812e8#using-foreach-loops\",\"39\":\"v-194812e8#using-formap-loops\",\"40\":\"v-194812e8#stopping-execution\",\"41\":\"v-194812e8#the-continue-statement\",\"42\":\"v-194812e8#the-break-statement\",\"43\":\"v-194812e8#the-exit-statement\",\"44\":\"v-194812e8#signal-sigint\",\"45\":\"v-194812e8#signal-sigquit\",\"46\":\"v-194812e8#signal-sigtstp\",\"47\":\"v-145ac574\",\"48\":\"v-145ac574#articles\",\"49\":\"v-145ac574#_22-04-2023-reading-lists-from-the-command-line\",\"50\":\"v-145ac574#_02-10-2021-the-split-personalities-of-shell-usage\",\"51\":\"v-145ac574@0\",\"52\":\"v-7057da6b\",\"53\":\"v-7057da6b#preface\",\"54\":\"v-7057da6b#reading-lines-in-bash-and-similar-shells\",\"55\":\"v-7057da6b#but-what-if-my-files-aren-t-line-delimited\",\"56\":\"v-7057da6b#iteration-in-bash-via-jq\",\"57\":\"v-7057da6b#iteration-in-murex-via-foreach\",\"58\":\"v-7057da6b#reading-json-arrays-in-powershell\",\"59\":\"v-7057da6b#conclusion\",\"60\":\"v-7057da6b#see-also\",\"61\":\"v-fef7c8f4\",\"62\":\"v-fef7c8f4#a-very-brief-history\",\"63\":\"v-fef7c8f4#opposing-requirements\",\"64\":\"v-fef7c8f4#the-traditional\",\"65\":\"v-fef7c8f4#the-modern\",\"66\":\"v-fef7c8f4#powershell\",\"67\":\"v-fef7c8f4#oil\",\"68\":\"v-fef7c8f4#murex\",\"69\":\"v-fef7c8f4#conclusion\",\"70\":\"v-fef7c8f4#see-also\",\"71\":\"v-3145ebbe\",\"72\":\"v-3145ebbe#reading-lines\",\"73\":\"v-3145ebbe#but-what-if-my-files-aren-t-line-delimited\",\"74\":\"v-3145ebbe#structured-iteration-in-murex\",\"75\":\"v-3145ebbe#the-foreach-builtin\",\"76\":\"v-3145ebbe#the-formap-builtin\",\"77\":\"v-3145ebbe#lambdas\",\"78\":\"v-3145ebbe#conclusion\",\"79\":\"v-3145ebbe#see-also\",\"80\":\"v-510ed0d4\",\"81\":\"v-510ed0d4#articles\",\"82\":\"v-510ed0d4#_02-07-2023-what-s-new-in-murex-v4-3\",\"83\":\"v-510ed0d4#_19-06-2023-what-s-new-in-murex-v4-2\",\"84\":\"v-510ed0d4#_04-06-2023-what-s-new-in-murex-v4-1-x\",\"85\":\"v-510ed0d4#_26-03-2023-what-s-new-in-murex-v4-0\",\"86\":\"v-510ed0d4#_12-02-2023-what-s-new-in-murex-v3-1\",\"87\":\"v-510ed0d4#_31-12-2022-what-s-new-in-murex-v3-0\",\"88\":\"v-510ed0d4#_12-09-2022-what-s-new-in-murex-v2-11\",\"89\":\"v-510ed0d4#_01-08-2022-what-s-new-in-murex-v2-10\",\"90\":\"v-510ed0d4#_15-07-2022-what-s-new-in-murex-v2-9\",\"91\":\"v-510ed0d4#_23-05-2022-what-s-new-in-murex-v2-8\",\"92\":\"v-510ed0d4#_15-05-2022-what-s-new-in-murex-v2-7\",\"93\":\"v-510ed0d4#_26-02-2022-what-s-new-in-murex-v2-6\",\"94\":\"v-510ed0d4#_12-02-2022-what-s-new-in-murex-v2-5\",\"95\":\"v-510ed0d4#_09-12-2021-what-s-new-in-murex-v2-4\",\"96\":\"v-510ed0d4#_26-09-2021-what-s-new-in-murex-v2-3\",\"97\":\"v-510ed0d4#_21-06-2021-what-s-new-in-murex-v2-2\",\"98\":\"v-510ed0d4#_30-04-2021-what-s-new-in-murex-v2-1\",\"99\":\"v-510ed0d4#_17-04-2021-what-s-new-in-murex-v2-0\",\"100\":\"v-510ed0d4@0\",\"101\":\"v-6ef35007\",\"102\":\"v-6ef35007#see-also\",\"103\":\"v-70a828a6\",\"104\":\"v-70a828a6#breaking-changes\",\"105\":\"v-70a828a6#user-facing-changes\",\"106\":\"v-70a828a6#non-user-facing-maintenance-changes\",\"107\":\"v-70a828a6#see-also\",\"108\":\"v-b6e01f08\",\"109\":\"v-b6e01f08#see-also\",\"110\":\"v-b3766dca\",\"111\":\"v-b3766dca#see-also\",\"112\":\"v-725d0145\",\"113\":\"v-725d0145#breaking-changes\",\"114\":\"v-725d0145#user-facing-changes\",\"115\":\"v-725d0145#non-user-facing-maintenance-changes\",\"116\":\"v-725d0145#see-also\",\"117\":\"v-7411d9e4\",\"118\":\"v-7411d9e4#user-facing-changes\",\"119\":\"v-7411d9e4#non-user-facing-maintenance-changes\",\"120\":\"v-7411d9e4#see-also\",\"121\":\"v-75c6b283\",\"122\":\"v-75c6b283#breaking-changes\",\"123\":\"v-75c6b283#user-facing-changes\",\"124\":\"v-75c6b283#non-user-facing-maintenance-changes\",\"125\":\"v-75c6b283#see-also\",\"126\":\"v-777b8b22\",\"127\":\"v-777b8b22#see-also\",\"128\":\"v-793063c1\",\"129\":\"v-793063c1#see-also\",\"130\":\"v-7ae53c60\",\"131\":\"v-7ae53c60#see-also\",\"132\":\"v-7c9a14ff\",\"133\":\"v-7c9a14ff#see-also\",\"134\":\"v-7e4eed9e\",\"135\":\"v-7e4eed9e#see-also\",\"136\":\"v-52570634\",\"137\":\"v-52570634#see-also\",\"138\":\"v-4eed54f6\",\"139\":\"v-4eed54f6#see-also\",\"140\":\"v-3eb5a9c5\",\"141\":\"v-3eb5a9c5#breaking-changes\",\"142\":\"v-3eb5a9c5#features\",\"143\":\"v-3eb5a9c5#non-user-facing-maintenance-changes\",\"144\":\"v-3eb5a9c5#bug-fixes\",\"145\":\"v-3eb5a9c5#see-also\",\"146\":\"v-406a8264\",\"147\":\"v-406a8264#v4-1-7300\",\"148\":\"v-406a8264#breaking-changes\",\"149\":\"v-406a8264#features\",\"150\":\"v-406a8264#bug-fixes\",\"151\":\"v-406a8264#v4-1-6140\",\"152\":\"v-406a8264#breaking-changes-1\",\"153\":\"v-406a8264#features-1\",\"154\":\"v-406a8264#bug-fixes-1\",\"155\":\"v-406a8264#v4-1-5200\",\"156\":\"v-406a8264#breaking-changes-2\",\"157\":\"v-406a8264#features-2\",\"158\":\"v-406a8264#bug-fixes-2\",\"159\":\"v-406a8264#v4-1-4200\",\"160\":\"v-406a8264#breaking-changes-3\",\"161\":\"v-406a8264#features-3\",\"162\":\"v-406a8264#bug-fixes-3\",\"163\":\"v-406a8264#v4-1-3010\",\"164\":\"v-406a8264#breaking-changes-4\",\"165\":\"v-406a8264#features-4\",\"166\":\"v-406a8264#bug-fixes-4\",\"167\":\"v-406a8264#v4-1-1100\",\"168\":\"v-406a8264#breaking-changes-5\",\"169\":\"v-406a8264#features-5\",\"170\":\"v-406a8264#bug-fixes-5\",\"171\":\"v-406a8264#v4-1-10\",\"172\":\"v-406a8264#breaking-changes-6\",\"173\":\"v-406a8264#features-6\",\"174\":\"v-406a8264#bug-fixes-6\",\"175\":\"v-421f5b03\",\"176\":\"v-421f5b03#breaking-changes\",\"177\":\"v-421f5b03#features\",\"178\":\"v-421f5b03#bug-fixes\",\"179\":\"v-421f5b03#see-also\",\"180\":\"v-43d433a2\",\"181\":\"v-43d433a2#breaking-changes\",\"182\":\"v-43d433a2#features\",\"183\":\"v-43d433a2#bug-fixes\",\"184\":\"v-43d433a2#see-also\",\"185\":\"v-1473bf53\",\"186\":\"v-1473bf53#catalog\",\"187\":\"v-1473bf53@0\",\"188\":\"v-4e65ec78\",\"189\":\"v-4e65ec78@0\",\"190\":\"v-4e65ec78@1\",\"191\":\"v-438ffe52\",\"192\":\"v-438ffe52#markdown-introduction\",\"193\":\"v-438ffe52#markdown-config\",\"194\":\"v-438ffe52#markdown-extension\",\"195\":\"v-438ffe52#vuepress-enhancement\",\"196\":\"v-438ffe52#theme-enhancement\",\"197\":\"v-438ffe52#custom-container\",\"198\":\"v-438ffe52#tabs\",\"199\":\"v-438ffe52#code-tabs\",\"200\":\"v-438ffe52#superscript-and-subscript\",\"201\":\"v-438ffe52#align\",\"202\":\"v-438ffe52#attrs\",\"203\":\"v-438ffe52#footnote\",\"204\":\"v-438ffe52#mark\",\"205\":\"v-438ffe52#tasklist\",\"206\":\"v-438ffe52#image-enhancement\",\"207\":\"v-438ffe52#card\",\"208\":\"v-438ffe52#chart\",\"209\":\"v-438ffe52#echarts\",\"210\":\"v-438ffe52#flowchart\",\"211\":\"v-438ffe52#mermaid\",\"212\":\"v-438ffe52#tex\",\"213\":\"v-438ffe52#include-files\",\"214\":\"v-438ffe52#code-demo\",\"215\":\"v-438ffe52#stylize\",\"216\":\"v-438ffe52#playground\",\"217\":\"v-438ffe52#vue-playground\",\"218\":\"v-438ffe52@0\",\"219\":\"v-438ffe52@1\",\"220\":\"v-6e19edb7\",\"221\":\"v-6e19edb7#page-information\",\"222\":\"v-6e19edb7#page-content\",\"223\":\"v-6e19edb7#page-structure\",\"224\":\"v-6e19edb7@0\",\"225\":\"v-6e19edb7@1\",\"226\":\"v-fffb8e28\",\"227\":\"v-fffb8e28#highlight-features\",\"228\":\"v-fffb8e28#bar\",\"229\":\"v-fffb8e28#foo\",\"230\":\"v-7727a2f8\",\"231\":\"v-7727a2f8#download-links\",\"232\":\"v-7727a2f8#darwin-macos\",\"233\":\"v-7727a2f8#bsd-s\",\"234\":\"v-7727a2f8#dragonflybsd\",\"235\":\"v-7727a2f8#freebsd\",\"236\":\"v-7727a2f8#netbsd\",\"237\":\"v-7727a2f8#openbsd\",\"238\":\"v-7727a2f8#linux\",\"239\":\"v-7727a2f8#windows\",\"240\":\"v-7727a2f8#solaris\",\"241\":\"v-7727a2f8#plan-9\",\"242\":\"v-7727a2f8#install-instructions\",\"243\":\"v-7727a2f8#linux-unix-macos-instructions\",\"244\":\"v-7727a2f8#windows-instructions\",\"245\":\"v-10811026\",\"246\":\"v-10811026#supported-platforms\",\"247\":\"v-10811026#pre-compiled-binaries-https-download\",\"248\":\"v-10811026#installing-from-a-package-manager\",\"249\":\"v-10811026#archlinux\",\"250\":\"v-10811026#homebrew\",\"251\":\"v-10811026#macports\",\"252\":\"v-10811026#compiling-from-source\",\"253\":\"v-10811026#installation-from-source-steps\",\"254\":\"v-10811026#including-optional-builtins\",\"255\":\"v-10811026#external-dependencies-optional\",\"256\":\"v-10811026#recommended-terminal-typeface\",\"257\":\"v-10811026@0\",\"258\":\"v-5c4792cc\",\"259\":\"v-5c4792cc#constants\",\"260\":\"v-5c4792cc#how-to-read-the-code-above\",\"261\":\"v-5c4792cc#unsupported-constants\",\"262\":\"v-5c4792cc#enabling-disabling-ansi-escape-sequences\",\"263\":\"v-5c4792cc#see-also\",\"264\":\"v-63f3b464\",\"265\":\"v-63f3b464#see-also\",\"266\":\"v-cd957f20\",\"267\":\"v-cd957f20#see-also\",\"268\":\"v-73b70804\",\"269\":\"v-73b70804#module-strings-for-non-module-code\",\"270\":\"v-73b70804#source\",\"271\":\"v-73b70804#repl\",\"272\":\"v-73b70804#see-also\",\"273\":\"v-c3f6a060\",\"274\":\"v-c3f6a060#overview\",\"275\":\"v-c3f6a060#readline\",\"276\":\"v-c3f6a060#hotkeys\",\"277\":\"v-c3f6a060#autocompletion\",\"278\":\"v-c3f6a060#syntax-completion\",\"279\":\"v-c3f6a060#syntax-highlighting\",\"280\":\"v-c3f6a060#spellchecker\",\"281\":\"v-c3f6a060#hint-text\",\"282\":\"v-c3f6a060#configuring-hint-text-colour\",\"283\":\"v-c3f6a060#custom-hint-text-statuses\",\"284\":\"v-c3f6a060#disabling-hint-text\",\"285\":\"v-c3f6a060#see-also\",\"286\":\"v-7b80e7e4\",\"287\":\"v-7b80e7e4#what-are-packages-and-modules\",\"288\":\"v-7b80e7e4#using-packages-and-modules\",\"289\":\"v-7b80e7e4#consistency\",\"290\":\"v-7b80e7e4#extendability\",\"291\":\"v-7b80e7e4#sharing-code\",\"292\":\"v-7b80e7e4#updating-packages\",\"293\":\"v-7b80e7e4#tracking-code\",\"294\":\"v-7b80e7e4#module-strings-for-non-module-code\",\"295\":\"v-7b80e7e4#source\",\"296\":\"v-7b80e7e4#repl\",\"297\":\"v-7b80e7e4#see-also\",\"298\":\"v-0c6a90de\",\"299\":\"v-0c6a90de#background\",\"300\":\"v-0c6a90de#in-murex\",\"301\":\"v-0c6a90de#see-also\",\"302\":\"v-6a483eca\",\"303\":\"v-6a483eca#examples\",\"304\":\"v-6a483eca#detail\",\"305\":\"v-6a483eca#named-pipes\",\"306\":\"v-6a483eca#see-also\",\"307\":\"v-ec27a1a8\",\"308\":\"v-ec27a1a8#murex-preload\",\"309\":\"v-ec27a1a8#murex-modules\",\"310\":\"v-ec27a1a8#murex-profile\",\"311\":\"v-ec27a1a8#overriding-the-default-paths-xdg\",\"312\":\"v-ec27a1a8#see-also\",\"313\":\"v-0de05b24\",\"314\":\"v-0de05b24#self-json\",\"315\":\"v-0de05b24#parent-num\",\"316\":\"v-0de05b24#scope-num\",\"317\":\"v-0de05b24#tty-bool\",\"318\":\"v-0de05b24#method-bool\",\"319\":\"v-0de05b24#not-bool\",\"320\":\"v-0de05b24#background-bool\",\"321\":\"v-0de05b24#module-str\",\"322\":\"v-0de05b24#args-json\",\"323\":\"v-0de05b24#params-json\",\"324\":\"v-0de05b24#murex-exe-str\",\"325\":\"v-0de05b24#murex-args-json\",\"326\":\"v-0de05b24#hostname-str\",\"327\":\"v-0de05b24#_0-str\",\"328\":\"v-0de05b24#_1-2-3-str\",\"329\":\"v-0de05b24#see-also\",\"330\":\"v-65af4f6b\",\"331\":\"v-65af4f6b#footnotes\",\"332\":\"v-65af4f6b#see-also\",\"333\":\"v-dcfe5636\",\"334\":\"v-dcfe5636#normal\",\"335\":\"v-dcfe5636#try\",\"336\":\"v-dcfe5636#try-pipe\",\"337\":\"v-dcfe5636#see-also\",\"338\":\"v-1f7d23c4\",\"339\":\"v-1f7d23c4#what-instantiates-a-new-scope\",\"340\":\"v-1f7d23c4#see-also\",\"341\":\"v-75dc2c1d\",\"342\":\"v-75dc2c1d#cli-spellchecker-3rd-party-software\",\"343\":\"v-75dc2c1d#murex-config\",\"344\":\"v-75dc2c1d#ansi-escape-sequences\",\"345\":\"v-75dc2c1d#spellcheck-enable\",\"346\":\"v-75dc2c1d#spellcheck-murex-code\",\"347\":\"v-75dc2c1d#how-to-write-your-own-spellcheck-func\",\"348\":\"v-75dc2c1d#user-dictionary\",\"349\":\"v-75dc2c1d#ignored-by-default\",\"350\":\"v-75dc2c1d#common-problems-with-aspell\",\"351\":\"v-75dc2c1d#error-no-word-lists-can-be-found-for-the-language-en-nz\",\"352\":\"v-75dc2c1d#see-also\",\"353\":\"v-5aa7d6b0\",\"354\":\"v-5aa7d6b0#tab-autocomplete\",\"355\":\"v-5aa7d6b0#ctrl-c-kill-foreground-process\",\"356\":\"v-5aa7d6b0#ctrl-d-end-of-file\",\"357\":\"v-5aa7d6b0#ctrl-f-find-in-autocomplete-suggestions\",\"358\":\"v-5aa7d6b0#ctrl-r-search-shell-history\",\"359\":\"v-5aa7d6b0#ctrl-u-clear-line\",\"360\":\"v-5aa7d6b0#ctrl-kill-all-running-processes\",\"361\":\"v-5aa7d6b0#ctrl-z-suspend-foreground-process\",\"362\":\"v-5aa7d6b0#esc-aka-vim-keys\",\"363\":\"v-5aa7d6b0#supported-keys\",\"364\":\"v-5aa7d6b0#full-screen-editing-via-editor\",\"365\":\"v-5aa7d6b0#recalling-previous-words\",\"366\":\"v-5aa7d6b0#see-also\",\"367\":\"v-541ace13\",\"368\":\"v-541ace13#introduction\",\"369\":\"v-541ace13#details\",\"370\":\"v-4ed928b1\",\"371\":\"v-5d5821d6\",\"372\":\"v-5d5821d6#introduction\",\"373\":\"v-5d5821d6#details\",\"374\":\"v-0b6fc5f8\",\"375\":\"v-7f4aff48\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[4,15],\"2\":[4,1],\"3\":[1,72],\"4\":[1,73],\"5\":[4,22],\"6\":[1,54],\"7\":[3,77],\"8\":[3,63],\"9\":[3,52],\"10\":[2,26],\"11\":[2],\"12\":[2,38],\"13\":[2,51],\"14\":[1,51],\"15\":[2,38],\"16\":[2,55],\"17\":[2,49],\"18\":[1,67],\"19\":[1,29],\"20\":[3],\"21\":[1,91],\"22\":[1,88],\"23\":[3,9],\"24\":[2,15],\"25\":[1,36],\"26\":[1,18],\"27\":[2,69],\"28\":[4,80],\"29\":[2,34],\"30\":[1],\"31\":[1,24],\"32\":[2,23],\"33\":[2,17],\"34\":[2,55],\"35\":[2],\"36\":[3,29],\"37\":[3,40],\"38\":[3,26],\"39\":[3,30],\"40\":[2],\"41\":[3,56],\"42\":[3,63],\"43\":[3,26],\"44\":[2,10],\"45\":[2,33],\"46\":[2,9],\"47\":[1,9],\"48\":[1],\"49\":[9,39],\"50\":[9,36],\"51\":[null,null,1],\"52\":[7,60],\"53\":[1,56],\"54\":[7,126],\"55\":[10,120],\"56\":[5,172],\"57\":[5,130],\"58\":[5,124],\"59\":[1,74],\"60\":[2,38],\"61\":[7,35],\"62\":[4,141],\"63\":[2,226],\"64\":[2,148],\"65\":[2,10],\"66\":[1,217],\"67\":[1,93],\"68\":[1,128],\"69\":[1,69],\"70\":[2,70],\"71\":[6,10],\"72\":[2,128],\"73\":[10,121],\"74\":[4,20],\"75\":[3,120],\"76\":[3,77],\"77\":[1,71],\"78\":[1,23],\"79\":[2,31],\"80\":[1,12],\"81\":[1],\"82\":[10,17],\"83\":[10,21],\"84\":[11,41],\"85\":[10,40],\"86\":[10,33],\"87\":[10,48],\"88\":[10,15],\"89\":[10,17],\"90\":[10,26],\"91\":[10,38],\"92\":[10,36],\"93\":[10,43],\"94\":[10,32],\"95\":[10,20],\"96\":[10,9],\"97\":[10,20],\"98\":[10,22],\"99\":[10,12],\"100\":[null,null,1],\"101\":[9,85],\"102\":[2,45],\"103\":[9,31],\"104\":[3,45],\"105\":[4,220],\"106\":[5,44],\"107\":[2,57],\"108\":[9,131],\"109\":[2,104],\"110\":[9,236],\"111\":[2,59],\"112\":[9,32],\"113\":[3,34],\"114\":[4,88],\"115\":[5,50],\"116\":[2,11],\"117\":[9,21],\"118\":[4,215],\"119\":[5,64],\"120\":[2,31],\"121\":[9,27],\"122\":[3,24],\"123\":[4,267],\"124\":[5,68],\"125\":[2,93],\"126\":[9,292],\"127\":[2,74],\"128\":[9,295],\"129\":[2,28],\"130\":[9,272],\"131\":[2,60],\"132\":[9,143],\"133\":[2,35],\"134\":[9,257],\"135\":[2,91],\"136\":[9,392],\"137\":[2,90],\"138\":[9,148],\"139\":[2,17],\"140\":[9,40],\"141\":[2,44],\"142\":[1,101],\"143\":[6,16],\"144\":[3,96],\"145\":[2,49],\"146\":[10,41],\"147\":[3],\"148\":[2,1],\"149\":[1,22],\"150\":[2,47],\"151\":[3],\"152\":[2,1],\"153\":[1,30],\"154\":[2,53],\"155\":[3],\"156\":[2,1],\"157\":[1,86],\"158\":[2,18],\"159\":[3],\"160\":[2,1],\"161\":[1,4],\"162\":[2,51],\"163\":[3],\"164\":[2,1],\"165\":[1,15],\"166\":[2,51],\"167\":[3],\"168\":[2,37],\"169\":[1,25],\"170\":[2,42],\"171\":[3],\"172\":[2,1],\"173\":[1,3],\"174\":[2,25],\"175\":[9,21],\"176\":[2,1],\"177\":[1,147],\"178\":[3,90],\"179\":[2,68],\"180\":[9,17],\"181\":[2,15],\"182\":[1,38],\"183\":[3,27],\"184\":[2,28],\"185\":[2],\"186\":[1,6],\"187\":[null,null,1],\"188\":[4,40],\"189\":[null,null,1],\"190\":[null,null,1],\"191\":[2,32],\"192\":[2,19],\"193\":[2,26],\"194\":[2,18],\"195\":[2,16],\"196\":[2,18],\"197\":[2,24],\"198\":[1,2],\"199\":[2,2],\"200\":[3,4],\"201\":[1,7],\"202\":[1,6],\"203\":[1,7],\"204\":[1,7],\"205\":[1,6],\"206\":[2,8],\"207\":[1,24],\"208\":[1,2],\"209\":[1,28],\"210\":[1,12],\"211\":[1,20],\"212\":[1,2],\"213\":[2,8],\"214\":[2,29],\"215\":[1,9],\"216\":[1,2],\"217\":[2,10],\"218\":[null,null,1],\"219\":[null,null,1],\"220\":[2,10],\"221\":[2,27],\"222\":[2,49],\"223\":[2,34],\"224\":[null,null,1],\"225\":[null,null,3],\"226\":[1],\"227\":[2],\"228\":[1,2],\"229\":[1,2],\"230\":[1,21],\"231\":[2,45],\"232\":[3,27],\"233\":[2],\"234\":[1,4],\"235\":[1,7],\"236\":[1,7],\"237\":[1,7],\"238\":[1,7],\"239\":[1,28],\"240\":[1,34],\"241\":[2,40],\"242\":[2],\"243\":[4,70],\"244\":[2,98],\"245\":[1,30],\"246\":[2,17],\"247\":[6,18],\"248\":[5],\"249\":[1,18],\"250\":[1,4],\"251\":[1,5],\"252\":[3,62],\"253\":[4,180],\"254\":[3,47],\"255\":[4,32],\"256\":[3,62],\"257\":[null,null,1],\"258\":[4,32],\"259\":[1,191],\"260\":[6,42],\"261\":[2,34],\"262\":[5,31],\"263\":[2,37],\"264\":[4,80],\"265\":[2,56],\"266\":[5,148],\"267\":[2,31],\"268\":[3,74],\"269\":[5],\"270\":[1,57],\"271\":[1,26],\"272\":[2,34],\"273\":[6,25],\"274\":[1,127],\"275\":[1,38],\"276\":[1,13],\"277\":[1,99],\"278\":[2,12],\"279\":[2,30],\"280\":[1,28],\"281\":[2,46],\"282\":[4,50],\"283\":[4,76],\"284\":[3,23],\"285\":[2,72],\"286\":[5,95],\"287\":[6,57],\"288\":[4],\"289\":[1,70],\"290\":[1,25],\"291\":[2,25],\"292\":[2,8],\"293\":[2,39],\"294\":[5],\"295\":[1,57],\"296\":[1,26],\"297\":[2,34],\"298\":[5,8],\"299\":[1,110],\"300\":[2,47],\"301\":[2,27],\"302\":[3,42],\"303\":[1,43],\"304\":[1,122],\"305\":[2,71],\"306\":[2,42],\"307\":[5,24],\"308\":[3,67],\"309\":[3,19],\"310\":[3,45],\"311\":[6,127],\"312\":[2,21],\"313\":[4,28],\"314\":[3,68],\"315\":[3,30],\"316\":[3,13],\"317\":[3,19],\"318\":[3,23],\"319\":[3,17],\"320\":[3,16],\"321\":[3,10],\"322\":[3,26],\"323\":[3,26],\"324\":[4,28],\"325\":[4,13],\"326\":[3,11],\"327\":[3,10],\"328\":[5,41],\"329\":[2,79],\"330\":[4,281],\"331\":[1,94],\"332\":[2,100],\"333\":[3,32],\"334\":[1,40],\"335\":[1,42],\"336\":[2,56],\"337\":[2,53],\"338\":[6,83],\"339\":[6,47],\"340\":[2,77],\"341\":[3,32],\"342\":[6,65],\"343\":[2],\"344\":[3,24],\"345\":[2,43],\"346\":[3,51],\"347\":[7,107],\"348\":[2,49],\"349\":[3,39],\"350\":[4],\"351\":[13,64],\"352\":[2,90],\"353\":[4,10],\"354\":[2,8],\"355\":[6,13],\"356\":[6,20],\"357\":[7,86],\"358\":[6,30],\"359\":[5,5],\"360\":[6,38],\"361\":[6,22],\"362\":[5,24],\"363\":[2,76],\"364\":[5,24],\"365\":[3,43],\"366\":[2,10],\"367\":[2],\"368\":[1,5],\"369\":[1,2],\"370\":[1,4],\"371\":[2],\"372\":[1,5],\"373\":[1,2],\"374\":[1,4],\"375\":[2]},\"averageFieldLength\":[3.297965086509879,50.94068697685311,0.07374452801852371],\"storedFields\":{\"0\":{\"h\":\"Murex\"},\"1\":{\"h\":\"🛠 Easy to Install\",\"t\":[\"Install Murex from your favorite package manager\",\"More options are available in the INSTALL document\"]},\"2\":{\"h\":\"🚀 Getting Started Tutorial\",\"t\":[\"Tutorial\"]},\"3\":{\"h\":\"\",\"t\":[\"Table of Contents\",\"Introduction\",\"Read–Eval–Print Loop\",\"Barewords\",\"Expressions and Statements\",\"Functions and Methods\",\"The Bang Prefix\",\"Rosetta Stone\",\"Basic Syntax\",\"Quoting Strings\",\"Code Comments\",\"Variables\",\"Global variables\",\"Environmental Variables\",\"Type Inference\",\"Scalars\",\"Arrays\",\"Piping and Redirection\",\"Pipes\",\"Redirection\",\"Redirecting to files\",\"Type Conversion\",\"Cast\",\"Format\",\"Sub-Shells\",\"Filesystem Wildcards (Globbing)\",\"Brace expansion\",\"Executables\",\"Aliases\",\"Public Functions\",\"Private Functions\",\"External Executables\",\"Control Structures\",\"Using if Statements\",\"Using switch Statements\",\"Using foreach Loops\",\"Using formap Loops\",\"Stopping Execution\",\"The continue Statement\",\"The break Statement\",\"The exit Statement\",\"Signal: SIGINT\",\"Signal: SIGQUIT\",\"Signal: SIGTSTP\"]},\"4\":{\"h\":\"Introduction\",\"t\":[\"Murex is a typed shell. By this we mean it still passes byte streams along POSIX pipes (and thus will work with all your existing command line tools) but in addition will add annotations to describe the type of data that is being written and read. This allows Murex to expand upon your command line tools with some really interesting and advanced features not available in traditional shells.\",\"POSIX is a set of underlying standards that Linux, macOS and various other operating systems support. Most typed shells do not work well with existing commands whereas Murex does.\"]},\"5\":{\"h\":\"Read–Eval–Print Loop\",\"t\":[\"If you want to learn more about the interactive shell then there is a dedicated document detailing Murex's REPL features.\"]},\"6\":{\"h\":\"Barewords\",\"t\":[\"Shells need to balance scripting with an efficient interactive terminal interface. One of the most common approaches to solving that conflict between readability and terseness is to make heavy use of barewords. Barewords are ostensibly just instructions that are not quoted. In our case, command names and command parameters.\",\"Murex also makes heavy use of barewords and so that places requirements on the choice of syntax we can use.\"]},\"7\":{\"h\":\"Expressions and Statements\",\"t\":[\"An expression is an evaluation, operation or assignment, for example:\",\"» 6 > 5 » fruit = %[ apples oranges bananas ] » 5 + 5 \",\"Expressions are type sensitive\",\"Whereas a statement is a shell command to execute:\",\"» echo \\\"Hello Murex\\\" » kill 1234 \",\"All values in a statement are treated as strings\",\"Due to the expectation of shell commands supporting bareword parameters, expressions have to be parsed differently to statements. Thus Murex first parses a command line to see if it is a valid expression, and if it is not, it then assumes it is an statement and parses it as such.\",\"This allow expressions and statements to be used interchangeably in a pipeline:\",\"» 5 + 5 | grep 10 \"]},\"8\":{\"h\":\"Functions and Methods\",\"t\":[\"A function is command that doesn't take data from STDIN whereas a method is any command that does.\",\"echo \\\"Hello Murex\\\" | grep \\\"Murex\\\" ^ a function ^ a method \",\"In practical terms, functions and methods are executed in exactly the same way however some builtins might behave differently depending on whether values are passed via STDIN or as parameters. Thus you will often find references to functions and methods, and sometimes for the same command, within these documents.\"]},\"9\":{\"h\":\"The Bang Prefix\",\"t\":[\"Some Murex builtins support a bang prefix. This prefix alters the behavior of those builtins to perform the conceptual opposite of their primary role.\",\"For example, you could grep a file with regexp 'm/(dogs|cats)/' but then you might want to exclude any matches by using !regexp 'm/(dogs|cats)/' instead.\",\"The details for each supported bang prefix will be in the documents for their respective builtin.\"]},\"10\":{\"h\":\"Rosetta Stone\",\"t\":[\"If you already know Bash and looking for the equivalent syntax in Murex, then our Rosetta Stone reference will help you to translate your Bash code into Murex code.\"]},\"11\":{\"h\":\"Basic Syntax\"},\"12\":{\"h\":\"Quoting Strings\",\"t\":[\"It is important to note that all strings in expressions are quoted whereas strings in statements can be barewords.\",\"There are three ways to quote a string in Murex:\",\"'single quote': use this for string literals (read more)\",\"\\\"double quote\\\": use this for infixing variables (read more)\",\"%(brace quote): use this for nesting quotes (read more)\"]},\"13\":{\"h\":\"Code Comments\",\"t\":[\"You can comment out a single like, or end of a line with #:\",\"# this is a comment echo Hello Murex # this is also a comment \",\"Multiple lines or mid-line comments can be achieved with /# and #/ tokens:\",\"/# This is a multi-line command #/ \",\"...which can also be inlined...\",\"» echo Hello /# comment #/ Murex \",\"(/# was chosen because it is similar to C-style comments however /* is a valid glob so Murex has substituted the asterisks with a hash symbol instead)\"]},\"14\":{\"h\":\"Variables\",\"t\":[\"All variables can be defined as expressions and their data types are inferred:\",\"name = \\\"bob\\\"\",\"age = 20 * 2\",\"fruit = %[ apples oranges bananas ]\",\"If any variables are unset then reading from them will produce an error (under Murex's default behavior):\",\"» echo $foobar Error in `echo` (1,1): variable 'foobar' does not exist \"]},\"15\":{\"h\":\"Global variables\",\"t\":[\"Global variables can be defined using the $GLOBAL namespace:\",\"» $GLOBAL.foo = \\\"bar\\\" \",\"You can also force Murex to read the global assignment of $foo (ignoring any local assignments, should they exist) using the same syntax. eg:\",\"» $GLOBAL.name = \\\"Tom\\\" » out $name Tom » $name = \\\"Sally\\\" » out $GLOBAL.name Tom » out $name Sally \"]},\"16\":{\"h\":\"Environmental Variables\",\"t\":[\"Environmental Variables are like global variables except they are copied to any other programs that are launched from your shell session.\",\"Environmental variables can be assigned using the $ENV namespace:\",\"» $ENV.foo = \\\"bar\\\" \",\"as well as using the export statement like with traditional shells. (read more)\",\"Like with global variables, you can force Murex to read the environmental variable, bypassing and local or global variables of the same name, by also using the $ENV namespace prefix.\"]},\"17\":{\"h\":\"Type Inference\",\"t\":[\"In general, Murex will try to infer the data type of a variable or pipe. It can do this by checking the Content-Type HTTP header, the file name extension or just looking at how that data was constructed (when defined via expressions). However sometimes you may need to annotate your types. Read more\"]},\"18\":{\"h\":\"Scalars\",\"t\":[\"In traditional shells, variables are expanded in a way that results in spaces be parsed as different command parameters. This results in numerous problems where developers need to remember to enclose variables inside quotes.\",\"Murex parses variables as tokens and expands them into the command line arguments intuitively. So, there are no more accidental bugs due to spaces in file names, or other such problems due to developers forgetting to quote variables. For example:\",\"» file = \\\"file name.txt\\\" » touch $file # this would normally need to be quoted » ls 'file name.txt' \"]},\"19\":{\"h\":\"Arrays\",\"t\":[\"Due to variables not being expanded into arrays by default, Murex supports an additional variable construct for arrays. These are @ prefixed:\",\"» files = %[file1.txt, file2.txt, file3.txt] » touch @files » ls file1.txt file2.txt \"]},\"20\":{\"h\":\"Piping and Redirection\"},\"21\":{\"h\":\"Pipes\",\"t\":[\"Murex supports multiple different pipe tokens. The main two being | and->.\",\"| works exactly the same as in any normal shell (read more)\",\"-> displays all of the supported methods (commands that support the output of the previous command). Think of it a little like object orientated programming where an object will have functions (methods) attached. (read more)\",\"In Murex scripts you can use | and -> interchangeably, so there's no need to remember which commands are methods and which are not. The difference only applies in the interactive shell where -> can be used with tab-autocompletion to display a shortlist of supported functions that can manipulate the data from the previous command. It's purely a clue to the parser to generate different autocompletion suggestions to help with your discovery of different commandline tools.\"]},\"22\":{\"h\":\"Redirection\",\"t\":[\"Redirection of stdout and stderr is very different in Murex. There is no support for the 2> or &1 tokens, instead you name the pipe inside angle brackets, in the first parameter(s).\",\"out is that processes stdout (fd1), err is that processes stderr (fd2), andnull is the equivalent of piping to /dev/null.\",\"Any pipes prefixed by a bang means reading from that processes stderr.\",\"So to redirect stderr to stdout you would use <!out>:\",\"err <!out> \\\"error message redirected to stdout\\\" \",\"And to redirect stdout to stderr you would use <err>:\",\"out <err> \\\"output redirected to stderr\\\" \",\"Likewise you can redirect either stdout, or stderr to /dev/null via <null> or <!null> respectively.\",\"command <!null> # ignore stderr command <null> # ignore stdout \",\"You can also create your own pipes that are files, network connections, or any other custom data input or output endpoint. read more\"]},\"23\":{\"h\":\"Redirecting to files\",\"t\":[\"out \\\"message\\\" |> truncate-file.txt out \\\"message\\\" >> append-file.txt \"]},\"24\":{\"h\":\"Type Conversion\",\"t\":[\"Aside from annotating variables upon definition, you can also transform data along the pipeline.\"]},\"25\":{\"h\":\"Cast\",\"t\":[\"Casting doesn't alter the data, it simply changes the meta-information about how that data should be read.\",\"out [1,2,3] | cast json | foreach { ... } \",\"There is also a little syntactic sugar to do the same:\",\"out [1,2,3] | :json: foreach { ... } \"]},\"26\":{\"h\":\"Format\",\"t\":[\"format takes the source data and reformats it into another data format:\",\"» out [1,2,3] | :json: format yaml - 1 - 2 - 3 \"]},\"27\":{\"h\":\"Sub-Shells\",\"t\":[\"There are two types of emendable sub-shells: strings and arrays.\",\"string sub-shells, ${ command }, take the results from the sub-shell and return it as a single parameter. This saves the need to encapsulate the shell inside quotation marks.\",\"array sub-shells, @{ command }, take the results from the sub-shell and expand it as parameters.\",\"Examples:\",\"touch ${ %[1,2,3] } # creates a file named '[1,2,3]' touch @{ %[1,2,3] } # creates three files, named '1', '2' and '3' \",\"The reason Murex breaks from the POSIX tradition of using backticks and parentheses is because Murex works on the principle that everything inside a curly bracket is considered a new block of code.\"]},\"28\":{\"h\":\"Filesystem Wildcards (Globbing)\",\"t\":[\"While glob expansion is supported in the interactive shell, there isn't auto-expansion of globbing in shell scripts. This is to protect against accidental damage. Instead globbing is achieved via sub-shells using either:\",\"g - traditional globbing (read more)\",\"rx - regexp matching in current directory only (read more)\",\"f - file type matching (read more)\",\"Examples:\",\"All text files via globbing:\",\"g *.txt \",\"All text and markdown files via regexp:\",\"rx '\\\\.(txt|md)$' \",\"All directories via type matching:\",\"f +d \",\"You can also chain them together, eg all directories named *.txt:\",\"g *.txt | f +d \",\"To use them in a shell script it could look something a like this:\",\"rm @{g *.txt | f +s} \",\"(this deletes any symlinks called *.txt)\"]},\"29\":{\"h\":\"Brace expansion\",\"t\":[\"In bash you can expand lists using the following syntax: a{1..5}b. In Murex, like with globbing, brace expansion is a function: a: a[1..5]b and supports a much wider range of lists that can be expanded. (read more)\"]},\"30\":{\"h\":\"Executables\"},\"31\":{\"h\":\"Aliases\",\"t\":[\"You can create \\\"aliases\\\" to common commands to save you a few keystrokes. For example:\",\"alias gc=git commit \",\"alias behaves slightly differently to Bash. (read more)\"]},\"32\":{\"h\":\"Public Functions\",\"t\":[\"You can create custom functions in Murex using function. (read more)\",\"function gc (message: str) { # shorthand for `git commit` git commit -m $message } \"]},\"33\":{\"h\":\"Private Functions\",\"t\":[\"private functions are like public functions except they are only available within their own modules namespace. (read more)\"]},\"34\":{\"h\":\"External Executables\",\"t\":[\"External executables (including any programs located in $PATH) are invoked via the exec builtin (read more) however if a command isn't an expression, alias, function nor builtin, then Murex assumes it is an external executable and automatically invokes exec.\",\"For example the two following statements are the same:\",\"exec uname\",\"uname\",\"Thus for normal day to day usage, you shouldn't need to include exec.\"]},\"35\":{\"h\":\"Control Structures\"},\"36\":{\"h\":\"Using if Statements\",\"t\":[\"if can be used in a number of different ways, the most common being:\",\"if { true } then { # do something } else { # do something else } \",\"if supports a flexible variety of incarnation to solve different problems. (read more)\"]},\"37\":{\"h\":\"Using switch Statements\",\"t\":[\"Because if ... else if chains are ugly, Murex supports switch statements:\",\"switch $USER { case \\\"Tom\\\" { out: \\\"Hello Tom\\\" } case \\\"Dick\\\" { out: \\\"Howdie Richard\\\" } case \\\"Sally\\\" { out: \\\"Nice to meet you\\\" } default { out: \\\"I don't know who you are\\\" } } \",\"switch supports a flexible variety of different usages to solve different problems. (read more)\"]},\"38\":{\"h\":\"Using foreach Loops\",\"t\":[\"foreach allows you to easily iterate through an array or list of any type: (read more)\",\"%[ apples bananas oranges ] | foreach fruit { out \\\"I like $fruit\\\" } \"]},\"39\":{\"h\":\"Using formap Loops\",\"t\":[\"formap loops are the equivalent of foreach but against map objects: (read more)\",\"%{ Bob: {age: 10}, Richard: {age: 20}, Sally: {age: 30} } | formap name person { out \\\"$name is $person[age] years old\\\" } \"]},\"40\":{\"h\":\"Stopping Execution\"},\"41\":{\"h\":\"The continue Statement\",\"t\":[\"continue will terminate execution of an inner block in iteration loops likeforeach and formap. Thus continuing the loop from the next iteration:\",\"%[1..10] | foreach i { if { $i == 5 } then { continue foreach # ^ jump back to the next iteration } out $i } \",\"continue requires a parameter to define while block to iterate on. This means you can use continue within nested loops and still have readable code. (read more)\"]},\"42\":{\"h\":\"The break Statement\",\"t\":[\"break will terminate execution of a block (eg function, private, if,foreach, etc):\",\"%[1..10] | foreach i { if { $i == 5 } then { break foreach # ^ exit foreach } out $i } \",\"break requires a parameter to define while block to end. Thus break can be considered to exhibit the behavior of return as well as break in other languages:\",\"function example { if { $USER == \\\"root\\\" } then { err \\\"Don't run this as root\\\" break example } # ... do something ... } \",\"break cannot exit anything above it's callers scope. (read more)\"]},\"43\":{\"h\":\"The exit Statement\",\"t\":[\"Terminates Murex. exit is not scope aware; if it is included in a function then the whole shell will still exist and not just that function. (read more)\"]},\"44\":{\"h\":\"Signal: SIGINT\",\"t\":[\"This can be invoked by pressing Ctrl + c.\"]},\"45\":{\"h\":\"Signal: SIGQUIT\",\"t\":[\"This can be invoked by pressing Ctrl + \\\\\",\"Sending SIGQUIT will terminate all running functions in the current Murex session. Which is a handy escape hatch if your shell code starts misbehaving.\"]},\"46\":{\"h\":\"Signal: SIGTSTP\",\"t\":[\"This can be invoked by pressing Ctrl + z\"]},\"47\":{\"h\":\"Blog\",\"t\":[\"Collection of Murex related documents and personal thoughts.\"]},\"48\":{\"h\":\"Articles\"},\"49\":{\"h\":\"22.04.2023 - Reading Lists From The Command Line\",\"t\":[\"How hard can it be to read a list of data from the command line? If your list is line delimited then it should be easy. However what if your list is a JSON array? This post will explore how to work with lists in a different command line environments.\"]},\"50\":{\"h\":\"02.10.2021 - The Split Personalities of Shell Usage\",\"t\":[\"Shell usage is split between the need to write something quickly and frequently verses the need to write something more complex but o\\nnly the once. In this article is explore those opposing use cases and how different $SHELLs have chosen to address them.\"]},\"51\":{\"c\":[\"Guide\"]},\"52\":{\"h\":\"Reading Lists From The Command Line - Blog\",\"t\":[\"How hard can it be to read a list of data from the command line? If your list is line delimited then it should be easy. However what if your list is a JSON array? This post will explore how to work with lists in a different command line environments.\",\"Table of Contents\",\"Preface\",\"Reading lines in Bash and similar shells\",\"But what if my files aren't line delimited?\",\"Iteration in Bash via jq\",\"Iteration in Murex via foreach\",\"Reading JSON arrays in PowerShell\",\"Conclusion\"]},\"53\":{\"h\":\"Preface\",\"t\":[\"A common problem we resort to shell scripting for is iterating through lists. This was easy in the days of old when most data was \\\\n (new line) delimited but these days structured data is common place with formats like JSON, YAML, TOML, XML and even S-Expressions appearing commonly throughout developer and DevOps tooling.\",\"So lets explore a few techniques for iterating through lists.\"]},\"54\":{\"h\":\"Reading lines in Bash and similar shells\",\"t\":[\"Bash shell is a popular command-line interface for Unix and Linux operating systems. One of its many useful features is the ability to read files line by line. This can be helpful for processing large files or performing repetitive tasks on a file's contents. The most basic way to read a file line by line is to use a while loop with the read command:\",\"while read line; do echo $line done < file.txt \",\"In this example, the while loop reads each line of the file.txt file and stores it in the $line variable. The echo command then prints the contents of the $line variable to the console. The < symbol tells Bash to redirect the contents of the file into the loop.\",\"The read command is what actually reads each line of the file. By default, it reads one line at a time and stores it in the variable specified. You can also use the -r option with the read command to disable backslash interpretation, which can be useful when dealing with files that contain backslashes.\",\"Another useful feature of Bash is the ability to perform operations on each line of a file before processing it. For example, you can use sed to replace text within each line of a file:\",\"while read line; do new_line=$(echo $line | sed 's/foo/bar/g') echo $new_line done < file.txt \",\"In this example, sed replaces all instances of \\\"foo\\\" with \\\"bar\\\" in each line of the file. The modified line is then stored in the $new_line variable and printed to the console.\",\"Of course you could just run\",\"sed 's/foo/bar/g' file.txt \",\"...but the reasons for the for this contrived example will follow.\"]},\"55\":{\"h\":\"But what if my files aren't line delimited?\",\"t\":[\"The problem with Bash, and all traditional Linux or UNIX shells, is that they operate on byte streams. To be fair, this isn't so much a fault of Bash per se but more a result of the design of UNIX where (almost) everything is a file, including pipes. This means everything is treated as bytes. Unlike, for example, Powershell which passes .NET objects around. Byte streams make complete sense when you're working on '70s or '80s mainframes but it is a little less productive in the modern world of structured formats like JSON.\",\"So how do you read lists from objects in, for example, JSON? In Bash, this isn't so easy. You need to rely on third party tools like jq. However you do have the benefit of compatibility with all of the older core utilities, like sed, that have become muscle memory by now. This does also come with its own drawbacks as well, which I'll explore in the following section.\"]},\"56\":{\"h\":\"Iteration in Bash via jq\",\"t\":[\"jq is a fantastic tool that has become a staple of many a CI/CD pipeline however it is not part of most operating systems base platform, so it would need to be installed separately. This also creates additional complications whereby you end up having a language within a language -- like running awk or sed inside Bash, you're now introducing jq too. Thus its syntax isn't always the easiest to grok when delving deep into nested JSON with conditionals and such like compared with shells that offer first party tools for working with objects. We can delve deeper into the power of jq in another article but for now we are going to keep things intentionally simple:\",\"Lets create a JSON array:\",\"json='[\\\"Monday\\\",\\\"Tuesday\\\",\\\"Wednesday\\\",\\\"Thursday\\\",\\\"Friday\\\",\\\"Saturday\\\",\\\"Sunday\\\"]' \",\"Straight away you should be able to see that Bash, with its reliance on whitespace delimitations, couldn't natively parse this. So now lets run it through jq:\",\"$ echo $json | jq -r '.[]' | while read -r day do; echo \\\"Happy $day\\\"; done Happy Monday Happy Tuesday Happy Wednesday Happy Thursday Happy Friday Happy Saturday Happy Sunday \",\"What's happening here is the jq tool is converting our JSON array into a \\\\n delimited list. And from there, we can use while and read just like we did in our first example at the start of this article.\",\"The -r flag tells jq to strip quotation marks around the values. Without -r you'd see Happy \\\"Monday\\\"' and so on and so forth.\",\".[] is jq syntax for \\\"all elements ([]) in the root object space (.).\"]},\"57\":{\"h\":\"Iteration in Murex via foreach\",\"t\":[\"Murex doesn't just treat files as byte streams, it passes type annotations too. And it uses those annotations to dynamically alter how to read files. The following examples will also use JSON as the input format, however Murex natively supports other structured data formats too, like YAML, CSV and S-Expressions.\",\"Lets use the same JSON array as we did earlier, except use one of Murex's features to generate arrays programmatically:\",\"» %[Monday..Sunday] [ \\\"Monday\\\", \\\"Tuesday\\\", \\\"Wednesday\\\", \\\"Thursday\\\", \\\"Friday\\\", \\\"Saturday\\\", \\\"Sunday\\\" ] \",\"The jq example rewritten in Murex would look like the following:\",\"%[Monday..Sunday] | foreach day { out \\\"Happy $day\\\" } \",\"What's happening here is %[...] creates the JSON array (as described above) and then the foreach builtin iterates through the array and assigns that element to a variable named day.\",\"out in Murex is the equivalent of echo in Bash. In fact you can still use echo in Murex albeit that is just aliased to out.\",\"It is also worth noting that since Murex version 3.1 lambdas have been available, allowing you to write code that looks a like this:\",\"$json[{out \\\"Hello $.\\\"}] \",\"But more on that in a different article.\"]},\"58\":{\"h\":\"Reading JSON arrays in PowerShell\",\"t\":[\"Microsoft PowerShell is a typed shell, like Murex, which was originally built for Windows but has since been ported to macOS and Linux too. Where PowerShell differs is that rather than using byte streams with type annotations, PowerShell passes .NET objects. Thus you'll see a little more boilerplate code in PowerShell where you need to explicitly convert types -- whereas Murex can get away with implicit definitions.\",\"$jsonString = '[\\\"Monday\\\",\\\"Tuesday\\\",\\\"Wednesday\\\",\\\"Thursday\\\",\\\"Friday\\\",\\\"Saturday\\\",\\\"Sunday\\\"]' $jsonObject = ConvertFrom-Json $jsonString foreach ($day in $jsonObject) { Write-Host \\\"Hello $day\\\" } \",\"The first line is just creating a JSON string and allocating that to $jsonString. We can largely ignore that as it is the same as we've seen in Bash already. The second line is more interesting as that is where the type conversion happens. ConvertFrom-Json does exactly as it describes -- PowerShell is generally pretty good at having descriptive names for commands,\",\"From there on it looks relatively similar to Murex syntax: foreach being the statement name, followed by the variable name.\"]},\"59\":{\"h\":\"Conclusion\",\"t\":[\"Iterating over a JSON array from the command line can be done in various ways using different shells. PowerShell, jq, and Murex offer their unique approaches and syntaxes, making it easy to work with JSON data in different environments. Whether you're a Windows user who prefers PowerShell or a Linux user who prefers Bash or Murex, there are many options available to suit your needs. Regardless of the shell you choose, mastering the art of iterating over JSON arrays can greatly enhance your command-line skills and help you work more efficiently with JSON data.\",\"Published: 22.04.2023 at 11:43\"]},\"60\":{\"h\":\"See Also\",\"t\":[\"Create array (%[]) constructor: Quickly generate arrays\",\"a (mkarray): A sophisticated yet simple way to build an array or list\",\"cast: Alters the data type of the previous function without altering it's output\",\"foreach: Iterate through an array\",\"formap:\\nIterate through a map or other collection of data\"]},\"61\":{\"h\":\"The Split Personalities of Shell Usage - Blog\",\"t\":[\"Shell usage is split between the need to write something quickly and frequently verses the need to write something more complex but only the once. In this article is explore those opposing use cases and how different $SHELLs have chosen to address them.\"]},\"62\":{\"h\":\"A Very Brief History\",\"t\":[\"In the very early days of UNIX you had the Thompson shell which supported pipes, some basic control structures and wildcards. Thompson shell was based after the Multics shell, which in turn was inspired from RUNCOM. In fact the 'rc' extension often seen in shell profiles is directly taken from RUNCOM.\",\"It wasn't until a little later that variables were a feature in shells. That came with the PWB shell, which was designed to be upwardly-compatible with the Thompson shell, supporting Thompson syntax while bringing advancements intended to make shell scripting much more practical.\",\"While the inspiration behind modern shells, RUNCOM, is a program that literally just ran commands from a file; it is this authors opinion that early UNIX shells were originally designed to be interactive terminals for launching applications first and foremost, with scripting as a feature that took a few years to mature. Furthermore, the ALGOL-inspired scripting commands were originally external executables and only later rewritten as shell builtins for performance reasons. For example running if in the shell would originallyfork() the executable /bin/if but that quickly became call a builtin function that was part of the shell itself.\",\"I believe it is these reasons why $SHELLs based on that lineage, be it the Bourne shell, Bash or Zsh, all share a scripting syntax which very much feels like it is extended from REPL usage.\"]},\"63\":{\"h\":\"Opposing Requirements\",\"t\":[\"The problem with shell usage is it falls into two contradictory categories equally:\",\"You need an interactive terminal that is optimized for the operators productivity. Since it is a REPL environment, any instructions you do pass are going to be write-many read-once. In other words, the syntax needs to be quick to type because it's going to be typed often. However it doesn't have to be particularly readable because you're not going to save and read back whatever instructions you've keyed into the REPL.\",\"You need the ability to write short scripts. The language here needs to be familiar because it is aimed at non-developers (otherwise they might just as well use C, FORTRAN, ALGOL or others) and succinct (again, otherwise a developer might as well use a compiled language). However it also should be readable because scripts are saved, recalled, reused and often extended over time. So they fall into the write-once read-many category.\",\"In an interactive program manager it makes sense to forgo quotation marks around strings, commas to separate parameters and semi-colons to terminate the line. Even the C shell, csh then later tcsh, doesn't follow C's syntax that strictly -- instead understanding that brevity is required for interactive use.\",\"When I first started writing my own shell, Murex, I originally started out with syntax that was inspired by the C. A pipeline would look something like the following:\",\"cat (\\\"./example.csv\\\") | grep (\\\"-n\\\", \\\"foobar\\\") \",\"While this came with some readability improvements, it was a massive pain to write over and over. So I added some syntax completion to the terminal, inspired by IDE's and how they attempt to minimize the repetition of entering syntax tokens. However this didn't remove the pain entirely, it just masked it a little. So I removed the redundant braces. But the enforced quotation marks were still annoying, so I decided to make the quotation marks optional. Then the commas were removed...and before I knew it, I'd basically just reinvented the same syntax for writing commands as everyone had already been using for a multitude of decades prior. What started out as the example above ended up looking more like the example below:\",\"cat ./example.csv | grep -n foobar \",\"(please excuse the useless use of cat in these examples -- it's purely there for illustrative reasons)\"]},\"64\":{\"h\":\"The Traditional\",\"t\":[\"As I've already hinted in the section before, Bourne, Bash, Zsh all fall nicely into the first camp. The write-many read-once camp. And that makes sense to me when I consider the evolution of those shells. Their heritage does stem from interactive terminals firstly and scripting secondly.\",\"The problem with traditional shells is that their grammar is lousy for anyone who needs a write-once read-many language. Worse still, while a significant amount of their grammar has now been included as builtins, for practical use operators often find themselves inlining other languages anyway, such as awk, sed, Perl and others. So it is understandable that a great many chose to do away with traditional shells for scripting and instead use more other, more powerful and readable languages like Python.\",\"Unfortunately the same problems transfer the other way too, in that I have already demonstrated why Python (and other programming languages) don't always make good shells. While I will conceded that there is a loyal fanbase who will swear by their Python REPL for terminal usage, and if they're happy with that then I salute them, their usage is as niche as those who enjoy using Bash for complex scripts. Perhaps the only language I've used which translates well both for terse REPLs and lengthier scripts is LISP.\"]},\"65\":{\"h\":\"The Modern\",\"t\":[\"So how are modern shells addressing these split concerns?\"]},\"66\":{\"h\":\"Powershell\",\"t\":[\"Microsoft had the benefit of being able to start from a clean room. They didn't need to inherit 50+ years of UNIX legacy when they wrote Powershell. So their approach was naturally to base their shell on .NET. Passing .NET objects around has a number of advantages over the POSIX specification of passing files, byte streams, to applications. This allows developers to write richer command line applications in their preferred .NET language rather than being tied to the shell's syntax. However one could argue the same is true with POSIX shells and how you can write a program in any language you like. But in Powershell those other .NET programs feel more tightly integrated into Powershell than a forked process does in Bash. Again, I put this down to Powershell passing .NET objects along the pipeline.\",\"Where Powershell falls down for me is in two key areas:\",\"Many of the flags passed are verbose. Calling .NET objects can be verbose. Take this example of base64 encoding a string:\",\" [Convert]::ToBase64String([System.Text.Encoding]::Unicode.GetBytes(\\\"TextToEncode\\\")) \",\"Powershell doesn't play nicely with POSIX. Okay, I'm arguably contradicting myself now because earlier I raised this as a benefit. And in many ways it is. However if you wish to run Powershell on Linux, which you can do, you may find that you'll want to work with CLI tools that do \\\"think\\\" in terms of byte streams. Many of these tools have equivalent aliases written in .NET so you can appear to use them without escaping the rich programming environment provided by Powershell. However you may, and I often did, run into a great many scenarios where my expectations didn't match the practicalities of Powershell.\",\"(I will talk more about the second point in another article where I'll discuss pipelines, data types and the need for modern shells to understand rich data rather than treating everything as a flat stream of bytes)\",\"There is no question that Powershell is a more powerful REPL than Bash but it definitely slides more towards the \\\"write-once read-many\\\" end of the spectrum.\"]},\"67\":{\"h\":\"Oil\",\"t\":[\"Oil describes itself as the following:\",\"Oil is a new Unix shell. It's our upgrade path from bash to a better language and runtime. It's also for Python and JavaScript users who avoid shell!\",\"The way Oil achieves this is a lot of how PWB improved upon the Thompson shell in the 1970s. Oil aims to be upwards-compatible with Bash. Any command line or shell script you can run in Bash should, eventually, be supported in Oil as well. Oil can extend on that and support a syntax and grammar that is more readable and sane to write longer lived scripts in. Thus bridging the conflict between \\\"write-many\\\" and \\\"read-many\\\" languages.\",\"This make Oil one of the most interesting alternative shells I have come across.\"]},\"68\":{\"h\":\"Murex\",\"t\":[\"The approach Murex takes sits somewhere in between the previous two shells. It attempts to retain familiarity with POSIX syntax but isn't afraid to break compatibility where it makes sense. The emphasis is on creating grammar that is both succinct but also readable. This mission was driven from originally attempting to create something more familiar to Javascript developers then falling back to some old Bash-ism's when I realized that for all of it's warts, Bash and its kin aren't actually bad for quick REPL usage of C-style braces over ALGOL style named scopes:\",\"POSIX:\",\"if [ 0 -eq 1 ]; then echo '0 == 1' else echo '0 != 1' fi \",\"Murex:\",\"if { 0 == 1 } then { echo '0 == 1' } else { echo '0 != 1' } \",\"But since the curly braces are tokens, grammar like then / else become superfluous words that only exist for readability. So then we can make them optional. And you end up with a syntax that allows for a certain amount of golfing in the REPL should the operator want to save a few key strokes\",\"if { 0 == 1 } { echo '0 == 1' } { echo '0 != 1' } \"]},\"69\":{\"h\":\"Conclusion\",\"t\":[\"The write-many read-once tendencies of the interactive terminal and the write-once read-many demands of scripting might be difficult to consolidate but I do think it is achievable and I'm not convinced the current heavy weights do a good job at addressing those conflicting concerns. Whereas alternative shells like Oil, Elfish andMurex seem to be putting a lot more thought into this problem and it is really exciting seeing the different ideas that are being produced.\",\"Published: 02.10.2021 at 22:42\"]},\"70\":{\"h\":\"See Also\",\"t\":[\"Murex's Interactive Shell: What's different about Murex's interactive shell?\",\"Reading Lists From The Command Line: How hard can it be to read a list of data from the command line? If your list is line delimited then it should be easy. However what if your list is a JSON array? This post will explore how to work with lists in a different command line environments.\",\"Rosetta Stone: A tabulated list of Bashism's and their equivalent Murex syntax\",\"if:\\nConditional statement to execute different blocks of code depending on the result of the condition\"]},\"71\":{\"h\":\"Why Create A New Shell? - Blog\",\"t\":[\"This article discuses the motivation behind creating a new shell\"]},\"72\":{\"h\":\"Reading lines\",\"t\":[\"Bash shell is a popular command-line interface for Unix and Linux operating systems. One of its many useful features is the ability to read files line by line. This can be helpful for processing large files or performing repetitive tasks on a file's contents. The most basic way to read a file line by line is to use a while loop with the read command:\",\"#!/bin/bash while read line; do echo $line done < file.txt \",\"In this example, the while loop reads each line of the file.txt file and stores it in the $line variable. The echo command then prints the contents of the $line variable to the console. The < symbol tells Bash to redirect the contents of the file into the loop.\",\"The read command is what actually reads each line of the file. By default, it reads one line at a time and stores it in the variable specified. You can also use the -r option with the read command to disable backslash interpretation, which can be useful when dealing with files that contain backslashes.\",\"Another useful feature of Bash is the ability to perform operations on each line of a file before processing it. For example, you can use sed to replace text within each line of a file:\",\"#!/bin/bash while read line; do new_line=$(echo $line | sed 's/foo/bar/g') echo $new_line done < file.txt \",\"In this example, sed replaces all instances of \\\"foo\\\" with \\\"bar\\\" in each line of the file. The modified line is then stored in the $new_line variable and printed to the console.\",\"Of course you could just run\",\"sed 's/foo/bar/g' file.txt \",\"...but the reasons for the for this contrived example will follow.\"]},\"73\":{\"h\":\"But what if my files aren't line delimited?\",\"t\":[\"The problem with Bash, and all traditional Linux or UNIX shells, is that they operate on byte streams. To be fair, this isn't so much a fault of Bash per se but more a result of the design of UNIX where (almost) everything is a file, including pipes. This means everything is treated as bytes. Unlike, for example, Powershell which passes .NET objects around. Byte streams make complete sense when you're working on '70s or '80s mainframes but it is a little less productive in the modern world of structured formats like JSON.\",\"So how do you read lists from objects in, for example, JSON? In Bash, this isn't so easy. You need to rely on third party tools like jq and often end up throwing out all of the older core utilities, like sed, that have become muscle memory. In Powershell it is a lot easier but you then need .NET wrappers around your existing command line tools. In Murex you can have your proverbial cake and eat it.\"]},\"74\":{\"h\":\"Structured iteration in Murex\",\"t\":[\"The following examples will use JSON as the input format, however Murex natively supports other structured data formats too.\"]},\"75\":{\"h\":\"The foreach builtin\",\"t\":[\"Lets say you have an array that looks something like the following:\",\"» %[January..December] [ \\\"January\\\", \\\"February\\\", \\\"March\\\", \\\"April\\\", \\\"May\\\", \\\"June\\\", \\\"July\\\", \\\"August\\\", \\\"September\\\", \\\"October\\\", \\\"November\\\", \\\"December\\\" ] \",\"And lets say you wanted to only return months that ended in ber (excuse the following video but I find this track be B.E.R. to be a particularly effective earworm)\",\"Sure you could grep that in Bash but what you're left with isn't JSON. And what if that JSON is minified?\",\"[\\\"January\\\",\\\"February\\\",\\\"March\\\",\\\"April\\\",\\\"May\\\",\\\"June\\\",\\\"July\\\",\\\"August\\\",\\\"September\\\",\\\"October\\\",\\\"November\\\",\\\"December\\\"] \",\"Now reading each line isn't going to work.\",\"Murex doesn't just treat files as byte streams, it passes type annotations too. And it uses those annotations to dynamically alter how to read files. So you could grep only ber from minified JSON with a simple foreach { | grep \\\"ber\\\" }:\",\"$months = %[January..December] $months | foreach { | grep ber } \",\"The best thing is foreach will understand arrays from JSON, YAML, S-Expressions, CSV, and others... as well as regular terminal output. So it is one syntax to learn regardless of the input file format.\"]},\"76\":{\"h\":\"The formap builtin\",\"t\":[\"Arrays are easy though. What about maps? Or dictionaries, objects, hashes... as other languages might refer to them. Key value pairs are always going to be harder to parse because even with file formats like YAML, arrays are line delimited where as splitting key value pairs requires extra grokking.\",\"Murex also has an iterator for such constructs: formap:\",\"» echo '{\\\"a\\\":1,\\\"b\\\":2,\\\"c\\\":3}' | :json: formap key value { echo \\\"key=$key, value=$value\\\" } key=a, value=1 key=b, value=2 key=c, value=3 \",\"Here we are using :json: to cast / annotate the STDIN stream for formap.\"]},\"77\":{\"h\":\"Lambdas\",\"t\":[\"Lambdas were introduced in version 4.0 of Murex. Lambdas offer shortcuts around common matching problems with structured data. For example:\",\"» $example = %{a:1, b:2, c:3} » @example[{$.val == 2}] { \\\"b\\\": 2 } \",\"The way this particular lambda works is that for each element in $example the code block {$.val == 2} runs with the $. variable is assigned with a structure that looks like this:\",\"# first iteration { \\\"key\\\": \\\"a\\\", \\\"val\\\": 1 } # second iteration { \\\"key\\\": \\\"b\\\", \\\"val\\\": 2 } # third iteration { \\\"key\\\": \\\"c\\\", \\\"val\\\": 3 } \",\"Thus $.val (eg 2) would be compared to the number 2. If the result is true, that element is output. If the result is false then that element is ignored.\"]},\"78\":{\"h\":\"Conclusion\",\"t\":[\"There are a multitude of ways to iterate through structured data on Linux and UNIX systems.\",\"Published: 06.05.2021 at 08:24\"]},\"79\":{\"h\":\"See Also\",\"t\":[\"Create array (%[]) constructor: Quickly generate arrays\",\"cast: Alters the data type of the previous function without altering it's output\",\"foreach: Iterate through an array\",\"formap: Iterate through a map or other collection of data\",\"mkarray:\"]},\"80\":{\"h\":\"ChangeLog\",\"t\":[\"Track new features, any breaking changes, and the release history here.\"]},\"81\":{\"h\":\"Articles\"},\"82\":{\"h\":\"02.07.2023 - What's new in murex v4.3\",\"t\":[\"This brings improved support on Windows plus one breaking change from the previous release (v4.2)\"]},\"83\":{\"h\":\"19.06.2023 - What's new in murex v4.2\",\"t\":[\"Murex usage has raised considerably in recent weeks. This release addresses a number of feature requests and bugs raised on Github.\"]},\"84\":{\"h\":\"04.06.2023 - What's new in murex v4.1.x\",\"t\":[\"The previous releases have brought significant advancements to Murex's syntax but at the cost of longer gaps between releases. So the 4.1.x versions will be shorter releases but focusing on bug fixes. The 4.1.x release notes will be appended to murex.rocks changelog and available on Github releases too\"]},\"85\":{\"h\":\"26.03.2023 - What's new in murex v4.0\",\"t\":[\"This release sees significant improvements for use with non-latin characters in both the interactive prompt and shell scripting. It introduces new syntax to make working with structured data even easier than before. As well as new data types and smoother user experience.\"]},\"86\":{\"h\":\"12.02.2023 - What's new in murex v3.1\",\"t\":[\"This release includes mostly bug fixes and new experimental features which are opt into. To enable all experimental features, set the environmental variable MUREX_EXPERIMENTAL to any value. Or you can enable specific features individually via `config\"]},\"87\":{\"h\":\"31.12.2022 - What's new in murex v3.0\",\"t\":[\"This is a major release that brings a significant number of changes and improvements, including a complete overhaul of the parser. Backwards compatibility is a high priority however these new features bring greater readability and consistency to shell scripting. So while the older syntax remains for compatibility, it is worth migrating over to the newer syntax for all new code being written\"]},\"88\":{\"h\":\"12.09.2022 - What's new in murex v2.11\",\"t\":[\"This release mainly focuses on refinements in performance and usability, rather than introducing new features\"]},\"89\":{\"h\":\"01.08.2022 - What's new in murex v2.10\",\"t\":[\"This release brings a few minor improvements and bug fixes rather than big new headline features.\"]},\"90\":{\"h\":\"15.07.2022 - What's new in murex v2.9\",\"t\":[\"This release focuses on testing and REPL usability improvements but also includes updates several new run modes to make error handling easier in larger scripts.\"]},\"91\":{\"h\":\"23.05.2022 - What's new in murex v2.8\",\"t\":[\"This release comes with a number of experimental but stable features that might eventually become standard practice. The features are there to use if you with but adjacent from the older code so there is zero risk in updating to this version.\"]},\"92\":{\"h\":\"15.05.2022 - What's new in murex v2.7\",\"t\":[\"This update has introduced another potential breaking change for your safety: zero length arrays now fail by default. Also errors inside subshells will cause the parent command to fail if ran inside a try or trypipe block.\"]},\"93\":{\"h\":\"26.02.2022 - What's new in murex v2.6\",\"t\":[\"This update has introduced a potential breaking change: variables now need to be defined before usage otherwise the commandline will fail. Read notes to learn how to disable this feature where needed. Also included in this release is the select command as part of the standard build.\"]},\"94\":{\"h\":\"12.02.2022 - What's new in murex v2.5\",\"t\":[\"This release introduces a number of new builtins, fixes some regression bugs and supercharges the select optional builtin (which I plan to include into the core builtins for non-Windows users in the next release).\"]},\"95\":{\"h\":\"09.12.2021 - What's new in murex v2.4\",\"t\":[\"This release introduces a strict mode for variables, new builtin, performance improvements, and better error messages; plus a potential breaking change\"]},\"96\":{\"h\":\"26.09.2021 - What's new in murex v2.3\",\"t\":[\"This release includes significant changes to the interactive terminal\"]},\"97\":{\"h\":\"21.06.2021 - What's new in murex v2.2\",\"t\":[\"This is mainly a bug fix release but it does include one breaking change for config. Please read for details.\"]},\"98\":{\"h\":\"30.04.2021 - What's new in murex v2.1\",\"t\":[\"This release comes with support for inlining SQL and some major bug fixes plus a breaking change for config. Please read for details.\"]},\"99\":{\"h\":\"17.04.2021 - What's new in murex v2.0\",\"t\":[\"This release comes with spellchecking, inlined images, smarter syntax completion and more\"]},\"100\":{\"c\":[\"Guide\"]},\"101\":{\"h\":\"What's new in murex v2.0 - Change Log\",\"t\":[\"This release comes with spellchecking, inlined images, smarter syntax completion and more\",\"This release seems some major upgrade to the default experience:\",\"Inlined spellchecking enabled by default (requires aspell installed)\",\"[![asciicast](https://asciinema.org/a/408024.svg)](https://asciinema.org/a/408024) (see spellcheck link below) \",\"Support for inlining images enabled by default (was previously an external module)\",\"[![asciicast](https://asciinema.org/a/408028.svg)](https://asciinema.org/a/408028) \",\"Massively overhauled syntax completion\",\"Additional tab autocompletions included in base install\",\"Minor readline bug fixes: git commits\",\"Rewritten config backend which copies less data around\",\"Significantly more features documented: https://murex.rocks\",\"Plus this new blog!\",\"Published: 17.04.2021 at 12:49\"]},\"102\":{\"h\":\"See Also\",\"t\":[\"Modules and Packages: An introduction to Murex modules and packages\",\"Murex's Interactive Shell: What's different about Murex's interactive shell?\",\"Spellcheck: How to enable inline spellchecking\",\"config: Query or define Murex runtime settings\",\"murex-package: Murex's package manager\",\"open-image: Renders bitmap image data on your terminal\",\"open:\\nOpen a file with a preferred handler\"]},\"103\":{\"h\":\"What's new in murex v2.1 - Change Log\",\"t\":[\"This release comes with support for inlining SQL and some major bug fixes plus a breaking change for config. Please read for details.\",\"This release sees new optional features plus major bug fixes to the existing code base:\"]},\"104\":{\"h\":\"Breaking Changes:\",\"t\":[\"Two configshell keys have changed names:\",\"recursive-soft-timeout -> autocomplete-soft-timeout\",\"recursive-hard-timeout -> autocomplete-hard-timeout\",\"This is to better describe their functionality now that those values are also used for Dynamic and DynamicDesc autocompletions as well as recursive directory lookups.\",\"This change might break some of your existing profile config!\"]},\"105\":{\"h\":\"User Facing Changes:\",\"t\":[\"configshellmax-suggestions now defaults at 12 rather than 6\",\"New optional builtin, select, allows you to inline SQL queries against any tabulated output (eg ps -fe, jsonlines arrays, CSV files, etc). This works via importing output into an in memory sqlite3 database. However this also breaks cross compiling due to the C includes with sqlite3. Thus this builtin will remain optional for now.\",\"Rethink of how optionals are imported. Rather than modifying // +build headers in .go files, optionals can be copied (or symlinked) frombuiltins/imports_src -> builtins/imports_build. This enables us to write a user friendly pre-compiling build script to enable users to easily select which optional builtins to include.\",\"Stopping jobs via ^z has been fixed in UNIX. This was a regression bug introduced a while back however no tests were in place to catch it. Unfortunately this kind of testing would fall outside of unit testing each function so I'll need to add another layer of testing against the compiled executable to verify any future regressions like these: discussion To use this feature, run a command and then press ^z (ctrl+z) to pause the process. You can check which jobs have been paused via jobs and/or modify processes to run in the background/foreground via bg and fg.\",\"Added new API endpoints: ReadArrayWithType(). This solves some edge cases in foreach where elements might not match the same data type as the parent object (eg a json object might have int or str elements in an array)\",\"Rewritten how Dynamic autocompletions are executed to fall in line withDynamicDesc. This should bring improvements to running autocompletions in the background and thus improve the user experience with regards to the shell's responsiveness. The next step would be to have a lower soft-timeout\",\"Improvements to the context completions\",\"Default lengths for autocompletions where all results are deferred to the background have been tweaked slightly to give some extra length\",\"Minor website tweaks\"]},\"106\":{\"h\":\"Non-User Facing / Maintenance Changes\",\"t\":[\"All dependencies have been updated, pinned and the vendors directory rebuilt\",\"Fixed some issues flagged up in goreportcard.com\",\"Some internal API changes that have no UI/UX ramifications but makes the code more maintainable\",\"Lots more unit tests added\",\"Published: 30.04.2021 at 10:00\"]},\"107\":{\"h\":\"See Also\",\"t\":[\"* (generic) : generic (primitive)\",\"ReadArrayWithType() (type): Read from a data type one array element at a time and return the elements contents and data type\",\"bg: Run processes in the background\",\"csv: CSV files (and other character delimited tables)\",\"fg: Sends a background process into the foreground\",\"foreach: Iterate through an array\",\"jobs: Lists all running functions within the current Murex session\",\"jsonl: JSON Lines\",\"select:\\nInlining SQL into shell pipelines\"]},\"108\":{\"h\":\"What's new in murex v2.10 - Change Log\",\"t\":[\"This release brings a few minor improvements and bug fixes rather than big new headline features.\",\"Breaking Changes:\",\"None\",\"Features:\",\"Added support for ranges to be used as variables. eg\",\"f: +f -> set v echo: @v[2..]\",\"Complete re-write of f. It is now the tool I had always intended when I first created that builtin\",\"g now supports being run as a method (eg to filter items from a file list)\",\"rx now supports being run as a method (eg to filter items from a file list)\",\"Updated autocompletes for git\",\"Updated autocompletes for terraform\",\"Minor Changes:\",\"Added support for profiling\",\"Removed unused data types\",\"Dropped profile/ prefix from the module string for modules and profiles (as seen in FileRef)\",\"Bug Fixes:\",\"Lots of improvements to how || and && are used in other runmode's, try, and trypipe\",\"autoglob prompt now has a mutex wrapped around it to prevent concurrent processes sending the prompt haywire\",\"Spellchecker no longer underlines partial words\",\"Better removal of \\\\x16 and other non-printable characters leaking into readline\",\"Published: 01.08.2022 at 20:10\"]},\"109\":{\"h\":\"See Also\",\"t\":[\"And (&&) Logical Operator: Continues next operation if previous operation passes\",\"FileRef: How to track what code was loaded and from where\",\"Modules and Packages: An introduction to Murex modules and packages\",\"Murex Profile Files: A breakdown of the different files loaded on start up\",\"Or (||) Logical Operator: Continues next operation only if previous operation fails\",\"Schedulers: Overview of the different schedulers (or 'run modes') in Murex\",\"Spellcheck: How to enable inline spellchecking\",\"[ (range) : Outputs a ranged subset of data from STDIN\",\"autocomplete: Set definitions for tab-completion in the command line\",\"f: Lists or filters file system objects (eg files)\",\"g: Glob pattern matching for file system objects (eg *.txt)\",\"runmode: Alter the scheduler's behaviour at higher scoping level\",\"rx: Regexp pattern matching for file system objects (eg .*\\\\\\\\.txt)\",\"try: Handles errors inside a block of code\",\"trypipe:\\nChecks state of each function in a pipeline and exits block on error\"]},\"110\":{\"h\":\"What's new in murex v2.11 - Change Log\",\"t\":[\"This release mainly focuses on refinements in performance and usability, rather than introducing new features\",\"Breaking Changes:\",\"None\",\"Features:\",\"File index caching for faster completions (eg on mechanical drives). This happens upon shell start up (except on Darwin for security reasons) and after every cd\",\"Relaxed alias syntax. It now supports whitespace between the = statement (like set and let do)\",\"New aliases added for common methods which work against lists/arrays. Type list.{TAB} to see the complete list of methods\",\"Added support for alternative separator values in struct-keys\",\"Hint summaries are now cached, to improve performance on slower machines\",\"Opt in support to pre-cache hint summaries. This will also auto-disable appending colon to command suggestions in autocomplete. This is not enabled by default because it could negatively affect performance on some slower machines and is more of an aesthetic improvement. You can enable it by adding config: set shell pre-cache-hint-summaries true to your Murex profile\",\"New autocompletions for yay (ArchLinux)\",\"Some minor performance improvements\",\"website: updates to docs\",\"Bug Fixes:\",\"readline: max field size adjusted for autocompletes so more completions are visible at one time\",\"readline: all cropped autocompletions now provide an uncropped version in the hint text field\",\"readline: fix bug with history not getting written\",\"OS signals (^c et al) are now re-registered after each exec (fixes bug where some programs would \\\"steal\\\" ^c, breaking support for those signals upon subsequent execs)\",\"Fixed regression bug in man page parsing\",\"Added check for zero-length string used as a process name (this shouldn't ever happen under normal circumstances however closing this bug allows for a managed error rather than the code panicking)\",\"readline: Prompt environment reset on each loop (this change is to future-proof against potential bugs)\",\"Fixed race condition bug when some of the tests are run concurrently (this bug only existed in the unit tests but sometimes caused those tests to fail)\",\"Added CI tests for Go v19.x\",\"Published: 12.09.2022 at 08:10\"]},\"111\":{\"h\":\"See Also\",\"t\":[\"Murex Profile Files: A breakdown of the different files loaded on start up\",\"alias: Create an alias for a command\",\"autocomplete: Set definitions for tab-completion in the command line\",\"cd: Change (working) directory\",\"config: Query or define Murex runtime settings\",\"let: Evaluate a mathematical function and assign to variable (deprecated)\",\"set: Define a local variable and set it's value\",\"struct-keys:\\nOutputs all the keys in a structure as a file path\"]},\"112\":{\"h\":\"What's new in murex v2.2 - Change Log\",\"t\":[\"This is mainly a bug fix release but it does include one breaking change for config. Please read for details.\",\"This release sees new optional features plus major bug fixes to the existing code base:\"]},\"113\":{\"h\":\"Breaking Changes:\",\"t\":[\"One configshell key has changed it's name:\",\"spellcheck-block -> spellcheck-func\",\"This is to bring spellcheck inline with other keys that contain executable code.\",\"This change might break some of your existing profile config!\"]},\"114\":{\"h\":\"User Facing Changes:\",\"t\":[\"Windows coreutils no longer returns exit code of 13 for aliases\",\"Fixed regression bug in fg (added stronger testing here to prevent future regressions)\",\"Generic data type, *, now uses tabwriter to align columns\",\"Spellchecker error handling tweaked to be more user friendly\",\"Environmental variables can been created per command:\",\"<pre><code>» env <env:foo=bar> | grep foo foo=bar</code></pre> \",\"stdstream.SetDataType() only works on first call -- ignored thereafter. This will impact pipes that are written to by many processes but results in more predictable code due possible timing errors where different processes are overwriting the stream data type\",\"stdstream.SetDataType() only works on first call -- ignored thereafter. This will impact pipes that are written to by many processes but results in more predictable code due possible timing errors where different processes are overwriting the stream data type\"]},\"115\":{\"h\":\"Non-User Facing / Maintenance Changes\",\"t\":[\"All dependencies have been updated, pinned and the vendors directory rebuilt\",\"Fixed some issues flagged up in goreportcard.com\",\"Some internal API changes that have no UI/UX ramifications but makes the code more maintainable\",\"Lots more unit tests added\",\"Lots of code rewritten to avoid potential data races\",\"Published: 21.06.2021 at 21:51\"]},\"116\":{\"h\":\"See Also\",\"t\":[\"* (generic) : generic (primitive)\",\"fg:\\nSends a background process into the foreground\"]},\"117\":{\"h\":\"What's new in murex v2.3 - Change Log\",\"t\":[\"This release includes significant changes to the interactive terminal\",\"This release brings some major improvements to the discoverability of commands and their parameters in the interactive terminal.\"]},\"118\":{\"h\":\"User Facing Changes:\",\"t\":[\"New builtin: method. This is used to help turn some commands into a \\\"method\\\", similar in concept to object orientated development where the tab- completer will return a list of other commands that are compatible with the formers output data types. It's purely an autocompletion tool and has no effect in shell scripts.\",\"Autocompletion suggestions will differ based on what pipes are used. The idea behind this is to improve the discoverability of commands. All tokens can still be used to pipeline to any command type (like before). This rule only affects autocomplete suggestions in the interactive prompt.\",\"- `|` will show all available aliases, functions, builtins and external commands, as usual - `->` will default to showing only compatible commands defined in `method` (see above), however if no methods are found then `->` will fall back to suggesting all available aliases, functions, builtins and external commands, like `|`. The idea here is for `->` to surface commands that are commonly expected to be pipelined together but without forcing the user to pause and remember which token exposes what commands. While `|` is still available for familiarity \",\"Autocompletion de-duplication now places hyphen-prefixed flags at the end of the results when sorting. This helps bring more relevant flags forward, with hyphen-prefixed flags still visible when users press -\",\"External commands return a error message if the exit status is non-zero (issue #299)\",\"<pre><code>» exec: false Error in `exec` (1,1): exit status 1</code></pre> \",\"Index() ([) now returns a different data type from the root object if the element is a string, integer, float64, boolean or nil (issue #316)\",\"runtime was missing a few flags for reporting supported data types against the newer APIs\",\"Generic types (* / generic) to include two spaces between columns when marshalled\",\"Syntax highlighter colour tweaks -- no longer using background highlighting because that looks weird and unreadable on some terminal colour schemes\",\"Bug fixes to the fast parser\",\"Bug fixes to readline merged from v2.2.1200 (issue #362)\"]},\"119\":{\"h\":\"Non-User Facing / Maintenance Changes\",\"t\":[\"hcl and bson types now use ReadArray templates so their behavior should mimic JSON and YAML\",\"Fast parser is now aware of which pipe token (eg |, ->, =>, ?) is used\",\"Unit test concurrency fix\",\"New tests written for the fast parser\",\"Refactored code around hint text and completions to allow for a potential new UI feature to be built in the future\",\"Updated documentation\",\"Published: 26.09.2021 at 11:33\"]},\"120\":{\"h\":\"See Also\",\"t\":[\"Arrow Pipe (->) Token: Pipes STDOUT from the left hand command to STDIN of the right hand command\",\"POSIX Pipe (|) Token: Pipes STDOUT from the left hand command to STDIN of the right hand command\",\"method: Define a methods supported data-types\",\"runtime:\\nReturns runtime information on the internal state of Murex\"]},\"121\":{\"h\":\"What's new in murex v2.4 - Change Log\",\"t\":[\"This release introduces a strict mode for variables, new builtin, performance improvements, and better error messages; plus a potential breaking change\",\"There are a number of new features in this release\"]},\"122\":{\"h\":\"Breaking Changes:\",\"t\":[\"mkarray (a et al) no longer returns an error if the start and end ranges are the same. Instead it returns an array of 1 value.\"]},\"123\":{\"h\":\"User Facing Changes:\",\"t\":[\"Strict variables now supported (like set -u in Bash). This will mean any variables passed that haven't been initialized beforehand will cause that pipeline to fail. Currently this is opt in, a future release of Murex will flip that and make it opt out. So take this opportunity to enable it in your~/.murex_profile and test your scripts. Enable this via config:\",\"<pre><code>config: set proc strict-vars true</code></pre> This feature was requested in [issue #380](https://github.com/lmorg/murex/issues/380). \",\"New builtin: datetime. This builtin allows you to convert date and/or time strings of one format into strings of another format. datetime is a supercharged alternative to the UNIX command date aimed at making scripting easier.\",\"mkarray (a et al) now supports dates. eg [01-Jan-20..05-May-21]. If no start nor end date appears then mkarray assumes range starts or ends at current date.\",\"openagent profile for image data types has been improved. Murex now better supports tmux and iTerm2.\",\"runtime --config now displays FileRef for every set as well as define, named FileRefSet and FileRefDefine respectively. So you can now easily trace where global config is being set and defined.\",\"Better error messages in the interactive terminal.\",\"Prompt now defaults to only displaying current directory rather than the full path. You can revert this change by adding your own prompt in config. eg:\",\"<pre><code>config: set shell prompt { out \\\"{RESET}{YELLOW}${pwd_short} {RESET}» \\\" } config: set shell prompt-multiline { let len = ${pwd_short -> wc -c} - 1 printf \\\"%${$len}s » \\\" $linenum }</code></pre> \",\"Parser updated to better support multiline pipelines where the newline is escaped and a comment exists after issue #379. This only applies to shell scripts, the interactive terminal hasn't yet been updated to reflect this change.\",\"Fixed regression bugs with autocomplete parameters that affected some dynamic blocks.\",\"readline now caches syntax highlighting and hint text to improve the responsiveness of the interactive terminal. This is set to a hard limit of 200 cached items however that will be a configurable metric in a future release. Also planned for the future is caching autocompletion suggestions.\",\"Loading message added for the default profile, ie the one that is compiled into and thus shipped with Murex.\",\"Fixed bug with fid-list and jobs where they were outputting the p.Name struct rather than p.Name.String(). This lead to the process name appearing garbled under some circumstances.\",\"{BG-BLUE} emitted the wrong ANSI escape code, this has been corrected.\",\"Several readline bug fixes.\"]},\"124\":{\"h\":\"Non-User Facing / Maintenance Changes\",\"t\":[\"Thread safe copying of parameters upon fork. The previous code never actually generated any race conditions and I don't think ever could. However it was ambiguous. This new code makes the copy more explicit and appears to have also brought some minor performance improvements in benchmarks too.\",\"Behavioural test framework has been refactored to make it easier to add new behavioural tests.\",\"Lots of new tests added.\",\"Updated documentation.\",\"Published: 09.12.2021 at 08:00\"]},\"125\":{\"h\":\"See Also\",\"t\":[\"ANSI Constants: Infixed constants that return ANSI escape sequences\",\"FileRef: How to track what code was loaded and from where\",\"Modules and Packages: An introduction to Murex modules and packages\",\"Murex Profile Files: A breakdown of the different files loaded on start up\",\"a (mkarray): A sophisticated yet simple way to build an array or list\",\"config: Query or define Murex runtime settings\",\"datetime: A date and/or time conversion tool (like printf but for date and time values)\",\"fid-list: Lists all running functions within the current Murex session\",\"ja (mkarray): A sophisticated yet simply way to build a JSON array\",\"open: Open a file with a preferred handler\",\"openagent: Creates a handler function for `open\",\"runtime: Returns runtime information on the internal state of Murex\",\"ta (mkarray):\\nA sophisticated yet simple way to build an array of a user defined data-type\"]},\"126\":{\"h\":\"What's new in murex v2.5 - Change Log\",\"t\":[\"This release introduces a number of new builtins, fixes some regression bugs and supercharges the select optional builtin (which I plan to include into the core builtins for non-Windows users in the next release).\",\"Features:\",\"alter now supports --sum where structures are merged and numeric values are added together\",\"New builtin count. This has deprecated len however len will stick around as an alias for backwards compatibility\",\"New operators added to let: +=, -=, /=, *=\",\"New builtin addheading for adding headings to lists\",\"Compiled profile will now always execute even if Murex flags set to ignore the modules/user profile. This is so that aliases like len get set and thus Murex can still move forward with changes to builtins but without breaking backwards compatibility\",\"autocomplete now passes ISMETHOD variable to dynamic completions so those dynamic completions are aware if a command requesting auto-completion suggestions is being invoked as a method (mid-pipeline) or function (start of a pipeline)\",\"Index, [, now supports inlining element, [[, lookups. eg [ a b [/map/c] ]\",\"Dynamic auto-completions that include @IncFiles or @IncDirs will now automatically append files and/or directories to their auto-completion suggestions\",\"New autocomplete directives: IncExeAll (like IncExePath but includes builtins, functions, aliases), IncManPage (include results from the man page parser -- usually suppressed when autocomplete config is set)\",\"Disabled 'Loading default profile' message -- this was always pretty redundant but now that the compiled profile is being loaded all the time (eg murex -c 'command' or when called in a shebang), it's also now ugly too\",\"select now supports passing a file in the FROM syntax. eg select * FROM ./example.csv. The caveat here is this breaks currently auto-complete on column names\",\"select now supports multiple tables using either named pipes (eg select * FROM <table1>, <table2>) or variables (eg select * FROM \\\\$table1, \\\\$table2) passed in the FROM syntax. Variables should be escaped and you cannot mix and match between named pipes, file names nor variables. You can use any number of tables from 1 to 2^63-1 (64bit systems) or 1 to 2^31-1 (32bit systems). Which should be more than enough 😉\",\"config option for select to define default output data type where multiple tables are imported\",\"Lots of new and updated documentation!\",\"Non-user facing changes (internal changes to the Murex code base):\",\"open functions can now be called by other functions to take advantage of auto-typing and auto gunzip etc.\",\"tmp.Close() should return err. This isn't a bug but it might catch future bugs\",\"LazyLogging created to speed up writing tests against data structures\",\"utils/List package created to handle list / array / map functions. Also makes testing more complex routines easier\",\"Bug fixes:\",\"Regression bug fixed where prepend was invoking append\",\"streams.ReadCloser not setting context\",\"parameters.StringArray() should copy values instead of a pointer to ensure the underlying parameters are immutable\",\"Published: 12.02.2022 at 16:16\"]},\"127\":{\"h\":\"See Also\",\"t\":[\"Pipeline: Overview of what a \\\"pipeline\\\" is\",\"<> / read-named-pipe: Reads from a Murex named pipe\",\"alter: Change a value within a structured data-type and pass that change along the pipeline without altering the original source input\",\"autocomplete: Set definitions for tab-completion in the command line\",\"config: Query or define Murex runtime settings\",\"count: Count items in a map, list or array\",\"let: Evaluate a mathematical function and assign to variable (deprecated)\",\"pipe: Manage Murex named pipes\",\"select: Inlining SQL into shell pipelines\",\"set:\\nDefine a local variable and set it's value\"]},\"128\":{\"h\":\"What's new in murex v2.6 - Change Log\",\"t\":[\"This update has introduced a potential breaking change: variables now need to be defined before usage otherwise the commandline will fail. Read notes to learn how to disable this feature where needed. Also included in this release is the select command as part of the standard build.\",\"Breaking Change:\",\"strict-vars is enabled by default. This means if a variable doesn't exist / hasn't been instantiated then your command will fail. You can disable this by putting config: set proc strict-vars false inside any affected functions and/or in your ~/.murex_profile\",\"Features:\",\"select builtin now added to the default build. This built in will stream tabulated data into an in memory sqlite3 database and take SQL arguments to query that data. Thus allowing you to inline SQL queries as part of your native command line. This addition will add complications for anyone building from source on Windows. If you are a Windows user you are recommended to use WSL or, if you desperately need to use Murex natively on Windows, download the appropriate per-compiled binary from the downloads page\",\"When used in WSL, any Windows mounts included in $PATH will now be subject to the same inclusion rules as Windows file systems when Murex is used in Windows. This means only executables (ie files with .exe, amongst other, extensions are present). This has dramatically cleaned up autocomplete suggestions when running Murex in WSL.\",\"New autocomplete directive: FileRegexp. Use this if you want to return only files where the file name matches a defined pattern (eg only .txt files: \\\\.txt$)\",\"HTTP client (as used by get, getfile, post, open, etc) supports additional logic with dynamically guessing the correct data type to assign to STDOUT where the Content-Type hasn't been mapped. Any Content-Type with a +json suffix will be assumed to be json data type\",\"getfile output has been revamped. If STDOUT is a TTY then you'll now see a progress bar\",\".tfstate (Terraform state files) have been added to supported JSON extensions\",\"~/.ssh/config hosts have been added to SSH (et al)'s autocomplete suggestions\",\"murex-package: reload now only reloads packages, not .murex_preload nor .murex_profile`\",\"website tweaks: updated INSTALL doc, CSS fixes\",\"debug message added to warn when fork FIDs are being killed\",\"Non-user facing changes (internal changes to the Murex code base):\",\"Additional tests\",\"Older function definitions replaced with the newer (correct) way to define functions and methods. This allows for greater discovery in the interactive terminal\",\"Root unit tests finish quicker\",\"Bug fixes:\",\"HTTP client (as used by get, getfile, post, open, etc) wasn't breaking down the Content-Type header correctly. This only affected unknown MIME types where Murex had to guess the correct data type to assign to STDOUT. This is an edge case bug.\",\"while, when used without a separate parameter for the conditional logic, was buffering the STDOUT for each loop and outputting it after that iteration had ended. while now uses a \\\"tee\\\" stdio writer which means it can stream STDOUT while the iteration is in progress Synonyms:\",\"Published: 26.02.2022 at 18:33\"]},\"129\":{\"h\":\"See Also\",\"t\":[\"autocomplete: Set definitions for tab-completion in the command line\",\"config: Query or define Murex runtime settings\",\"select: Inlining SQL into shell pipelines\",\"while:\\nLoop until condition false\"]},\"130\":{\"h\":\"What's new in murex v2.7 - Change Log\",\"t\":[\"This update has introduced another potential breaking change for your safety: zero length arrays now fail by default. Also errors inside subshells will cause the parent command to fail if ran inside a try or trypipe block.\",\"Breaking Changes:\",\"zero length arrays returned from subshells (eg echo @{g this-file-does-not-exist}) should fail by default, like unset variables. This is enabled by default but can be disabled via config: set proc strict-arrays false\",\"autoglob should fail if it doesn't match any results. eg @g echo this-file-does-not-exist.*\",\"Subshells should fail parent command when used inside try and trypipe blocks. eg try { echo ${false} }\",\"Features:\",\"function now supports defining parameters\",\"Added support fro && eg do-something && do-something-else for chaining successful commands\",\"Added support for || eg do-something || do-something-else for chaining unsuccessful commands\",\"Added support for writing to the terminal emulator's titlebar via config: set shell titlebar-func { block }\",\"titlebar-func can also be written to your tmux window title via config: set shell tmux-echo true.\",\"New reserved variable: $HOSTNAME\",\"New reserved variables: $1 (and upwards) which correlates to the scope's parameter index. $1 is the functions first parameter. $2 is the second. $13 is the thirteenth.\",\"New reserved variable: $0 which contains the function name\",\"New event: onCommandCompletion (this is experimental and subject to change in the next release)\",\"Macro variables. eg echo Hello ^$name will prompt the user to enter a name. Macro variables are only support in the REPL\",\"read now supports flags (eg default option, etc) to allow for a better experience in shell scripting\",\"Minor Changes:\",\"You can now overwrite onKeyPress events. This no longer produces an error forcing you to remove the old event before adding the new one\",\"Autocompletion suggestions shouldn't be sorted is results include paths (improves the ordering of autocompletion suggestions)\",\"Autocompletion suggestions for openagent builtin\",\"Autocompletion suggestions for hashtags\",\"Test counts re-added to website\",\"Windows should show file extensions by default in autocompletion results\",\"Bug Fixes:\",\"Fix inverted logic on forceTTY: config: get proc force-tty false set by default, which then proxies STDERR and prints them in red\",\"ctrl+c (^c) now currectly sends SIGTERM rather than just ending the child process\",\"Better handling of SIGTERM\",\"SIGTSTP isn't working. Switched to SIGSTOP when (^z) doesn't\",\"Fix panic in event onFilesystemChange where fileRef is not getting passed correctly\",\"Fix panic in event onFilesystemChange where path is zero length string\",\"Some improvements to variable previews in the REPL\",\"count should check if it is a method\",\"AST cache now checked more regukarly. This is to reduce the risk of memory leaks during fuzz or load testing\",\"murex-docs still referred to len builtin. That should be changed to count\",\"Lots of fuzzing added -- a few edge case bugs discovered\",\"Published: 15.05.2022 at 22:49\"]},\"131\":{\"h\":\"See Also\",\"t\":[\"And (&&) Logical Operator: Continues next operation if previous operation passes\",\"Or (||) Logical Operator: Continues next operation only if previous operation fails\",\"Reserved Variables: Special variables reserved by Murex\",\"@g (autoglob) : Command prefix to expand globbing (deprecated)\",\"config: Query or define Murex runtime settings\",\"event: Event driven programming for shell scripts\",\"function: Define a function block\",\"openagent: Creates a handler function for `open\",\"read:read a line of input from the user and store as a variable\"]},\"132\":{\"h\":\"What's new in murex v2.8 - Change Log\",\"t\":[\"This release comes with a number of experimental but stable features that might eventually become standard practice. The features are there to use if you with but adjacent from the older code so there is zero risk in updating to this version.\",\"Breaking Changes:\",\"None\",\"Features:\",\"New data-type jsonc (Concatenated JSON). This is an experimental parser for reading multiple JSON documents in a single file or stream. The expectation is that it will eventually replace jsonl (jsonlines) and possibly even the default json data-type\",\"Autocomplete can now split on =. However this is an experimental feature\",\"New autocomplete directive: Goto. This is an experimental way to add a little more structure to autocomplete definitions without resorting to using dynamic code everywhere\",\"autocomplete directive FlagValues now supports two values: \\\"*\\\" and \\\"\\\". These define default properties regardless of the flag used\",\"Minor Changes:\",\"Unmatched records in index ([) when parsing a table now produces the same configurable behavior (erroring by default but which can be disabled) as when using index against an object\",\"Autocompletion suggestions for yarn\",\"Data-type field in function is now optional\",\"Lots of improvements to the docs\",\"Bug Fixes:\",\"$MyVar[[/path/to/element]] now behaves the same when used infixed as it did when used as a function\",\"Published: 23.05.2022 at 22:23\"]},\"133\":{\"h\":\"See Also\",\"t\":[\"Reserved Variables: Special variables reserved by Murex\",\"[[ (element): Outputs an element from a nested structure\",\"[ (index): Outputs an element from an array, map or table\",\"autocomplete: Set definitions for tab-completion in the command line\",\"function: Define a function block\",\"jsonc:\\nConcatenated JSON\"]},\"134\":{\"h\":\"What's new in murex v2.9 - Change Log\",\"t\":[\"This release focuses on testing and REPL usability improvements but also includes updates several new run modes to make error handling easier in larger scripts.\",\"Breaking Changes:\",\"None\",\"Features:\",\">> redirect (append to file) operator added. This is just syntactic sugar for -> >>. To redirect and overwrite/truncate a file use |> rather than >\",\"Support for automatic globbing in the commandline. This has to be enabled via config: set shell auto-glob true and you will get prompted for each glob. Any globs inside blocks will be ignored and this only works on the interactive prompt (ie not in scripts or background processes) -- these limitations are not a bug but by design\",\"Dynamic autocomplete suggestions are now cached for 5 seconds by default. This cache can be changed via the CacheTTL directive in autocomplete\",\"Additional scoping for try and trypipe. You can define the scope as being an entire function or a module. If set for an entire module then any functions, autocompletions, etc inside that module will inherit that try or trypipe mode automatically. These are set via the new builtin runmode\",\"New reserved variable $PWD (this was just a global variable previously)\",\"Additional flags added to range, @[\",\"New builtin, man-get-flags. This exposes Murex's internal man page parser to the command line scripts\",\"Binaries now produced for ARM64 Windows\",\"Minor Changes:\",\"The order in which namespaces are looked up has been altered since privates should be resolved before functions\",\"Updated autocomplete for homebrew, brew\",\"New autocomplete for AWS CLI, aws\",\"New autocomplete for yarn, yarn\",\"Murex unit tests should report progressively rather than everything upon completion\",\"Minimum recommended version of Go has been raised to 1.15. This is due to some bugs in dependencies when running tests against v1.13 and v1.14. Murex will technically compile and work on them but it not worth my time debugging why the CircleCI tests fail for those versions given their age\",\"Vendor directory removed. This isn't really needed now support is focused on newer versions of Go\",\"Website: New 404 error\",\"Website: search bar added\",\"The start of a massive push towards upping the test coverage\",\"Lots of improvements to the docs\",\"Bug Fixes:\",\"FileRef module string for functions forked from the REPL changed to murex/shell to bring it inline with the naming convention of other modules\",\"Published: 15.07.2022 at 20:35\"]},\"135\":{\"h\":\"See Also\",\"t\":[\"Append Pipe (>>) Token: Redirects STDOUT to a file and append its contents\",\"Reserved Variables: Special variables reserved by Murex\",\"Schedulers: Overview of the different schedulers (or 'run modes') in Murex\",\">> (append file): Writes STDIN to disk - appending contents if file already exists\",\"> (truncate file): Writes STDIN to disk - overwriting contents if file already exists\",\"[ (range) : Outputs a ranged subset of data from STDIN\",\"autocomplete: Set definitions for tab-completion in the command line\",\"config: Query or define Murex runtime settings\",\"function: Define a function block\",\"murex-docs: Displays the man pages for Murex builtins\",\"private: Define a private function block\",\"runmode: Alter the scheduler's behaviour at higher scoping level\",\"try: Handles errors inside a block of code\",\"trypipe:\\nChecks state of each function in a pipeline and exits block on error\"]},\"136\":{\"h\":\"What's new in murex v3.0 - Change Log\",\"t\":[\"This is a major release that brings a significant number of changes and improvements, including a complete overhaul of the parser. Backwards compatibility is a high priority however these new features bring greater readability and consistency to shell scripting. So while the older syntax remains for compatibility, it is worth migrating over to the newer syntax for all new code being written\",\"Breaking Changes:\",\"Optional builtin removed: bson. This was disabled by default and likely never used. So it has been removed to reduce Murex's testing footprint. It can easily be re-added if anyone does actually use it\",\"Optional builtin removed: coreutils. This was actually enabled by default for Windows builds. However rewriting Linux/UNIX coreutils for Windows support is a massive project in its own right and with the maturity of WSL there's almost no reason to run Murex on \\\"native Windows\\\". So the coreutils builtin has been dropped to allow us to focus on the responsibilities of the shell\",\"Features:\",\"Support for expressions, eg 5 * 5 or foobar = $foo + \\\"bar\\\", etc. This syntax can be used directly or specified specifically via the expr builtin\",\"New syntax sugar for creating JSON objects: %{ foo: bar }\",\"New syntax sugar for creating JSON arrays: %[ foo bar ]\",\"New syntax sugar for creating strings: %() (this is preferred over the, now deprecated, feature of parenthesis quotes)\",\"Ranges supported in [] (@[ is now deprecated)\",\"Support for multiline comments: /# comment #/. It is unfortunate this differs from C-style comments (/* comment */) but this has to be the case because /* is ambiguous for barewords in shells: is it a path and glob or a comment? Where as /# isn't a common term due to # denoting a comment\",\"If any processes pass null as a data type across the pipe, it will be ignored. This solves the problem where functions that don't write to STDOUT would still define the data type\",\"Config option auto-glob renamed to expand-glob, and now enabled by default\",\"Globbing exclusion list. This allows you to avoid annoying prompts when parameters shouldn't be expanded as globs by the shell (eg when using regular expressions). This can be managed via shell expand-glob-unsafe-commands option in config\",\"@g removed. It is no longer needed with expand-glob enabled by default\",\"New builtin: continue: skip subsequent processes in an iteration block and continue to next iteration\",\"New builtin: break: exit out of a block of code (eg in an iteration loop)\",\"Additional syntax for index ([): *1: 1st row, *A: 1st column\",\"New alias: help -> murex-docs. This brings Murex a little more inline with Bash et al\",\"pre-cache-hint-summaries now enabled by default after testing has demonstrated it doesn't have nearly as expensive footprint as first assumed\",\"Hitting TAB when nothing has been typed in the REPL will suggest past command lines\",\"^ autocompletion added\",\"getfile writes to disk if STDOUT is a TTY\",\"mkarray (eg ja) now writes an integer array if range is integers. eg ja: [1..3]. This change wouldn't affect a since that outputs as list of strings (for streaming performance reasons) rather than a data type aware document\",\"debug (method) output tweaked\",\"Improved error messages in a number places\",\"Revamped README / website landing page\",\"Non-User Facing / Maintenance Changes:\",\"Minimum Go version supported is now 1.17.x\",\"Main parser completely rewritten\",\"ReadArray API now requires a context.Context\",\"egrep references changed to grep -E to work around GNU grep deprecating support for egrep\",\"Added marshallers for boolean, null\",\"Variables.GetValue() now errors instead of returns nil when no variable set\",\"Additional tests. So many new tests added\",\"Lots of code refactoring\",\"Bug Fixes:\",\"regexp wasn't erroring if nothing was matched\",\"readline: fixed deadlock\",\"append and prepend now type aware (no longer converts all arrays into string arrays)\",\"foreach was setting variables as strings rather than honoring their original data type\",\"yarn autocompletion errors should be suppressed\",\"spellcheck missing break causing more occasionally incorrect instances of underlined words\",\"config wasn't passing data type when executing blocks via eval\",\"debug wasn't setting data type when used as a function\",\"macro variables don't re-prompt when the same variable is used multiple times\",\"Published: 31.12.2022 at 08:10\"]},\"137\":{\"h\":\"See Also\",\"t\":[\"[ (index): Outputs an element from an array, map or table\",\"[ (range) : Outputs a ranged subset of data from STDIN\",\"a (mkarray): A sophisticated yet simple way to build an array or list\",\"append: Add data to the end of an array\",\"break: terminate execution of a block within your processes scope\",\"config: Query or define Murex runtime settings\",\"continue: terminate process of a block within a caller function\",\"expr: Expressions: mathematical, string comparisons, logical operators\",\"foreach: Iterate through an array\",\"getfile: Makes a standard HTTP request and return the contents as Murex-aware data type for passing along Murex pipelines.\",\"ja (mkarray): A sophisticated yet simply way to build a JSON array\",\"murex-docs: Displays the man pages for Murex builtins\",\"prepend: Add data to the start of an array\",\"regexp:\\nRegexp tools for arrays / lists of strings\"]},\"138\":{\"h\":\"What's new in murex v3.1 - Change Log\",\"t\":[\"This release includes mostly bug fixes and new experimental features which are opt into. To enable all experimental features, set the environmental variable MUREX_EXPERIMENTAL to any value. Or you can enable specific features individually via `config\",\"Breaking Changes:\",\"None\",\"Features:\",\"default statement added to switch (this will deprecate catch, albeit catch will remain supported for compatibility)\",\"Option to change start directory: config: set shell start-directory $path (where $path is the working directory you wish to start the shell in)\",\"onCommandCompletion event no spawns a pty. This allows capturing of stdout while still presenting a tty to the executing process\",\"EXPERIMENTAL: preview files. This can be enabled via config: set shell preview-enabled true\",\"EXPERIMENTAL: preview images. This can be enabled via config: set shell preview-images true\",\"EXPERIMENTAL: tty buffer. This can be enabled via config: set shell tty-buffer-enabled true\",\"ctrl+r has been tweaked to make it more user friendly\",\"Long overdue SIGWINCH signal handler to reflow after terminal resized\",\"Lots of improvements to documentation\",\"Non-User Facing / Maintenance Changes:\",\"none\",\"Bug Fixes:\",\"re-added columns data-type to fix jobs builtin\",\"added bang alternatives to the glob exception list\",\"added missing support for && tokens in expressions\",\"![] can now produce empty maps\",\"fixed regression bug in file pipe mutex\",\"fixed missing bounds check in statement parser\",\"Published: 12.02.2023 at 21:22\"]},\"139\":{\"h\":\"See Also\",\"t\":[\"Rosetta Stone: A tabulated list of Bashism's and their equivalent Murex syntax\",\"switch:\\nBlocks of cascading conditionals\"]},\"140\":{\"h\":\"What's new in murex v4.0 - Change Log\",\"t\":[\"This release sees significant improvements for use with non-latin characters in both the interactive prompt and shell scripting. It introduces new syntax to make working with structured data even easier than before. As well as new data types and smoother user experience.\"]},\"141\":{\"h\":\"Breaking Changes\",\"t\":[\"$PWD is no longer a str. If you need to parse $PWD as a string then you should out: $PWD or use ${pwd}\",\". is now a valid bareword character for variables. This will break any instances in code that contain something like out $hello. however you can now use out $(hello). syntax for safer string infixing\"]},\"142\":{\"h\":\"Features\",\"t\":[\"dot notation added for variables which allow accessing and writing to object properties. eg $json.array.index\",\"added support variable encapsulation via $() to avoid variable barewords from leaking into other values when infixed. eg $(foobar) is the same as $foobar (read more)\",\"variable names can now be Unicode, eg $(比如) = \\\"举手之劳就可以使办公室更加环保，比如，使用再生纸。\\\" (read more)\",\"Unicode wide characters are properly handled in readline\",\"new data type path that is an object\",\"new data type paths\",\"support for lambdas added to variables: eg @array[{ function }]\",\"readline [ctrl]+[f] now supports word matching as well as regexp (read more)\",\"readline [ctrl]+[f] now supports glob filters (eg *.txt) too (read more)\",\"$ENV and $GLOBAL objects (deprecates the need for global and export)\",\"improved error messages in expressions\",\"scalars can be used as assignees in expressions, eg $foo = \\\"bar\\\"\",\"added -i flag to ssh autocompletion\",\"readline prompts are now buffered to reduce cursor flickering\"]},\"143\":{\"h\":\"Non-User Facing / Maintenance Changes:\",\"t\":[\"backend support added for data types to be dynamic objects\",\"updated autocompletion code for docker and git\"]},\"144\":{\"h\":\"Bug Fixes:\",\"t\":[\"better wide character support in auto completion suggestions\",\"function parameters default and comment fields are no longer order dependent\",\"better string parsing for barewords inside arrays and objects\",\"ahead of time hint caching now done on demand per hint page rather than against every executable upon Murex start up\",\"new lines should be ignored in %{}\",\"bareword true and false should be converted to boolean in %{}\",\"autocomplete suggestions are now dedup'ed when delayed results return similar suggestions to fast results\",\"various preview pane bug fixes\",\"support for ANSI escape sequences in experimental (disabled by default) TTY buffer\",\"correction to count docs\",\"error not handled in regexp expression matches, `=~\",\"Published: 26.03.2023 at 17:50\"]},\"145\":{\"h\":\"See Also\",\"t\":[\"Create array (%[]) constructor: Quickly generate arrays\",\"Murex's Interactive Shell: What's different about Murex's interactive shell?\",\"String ($) Token: Expand values as a string\",\"Terminal Hotkeys: A list of all the terminal hotkeys and their uses\",\"count: Count items in a map, list or array\",\"function: Define a function block\",\"create-object:\",\"path:\",\"paths:\"]},\"146\":{\"h\":\"What's new in murex v4.1.x - Change Log\",\"t\":[\"The previous releases have brought significant advancements to Murex's syntax but at the cost of longer gaps between releases. So the 4.1.x versions will be shorter releases but focusing on bug fixes. The 4.1.x release notes will be appended to murex.rocks changelog and available on Github releases too\"]},\"147\":{\"h\":\"v4.1.7300\"},\"148\":{\"h\":\"Breaking Changes\",\"t\":[\"None\"]},\"149\":{\"h\":\"Features\",\"t\":[\"generic * data type marshaller can now marshal maps (#593)\",\"range can count from end when supplied with a negative index (read more)\"]},\"150\":{\"h\":\"Bug Fixes\",\"t\":[\"fexec private should inherit module string from the owners module (#600)\",\"source-ed files should be loaded into a module of a similar name to the parent module\",\"new code blocks, {, should force a new parameter when following a closing block, } (#603)\",\"fixed problem with encapsulated variables, eg $(PWD), not getting parsed correctly by syntax highlighter\"]},\"151\":{\"h\":\"v4.1.6140\"},\"152\":{\"h\":\"Breaking Changes\",\"t\":[\"None\"]},\"153\":{\"h\":\"Features\",\"t\":[\"readline: blinking cursor added to fuzzy find. This is just a very minor UI change to make it easier to tell where keyboard input would be updating\",\"git autocomplete now includes git aliases\"]},\"154\":{\"h\":\"Bug Fixes\",\"t\":[\"merge operator (<~) should unmarshal strings\",\"scalars available in all assigns (eg +=, -=, etc)\",\"lazy assigns allowed when strict types is set to false. Meaning merge operations and += (et al) will work even if the left scalar is unset\",\"suppress !!! style warnings upon ^C\",\"strip : colon from command name when command string is passed from the pre-parser (#601)\"]},\"155\":{\"h\":\"v4.1.5200\"},\"156\":{\"h\":\"Breaking Changes\",\"t\":[\"None\"]},\"157\":{\"h\":\"Features\",\"t\":[\"Merge into operator added: ~>\",\"f: new flag i -- deprecates ? flag due to ? being a glob pattern. However ? will remain supported\",\"$PREFIX variable passed to Dynamic and DynamicDesc functions in autocomplete -- includes the partial term (read more)\",\"user@ completion support for ssh\",\"Updated autocomplete docs (read more)\",\"command line is included in error message when error running inside another module\",\"errors within other modules now include the command line string to make debugging even easier\",\"lambdas success/fail criteria is now driven by the exitnum rather than stdout data type. This allows it to be much more robust. In addition $. is now mutable\"]},\"158\":{\"h\":\"Bug Fixes\",\"t\":[\"f improved help message (previously some items displayed code numbers instead of descriptions)\",\"readline: hint text flicker removed\"]},\"159\":{\"h\":\"v4.1.4200\"},\"160\":{\"h\":\"Breaking Changes\",\"t\":[\"None\"]},\"161\":{\"h\":\"Features\",\"t\":[\"Merge operator added: <~\"]},\"162\":{\"h\":\"Bug Fixes\",\"t\":[\"readline: fixed out of bounds errors when calculating unicode cell positions\",\"readline: fixed panic raised when vim key p is used on an empty buffer\",\"readline: fixed bug where vim mode became unavailable / esc didn't work as expected. This was due to autocompletion find (^f, ^r) being launched before tab completions and state not being handled correctly\"]},\"163\":{\"h\":\"v4.1.3010\"},\"164\":{\"h\":\"Breaking Changes\",\"t\":[\"None\"]},\"165\":{\"h\":\"Features\",\"t\":[\"lambda support added to piped indexes, ie example -> [{ lambda }], to mirror existing @example[{ lambda }] functionality\",\"--autocomplete flag added to read\"]},\"166\":{\"h\":\"Bug Fixes\",\"t\":[\"application specific environmental variables (eg <env:FOO=BAR>) were not getting set\",\"cast now checks if it is a method. Previously was piping regardless\",\"fixed by where nested maps would overwrite when altered with --merge. Now they merge as expected\",\"alter panics are caught issue (#536)\",\"remove debugging symbol in deprecated math builtin\"]},\"167\":{\"h\":\"v4.1.1100\"},\"168\":{\"h\":\"Breaking Changes\",\"t\":[\"Any code that expects formap values to be strings despite that value being a different primitive from the originating object. However this type of code would be an anti-pattern so we shouldn't expect much, if any, code written like this\"]},\"169\":{\"h\":\"Features\",\"t\":[\"formap values are now data type aware. You no longer need to cast values. Keys are still string only and the intention is to keep them this way\"]},\"170\":{\"h\":\"Bug Fixes\",\"t\":[\"improved error messages around a few internal APIs\",\"micro optimisations in string parsing (minor order to operations, now converting points at a slightly later stage. This adds zero impact on code complexity and almost zero code refactoring but results in slightly less memory getting copied about)\"]},\"171\":{\"h\":\"v4.1.10\"},\"172\":{\"h\":\"Breaking Changes\",\"t\":[\"None\"]},\"173\":{\"h\":\"Features\",\"t\":[\"No new features\"]},\"174\":{\"h\":\"Bug Fixes\",\"t\":[\"code references in error messages are cropped to terminal width\",\"error handling around multiple chained but incompatible tokens (#566)\",\"Published: 04.06.2023 at 10:44\"]},\"175\":{\"h\":\"What's new in murex v4.2 - Change Log\",\"t\":[\"Murex usage has raised considerably in recent weeks. This release addresses a number of feature requests and bugs raised on Github.\"]},\"176\":{\"h\":\"Breaking Changes\",\"t\":[\"none\"]},\"177\":{\"h\":\"Features\",\"t\":[\"new flag in foreach: --step <int>. This allows the foreach to jump indexes at a time. When used, all the lines jumped are merged into a JSON array and that is passed to the foreach nested code block\",\"new alias builtin => fexec builtin. This was added to bring more familiarity to those coming from Bash et al (#608)\",\"on Darwin, Homebrew defaults are imported, just like you'd expect them to be from any other shell\",\"new hotkeys (#611) (#613):\",\"ctrl+a: jump to beginning of line\",\"ctrl+e: jump to end of line\",\"alt+f: jump forwards a word at a time\",\"alt+b: jump backwards a word at a time\",\"ctrl+k: clear line after cursor position\",\"ctrl+l: clear entire screen\",\"ctrl+g: same as esc\",\"open builtin should fallback to system default if type unknown (#620)\",\"pre-prompt-func added to config. Block runs before the interactive prompt is displayed\",\"post-prompt-func added to config. Block runs after the interactive prompt has been exited but before any command lines have been executed\",\"auto-cd option added to config: config: set shell auto-cd true. This allows you to traverse directories without having to prefix cd. By default it is disabled\",\"Meta values added to foreach, formap, and while. Meta values are a $. variable that holds meta-information about the running block, such as the number of iterations in a loop\",\"command alias for exec (for familiarity with Bash)\",\"builtin alias for fexec builtin (for familiarity with Bash)\"]},\"178\":{\"h\":\"Bug Fixes:\",\"t\":[\"brace encapsulated variables, eg $(foobar), now autocomplete as expected\",\"improvements to inlining images in iTerm2 when shell running on top of tmux. It still doesn't work reliably but this is an issue with tmux rather than Murex\",\"method forwards exceptions rather than errors. This behaviour has been changed to surface issues as errors\",\"profile_preload.mx added to profile defaults. This will be loaded before any of the OS-specific profiles\",\"missing rune length check causing the shell to panic (#617)\",\"fixed deadlock in flag parsing\",\"zero length string title bars should be ignored (#614)\",\"minor improvements to documentation\",\"Published: 19.06.2023 at 23:15\"]},\"179\":{\"h\":\"See Also\",\"t\":[\"Murex's Interactive Shell: What's different about Murex's interactive shell?\",\"Terminal Hotkeys: A list of all the terminal hotkeys and their uses\",\"alias: Create an alias for a command\",\"config: Query or define Murex runtime settings\",\"exec: Runs an executable\",\"fexec: Execute a command or function, bypassing the usual order of precedence.\",\"foreach: Iterate through an array\",\"formap: Iterate through a map or other collection of data\",\"method: Define a methods supported data-types\",\"open: Open a file with a preferred handler\",\"while:\\nLoop until condition false\"]},\"180\":{\"h\":\"What's new in murex v4.3 - Change Log\",\"t\":[\"This brings improved support on Windows plus one breaking change from the previous release (v4.2)\"]},\"181\":{\"h\":\"Breaking Changes\",\"t\":[\"pre-prompt-func and post-prompt-func have been replaced with onPrompt events: event onKeyPress example=before { ... }\"]},\"182\":{\"h\":\"Features\",\"t\":[\"New events, onPrompt, triggered when the interactive prompt is at various stages\",\"Dynamic and DynamicDesc autocompletions can have their partial term prefix filter disabled ([read more])(https://murex.rocks/docs/commands/autocomplete.html#ignoreprefix-boolean-false) (discussion)\",\"New autocompletions: gping\"]},\"183\":{\"h\":\"Bug Fixes:\",\"t\":[\"Improved Windows support. Arrow keys and other special keys are now handled correctly (#630)\",\"Fix ctrl+a offset by 1 error (#628)\",\"Published: 02.07.2023 at 09:55\"]},\"184\":{\"h\":\"See Also\",\"t\":[\"autocomplete: Set definitions for tab-completion in the command line\",\"config: Query or define Murex runtime settings\",\"event: Event driven programming for shell scripts\",\"onPrompt:\\nChanges in state of the interactive shell\"]},\"185\":{\"h\":\"Features demo\"},\"186\":{\"h\":\"Catalog\",\"t\":[\"Markdown Enhance\",\"Page Config\",\"Function Disable\"]},\"187\":{\"c\":[\"Guide\"]},\"188\":{\"h\":\"Disabling layout and features\",\"t\":[\"You can disable some function and layout on the page by setting the Frontmatter of the page.\",\"This page is an demo that disables the following features:\",\"Navbar\",\"Sidebar\",\"Breadcrumb\",\"Page information\",\"Contributors\",\"Edit link\",\"Update time\",\"Prev/Next link\",\"Comment\",\"Footer\",\"Back to top button\"]},\"189\":{\"c\":[\"Guide\"]},\"190\":{\"c\":[\"disable\"]},\"191\":{\"h\":\"Markdown Enhance\",\"t\":[\"VuePress basically generate pages from Markdown files. So you can use it to generate documentation or blog sites easily.\",\"You should create and write Markdown files, so that VuePress can convert them to different pages according to file structure.\"]},\"192\":{\"h\":\"Markdown Introduction\",\"t\":[\"If you are a new learner and don't know how to write Markdown, please read Markdown Intro and Markdown Demo.\"]},\"193\":{\"h\":\"Markdown Config\",\"t\":[\"VuePress introduce configuration for each markdown page using Frontmatter.\",\"Info\",\"Frontmatter is a important concept in VuePress. If you don't know it, you need to read Frontmatter Introduction.\"]},\"194\":{\"h\":\"Markdown Extension\",\"t\":[\"The Markdown content in VuePress will be parsed by markdown-it, which supports syntax extensions via markdown-it plugins.\"]},\"195\":{\"h\":\"VuePress Enhancement\",\"t\":[\"To enrich document writing, VuePress has extended Markdown syntax.\",\"For these extensions, please read Markdown extensions in VuePress.\"]},\"196\":{\"h\":\"Theme Enhancement\",\"t\":[\"By using vuepress-plugin-md-enhance, the theme extends more Markdown syntax and provides richer writing functions.\"]},\"197\":{\"h\":\"Custom Container\",\"t\":[\"Safely use {{ variable }} in Markdown.\",\"Custom Title\",\"A custom information container with code, link.\",\"const a = 1; \",\"Custom Title\",\"A custom tip container\",\"Custom Title\",\"A custom warning container\",\"Custom Title\",\"A custom danger container\",\"Custom Title\",\"A custom details container\",\"View Detail\"]},\"198\":{\"h\":\"Tabs\",\"t\":[\"View Detail\"]},\"199\":{\"h\":\"Code Tabs\",\"t\":[\"View Detail\"]},\"200\":{\"h\":\"Superscript and Subscript\",\"t\":[\"19th H2O\",\"View Detail\"]},\"201\":{\"h\":\"Align\",\"t\":[\"I am center\",\"I am right align\",\"View Detail\"]},\"202\":{\"h\":\"Attrs\",\"t\":[\"A word having id.\",\"View Detail\"]},\"203\":{\"h\":\"Footnote\",\"t\":[\"This text has footnote[1].\",\"View Detail\"]},\"204\":{\"h\":\"Mark\",\"t\":[\"You can mark important words .\",\"View Detail\"]},\"205\":{\"h\":\"Tasklist\",\"t\":[\" Plan A\",\" Plan B\",\"View Detail\"]},\"206\":{\"h\":\"Image Enhancement\",\"t\":[\"Support setting color scheme and size\",\"View Detail\"]},\"207\":{\"h\":\"Card\",\"t\":[\"title: Mr.Hope desc: Where there is light, there is hope logo: https://mrhope.site/logo.svg link: https://mrhope.site color: rgba(253, 230, 138, 0.15) \",\"View Detail\"]},\"208\":{\"h\":\"Chart\",\"t\":[\"View Detail\"]},\"209\":{\"h\":\"Echarts\",\"t\":[\"::: echarts A line chart\",\"{ \\\"xAxis\\\": { \\\"type\\\": \\\"category\\\", \\\"data\\\": [\\\"Mon\\\", \\\"Tue\\\", \\\"Wed\\\", \\\"Thu\\\", \\\"Fri\\\", \\\"Sat\\\", \\\"Sun\\\"] }, \\\"yAxis\\\": { \\\"type\\\": \\\"value\\\" }, \\\"series\\\": [ { \\\"data\\\": [150, 230, 224, 218, 135, 147, 260], \\\"type\\\": \\\"line\\\" } ] } \",\":::\",\"View Detail\"]},\"210\":{\"h\":\"Flowchart\",\"t\":[\"cond=>condition: Process? process=>operation: Process e=>end: End cond(yes)->process->e cond(no)->e \",\"View Detail\"]},\"211\":{\"h\":\"Mermaid\",\"t\":[\"--- title: Flowchart --- flowchart TB c1-->a2 subgraph one a1-->a2 end subgraph two b1-->b2 end subgraph three c1-->c2 end one --> two three --> two two --> c2 \",\"View Detail\"]},\"212\":{\"h\":\"Tex\",\"t\":[\"View Detail\"]},\"213\":{\"h\":\"Include files\",\"t\":[\"Markdown Enhance\",\"Page Config\",\"Function Disable\",\"View Detail\"]},\"214\":{\"h\":\"Code Demo\",\"t\":[\"::: normal-demo A normal demo\",\"<h1>VuePress Theme Hope</h1> <p>Is <span id=\\\"very\\\">very</span> powerful!</p> \",\"document.querySelector(\\\"#very\\\").addEventListener(\\\"click\\\", () => { alert(\\\"Very powerful!\\\"); }); \",\"span { color: red; } \",\":::\",\"View Detail\"]},\"215\":{\"h\":\"Stylize\",\"t\":[\"Donate Mr.Hope a cup of coffee. \",\"View Detail\"]},\"216\":{\"h\":\"Playground\",\"t\":[\"View Detail\"]},\"217\":{\"h\":\"Vue Playground\",\"t\":[\"::: vue-playground Vue Playground\",\"This is footnote content ↩︎\"]},\"218\":{\"c\":[\"Guide\"]},\"219\":{\"c\":[\"Markdown\"]},\"220\":{\"h\":\"Page Config\",\"t\":[\"Content before more comment is regarded as page excerpt.\"]},\"221\":{\"h\":\"Page Information\",\"t\":[\"You can set page information in Markdown's Frontmatter.\",\"The author is Ms.Hope.\",\"The writing date is January 1, 2020\",\"Category is \\\"Guide\\\"\",\"Tags are \\\"Page Config\\\" and \\\"Guide\\\"\"]},\"222\":{\"h\":\"Page Content\",\"t\":[\"You are free to write your Markdown here.\",\"Assets\",\"You can place images besides your Markdown files, but you should use relative links (i.e.: starting with ./) for them.\",\"For images in .vuepress/public directory, please use absolute links (i.e.: starting with /) for them.\",\"The theme contains a custom badge:\",\"A dark blue badge text badge at the end of line. \"]},\"223\":{\"h\":\"Page Structure\",\"t\":[\"This page should contain:\",\"BreadCrumb\",\"Title and information\",\"TOC (Table of Contents)\",\"Meta information including update time and contributors\",\"Comments\",\"Navbar\",\"Sidebar\",\"Footer\",\"Back to top button\",\"You can customize them in theme options and page frontmatter.\"]},\"224\":{\"c\":[\"Guide\"]},\"225\":{\"c\":[\"Page config\",\"Guide\"]},\"226\":{\"h\":\"Guide\"},\"227\":{\"h\":\"Highlight Features\"},\"228\":{\"h\":\"Bar\",\"t\":[\"baz\",\"...\"]},\"229\":{\"h\":\"Foo\",\"t\":[\"ray\",\"...\"]},\"230\":{\"h\":\"\",\"t\":[\"Table of Contents\",\"Download Links\",\"Darwin (macOS)\",\"BSD's\",\"DragonflyBSD\",\"FreeBSD\",\"NetBSD\",\"OpenBSD\",\"Linux\",\"Windows\",\"Solaris\",\"Plan 9\",\"Install Instructions\",\"Linux / UNIX / macOS Instructions\",\"Windows Instructions\"]},\"231\":{\"h\":\"Download Links\",\"t\":[\"Below are the instructions to download a pre-compiled binary via HTTPS. If you wish to install from source or use your preferred package manager, then please refer to the INSTALL page for further instructions.\",\"All files are approximately 6 MB in size (aside the Plan 9 builds which are 3 MB).\"]},\"232\":{\"h\":\"Darwin (macOS)\",\"t\":[\"The arm64 builds support the ARM-based M1 processor. Older Macs will need to run amd64. Murex is also available on Homebrew and MacPorts.\",\"murex-darwin-amd64.gz\",\"murex-darwin-arm64.gz\"]},\"233\":{\"h\":\"BSD's\"},\"234\":{\"h\":\"DragonflyBSD\",\"t\":[\"murex-dragonfly-amd64.gz\"]},\"235\":{\"h\":\"FreeBSD\",\"t\":[\"murex-freebsd-386.gz\",\"murex-freebsd-amd64.gz\",\"murex-freebsd-arm.gz\",\"murex-freebsd-arm64.gz\"]},\"236\":{\"h\":\"NetBSD\",\"t\":[\"murex-netbsd-386.gz\",\"murex-netbsd-amd64.gz\",\"murex-netbsd-arm.gz\",\"murex-netbsd-arm64.gz\"]},\"237\":{\"h\":\"OpenBSD\",\"t\":[\"murex-openbsd-386.gz\",\"murex-openbsd-amd64.gz\",\"murex-openbsd-arm.gz\",\"murex-openbsd-arm64.gz\"]},\"238\":{\"h\":\"Linux\",\"t\":[\"murex-linux-386.gz\",\"murex-linux-amd64.gz\",\"murex-linux-arm.gz\",\"murex-linux-arm64.gz\"]},\"239\":{\"h\":\"Windows\",\"t\":[\"These builds should be treated as experimental. Please use the Linux builds in WSL (Windows Subsystem for Linux) for a more stable experience on Windows.\",\"murex-windows-386.exe.zip\",\"murex-windows-amd64.exe.zip\",\"murex-windows-arm.exe.zip\"]},\"240\":{\"h\":\"Solaris\",\"t\":[\"This build should be treated as experimental however unlike the other experimental builds (Plan 9 and Windows), Solaris is at least POSIX compliant so expect fewer issues than on the non-POSIX platforms.\",\"murex-solaris-amd64.gz\"]},\"241\":{\"h\":\"Plan 9\",\"t\":[\"Plan9 is untested. The code compiles and it is syscall compatible with Plan9 operating systems, however you may experience bugs using Murex on Plan9. If you do encounter any issues then please raise them at:github.com/lmorg/murex/issues\",\"murex-plan9-386.gz\",\"murex-plan9-amd64.gz\",\"murex-plan9-arm.gz\"]},\"242\":{\"h\":\"Install Instructions\"},\"243\":{\"h\":\"Linux / UNIX / macOS Instructions\",\"t\":[\"Please download the appropriate .gz file from the list above, one that matches both your OS and CPU architecture.\",\"For example, to download a 64bit version for Linux:\",\"wget https://murex.rocks/bin/latest/murex-linux-amd64.gz gunzip murex-linux-amd64.gz chmod +x murex-linux-amd64 ./murex-linux-amd64 \",\"macOS builds are listed as darwin as per the name of Apple have given to their underlying OS.\",\"Most of these builds have received some level of user acceptance testing with Linux and macOS builds receiving the most attention, because that's what we use ourselves.\"]},\"244\":{\"h\":\"Windows Instructions\",\"t\":[\"Click the Windows link that matches your CPU architecture. Unzip using your preferred too then launch using your preferred console. Murex cannot be started via double clicking the executable -- it requires a starting from within an existing console session.\",\"Please also note that Windows support is also considered experimental. In part\\ndue to the lack of coreutils (as seen on Linux and UNIX) and in part due to\\nthe different underpinning technologies behind consoles / terminal emulators.\\nIf you do experience some wonky behavior then our recommendation is to run thelinux-amd64 build for Linux on top of WSL. The instructions above will guide\\nyou through installing on Linux, WSL install instructions can be found at the\\nfollowing site: docs.microsoft.com/en-us/windows/wsl/install-win10\"]},\"245\":{\"h\":\"Install\",\"t\":[\"Table of Contents\",\"Supported Platforms\",\"Pre-Compiled Binaries (HTTPS download)\",\"Installing From A Package Manager\",\"ArchLinux\",\"Homebrew\",\"MacPorts\",\"Compiling From Source\",\"Installation From Source Steps\",\"Including Optional Builtins\",\"External Dependencies (Optional)\",\"Recommended Terminal Typeface\"]},\"246\":{\"h\":\"Supported Platforms\",\"t\":[\"Linux, BSD and macOS are fully supported, with other platforms considered experimental and/or having known limitations.\"]},\"247\":{\"h\":\"Pre-Compiled Binaries (HTTPS download)\",\"t\":[\"If you wish to download a pre-compiled binary then head to the DOWNLOAD page to select your platform.\"]},\"248\":{\"h\":\"Installing From A Package Manager\"},\"249\":{\"h\":\"ArchLinux\",\"t\":[\"Available as an AUR package:\",\"PKGBUILD file:https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?h=murex\",\"AUR package repository:https://aur.archlinux.org/packages/murex\"]},\"250\":{\"h\":\"Homebrew\",\"t\":[\"brew install murex \"]},\"251\":{\"h\":\"MacPorts\",\"t\":[\"sudo port install murex \"]},\"252\":{\"h\":\"Compiling From Source\",\"t\":[\"Prerequisites:\",\"You will need go (Golang) compiler, gcc (C compiler) and git installed as well as your $GOPATH environmental variable set.\",\"Go 1.18 or higher is required.\",\"These should be easy to install on most operating systems however Windows is a lot more tricky with regards to gcc. Please check with your operating systems package manager first but see further reading below if you get stuck.\",\"Further Reading:\",\"How to install Go\",\"How to install git\",\"How to install gcc\",\"How to set GOPATH\"]},\"253\":{\"h\":\"Installation From Source Steps\",\"t\":[\"The following instructions are assuming you're compiling on a POSIX-compatible system like Linux, BSD or macOS. Compiling from source is untested on Plan 9 (if you run into issues there then please use the pre-compiled binary for that platform) and Windows. In the case of Windows you may run into issues with thegcc installation and some of the commands below will need to be adapted (egmurex.exe used instead of ./murex).\",\"Compiling from source is not recommended unless you already have a strong understanding of compiling Go projects for your specific platform.\",\"Importing the source code:\",\"At present, Murex depends on being in a specific directory hierarchy for the tests to work and packages to import correctly. These instructions will talk you through creating that initial structure ready to import the source into. Experienced users in Go may opt to ignore some of these steps and rungo get -u github.com/lmorg/murex instead. While this should work in most cases, it is difficult to run automated tests to ensure any updates doesn't break the go get import tool. And thus that approach is not officially supported. If you are in any doubt, please follow the git clone process below.\",\"First create the directory path and clone the source into the appropriate directory structure.\",\"mkdir -p $GOPATH/src/github.com/lmorg/murex cd $GOPATH/src/github.com/lmorg/murex git clone https://github.com/lmorg/murex . \",\"At this point you can add and remove any optional builtins by following the instructions on this located further down this document. This is entirely optional as Murex attempts to ship with sane defaults.\",\"Compile the code:\",\"go build github.com/lmorg/murex \",\"Test the executable (optional stage):\",\"./murex -c 'g: behavioural/*.mx -> foreach: f { source $f }; try {test: run *}' \",\"Start the shell:\",\"./murex \"]},\"254\":{\"h\":\"Including Optional Builtins\",\"t\":[\"Some optional builtins will be included by default, however there may be others you wish to include which are not part of the default build (such as qr). To add them, copy (or symlink) the applicable include file frombuiltins/import_src to builtins/import_build.\",\"A tool will be introduced in a later version to automate this.\"]},\"255\":{\"h\":\"External Dependencies (Optional)\",\"t\":[\"Some of Murex's extended features will have additional external dependencies.\",\"aspell: This is used for spellchecking. Murex will automatically enable or disable spellchecking based on whether aspell can be found in your $PATH.http://aspell.net\"]},\"256\":{\"h\":\"Recommended Terminal Typeface\",\"t\":[\"This is obviously just a subjective matter and everyone will have their own\\npersonal preference. However if I was asked what my preference was then that\\nwould be Hasklig. It's a clean typeface\\nbased off Source Code Pro but with a few added ligatures - albeit subtle ones\\ndesigned to make Haskell more readable. Those ligatures also suite Murex\\npretty well. So the overall experience is a clean and readable terminal.\"]},\"257\":{\"c\":[\"Guide\"]},\"258\":{\"h\":\"ANSI Constants - User Guide\",\"t\":[\"Infixed constants that return ANSI escape sequences\",\"ANSI Constants is a Murex convention of passing ANSI escape sequences into strings. It uses the {} notation with the constant name placed in between two curly braces. eg {GREEN}.\"]},\"259\":{\"h\":\"Constants\",\"t\":[\"Rather than duplicate the constants from source, and risk the documentation and implementation drifting, this document will embed the source directly below.\",\"package ansi var constants = map[string][]byte{ // ascii control codes \\\"^@\\\": {0}, \\\"^A\\\": {1}, \\\"^B\\\": {2}, \\\"^C\\\": {3}, \\\"^D\\\": {4}, \\\"^E\\\": {5}, \\\"^F\\\": {6}, \\\"^G\\\": {7}, \\\"^H\\\": {8}, \\\"^I\\\": {9}, \\\"^J\\\": {10}, \\\"^K\\\": {11}, \\\"^L\\\": {12}, \\\"^M\\\": {13}, \\\"^N\\\": {14}, \\\"^O\\\": {15}, \\\"^P\\\": {16}, \\\"^Q\\\": {17}, \\\"^R\\\": {18}, \\\"^S\\\": {19}, \\\"^T\\\": {20}, \\\"^U\\\": {21}, \\\"^V\\\": {22}, \\\"^W\\\": {23}, \\\"^X\\\": {24}, \\\"^Y\\\": {25}, \\\"^Z\\\": {26}, \\\"^[\\\": {27}, `^/`: {28}, \\\"^]\\\": {29}, \\\"^^\\\": {30}, \\\"^_\\\": {31}, \\\"^?\\\": {127}, // ascii human readable \\\"EOF\\\": {4}, \\\"EOT\\\": {4}, \\\"BELL\\\": {7}, \\\"BS-ISO\\\": {8}, \\\"LF\\\": {10}, \\\"CR\\\": {13}, \\\"CRLF\\\": {13, 10}, \\\"ESC\\\": {27}, \\\"ESCAPE\\\": {27}, \\\"BS-ASCII\\\": {127}, // ansi escape sequences \\\"CURSOR-UP\\\": {27, 91, 65}, \\\"CURSOR-DOWN\\\": {27, 91, 66}, \\\"CURSOR-FORWARDS\\\": {27, 91, 67}, \\\"CURSOR-BACKWARDS\\\": {27, 91, 68}, \\\"CURSOR-HOME\\\": {27, 91, 72}, \\\"CURSOR-HOME-VT100\\\": {27, 91, 49, 126}, \\\"CURSOR-END\\\": {27, 91, 70}, \\\"CURSOR-END-VT100\\\": {27, 91, 52, 126}, \\\"INS\\\": {27, 91, 50, 126}, \\\"INSERT\\\": {27, 91, 50, 126}, \\\"DEL\\\": {27, 91, 51, 126}, \\\"DELETE\\\": {27, 91, 51, 126}, // function keys \\\"F1-VT100\\\": {27, 79, 80}, \\\"F2-VT100\\\": {27, 79, 81}, \\\"F3-VT100\\\": {27, 79, 82}, \\\"F4-VT100\\\": {27, 79, 83}, \\\"F1\\\": {27, 91, 49, 49, 126}, \\\"F2\\\": {27, 91, 49, 50, 126}, \\\"F3\\\": {27, 91, 49, 51, 126}, \\\"F4\\\": {27, 91, 49, 52, 126}, \\\"F5\\\": {27, 91, 49, 53, 126}, \\\"F6\\\": {27, 91, 49, 55, 126}, \\\"F7\\\": {27, 91, 49, 56, 126}, \\\"F8\\\": {27, 91, 49, 57, 126}, \\\"F9\\\": {27, 91, 50, 48, 126}, \\\"F10\\\": {27, 91, 50, 49, 126}, \\\"F11\\\": {27, 91, 50, 51, 126}, \\\"F12\\\": {27, 91, 50, 52, 126}, // alt-num \\\"ALT-0\\\": {27, 48}, \\\"ALT-1\\\": {27, 49}, \\\"ALT-2\\\": {27, 50}, \\\"ALT-3\\\": {27, 51}, \\\"ALT-4\\\": {27, 52}, \\\"ALT-5\\\": {27, 53}, \\\"ALT-6\\\": {27, 54}, \\\"ALT-7\\\": {27, 55}, \\\"ALT-8\\\": {27, 56}, \\\"ALT-9\\\": {27, 57}, } var sgr = map[string][]byte{ // text effects \\\"RESET\\\": {27, 91, 48, 109}, \\\"BOLD\\\": {27, 91, 49, 109}, \\\"ITALIC\\\": {27, 91, 51, 109}, // Not commonly supported in terminals \\\"UNDERSCORE\\\": {27, 91, 52, 109}, \\\"UNDERLINE\\\": {27, 91, 52, 109}, \\\"UNDEROFF\\\": {27, 91, '2', '4', 109}, \\\"BLINK\\\": {27, 91, 53, 109}, \\\"INVERT\\\": {27, 91, 55, 109}, \\\"ALT-FONT-1\\\": {27, 91, 49, 49, 109}, // Not commonly supported in terminals \\\"ALT-FONT-2\\\": {27, 91, 49, 50, 109}, // Not commonly supported in terminals \\\"ALT-FONT-3\\\": {27, 91, 49, 51, 109}, // Not commonly supported in terminals \\\"ALT-FONT-4\\\": {27, 91, 49, 52, 109}, // Not commonly supported in terminals \\\"ALT-FONT-5\\\": {27, 91, 49, 53, 109}, // Not commonly supported in terminals \\\"ALT-FONT-6\\\": {27, 91, 49, 54, 109}, // Not commonly supported in terminals \\\"ALT-FONT-7\\\": {27, 91, 49, 55, 109}, // Not commonly supported in terminals \\\"ALT-FONT-8\\\": {27, 91, 49, 56, 109}, // Not commonly supported in terminals \\\"ALT-FONT-9\\\": {27, 91, 49, 57, 109}, // Not commonly supported in terminals \\\"FRAKTUR\\\": {27, 91, 50, 48, 109}, // Not commonly supported in terminals // text colours \\\"BLACK\\\": {27, 91, 51, 48, 109}, \\\"RED\\\": {27, 91, 51, 49, 109}, \\\"GREEN\\\": {27, 91, 51, 50, 109}, \\\"YELLOW\\\": {27, 91, 51, 51, 109}, \\\"BLUE\\\": {27, 91, 51, 52, 109}, \\\"MAGENTA\\\": {27, 91, 51, 53, 109}, \\\"CYAN\\\": {27, 91, 51, 54, 109}, \\\"WHITE\\\": {27, 91, 51, 55, 109}, \\\"BLACK-BRIGHT\\\": {27, 91, 49, 59, 51, 48, 109}, \\\"RED-BRIGHT\\\": {27, 91, 49, 59, 51, 48, 109}, \\\"GREEN-BRIGHT\\\": {27, 91, 49, 59, 51, 48, 109}, \\\"YELLOW-BRIGHT\\\": {27, 91, 49, 59, 51, 48, 109}, \\\"BLUE-BRIGHT\\\": {27, 91, 49, 59, 51, 48, 109}, \\\"MAGENTA-BRIGHT\\\": {27, 91, 49, 59, 51, 48, 109}, \\\"CYAN-BRIGHT\\\": {27, 91, 49, 59, 51, 48, 109}, \\\"WHITE-BRIGHT\\\": {27, 91, 49, 59, 51, 48, 109}, // background colours \\\"BG-BLACK\\\": {27, 91, 52, 48, 109}, \\\"BG-RED\\\": {27, 91, 52, 49, 109}, \\\"BG-GREEN\\\": {27, 91, 52, 50, 109}, \\\"BG-YELLOW\\\": {27, 91, 52, 51, 109}, \\\"BG-BLUE\\\": {27, 91, 52, 52, 109}, \\\"BG-MAGENTA\\\": {27, 91, 52, 53, 109}, \\\"BG-CYAN\\\": {27, 91, 52, 54, 109}, \\\"BG-WHITE\\\": {27, 91, 52, 55, 109}, \\\"BG-BLACK-BRIGHT\\\": {27, 91, 49, 59, 52, 48, 109}, \\\"BG-RED-BRIGHT\\\": {27, 91, 49, 59, 52, 48, 109}, \\\"BG-GREEN-BRIGHT\\\": {27, 91, 49, 59, 52, 48, 109}, \\\"BG-YELLOW-BRIGHT\\\": {27, 91, 49, 59, 52, 48, 109}, \\\"BG-BLUE-BRIGHT\\\": {27, 91, 49, 59, 52, 48, 109}, \\\"BG-MAGENTA-BRIGHT\\\": {27, 91, 49, 59, 52, 48, 109}, \\\"BG-CYAN-BRIGHT\\\": {27, 91, 49, 59, 52, 48, 109}, \\\"BG-WHITE-BRIGHT\\\": {27, 91, 49, 59, 52, 48, 109}, } \"]},\"260\":{\"h\":\"How To Read The Code Above\",\"t\":[\"Each line will look something a little like\",\"\\\"GREEN\\\": {27, 91, 51, 50, 109}, \",\"The part within quotes is the constant name, and the part that follows is the sequence of bytes that are infixed.\",\"So the example above will replace {GREEN} from within a string with the byte values of 27, 91, 51, 50 and 109 (in that order).\"]},\"261\":{\"h\":\"Unsupported Constants\",\"t\":[\"If a constant does not exist in the above code, then the infix string is left unedited.\",\"# Green spelt correctly » out: \\\"{GREEN}PASSED{RESET}\\\" PASSED # Green spelt incorrectly (ie so that it doesn't exist as a valid constant) » out: \\\"{GREEEEN}PASSED{RESET}\\\" {GREEEEN}PASSED \"]},\"262\":{\"h\":\"Enabling / Disabling ANSI Escape Sequences\",\"t\":[\"These sequences are enabled by default. To disable run the following:\",\"» config: set shell color false \",\"You will need to add this to your Murex profile, ~/.murex_profile to make it persistent.\"]},\"263\":{\"h\":\"See Also\",\"t\":[\"Murex Profile Files: A breakdown of the different files loaded on start up\",\"( (brace quote): Write a string to the STDOUT without new line\",\"err: Print a line to the STDERR\",\"out: Print a string to the STDOUT with a trailing new line character\",\"tout:\\nPrint a string to the STDOUT and set it's data-type\"]},\"264\":{\"h\":\"Bang Prefix - User Guide\",\"t\":[\"Bang prefixing to reverse default actions\",\"Some builtins support a bang prefix, !, which provides a shorthand negative action to default behavior. For example, set defines a variable where as!set will undefine a variable.\",\"Sometimes the shortcut will be logical, like a not operator, as is the case with and where typically each result has to equal true normally orfalse if used in !and.\",\"Sometimes the shortcut will be more philosophical, such as with config where normal operations is to query or set configuration but !config resets the configuration to defaults (thus operating the same as config default).\",\"Please read the respecting commands doc for details on whether it supports a bang prefix and what the behavior of that prefix is.\"]},\"265\":{\"h\":\"See Also\",\"t\":[\"Pipeline: Overview of what a \\\"pipeline\\\" is\",\"Reserved Variables: Special variables reserved by Murex\",\"! (not): Reads the STDIN and exit number from previous process and not's it's condition\",\"and: Returns true or false depending on whether multiple conditions are met\",\"config: Query or define Murex runtime settings\",\"or: Returns true or false depending on whether one code-block out of multiple ones supplied is successful or unsuccessful.\",\"set:\\nDefine a local variable and set it's value\"]},\"266\":{\"h\":\"Code Block Parsing - User Guide\",\"t\":[\"Overview of how code blocks are parsed\",\"The murex parser creates ASTs ahead of interpreting each block of code. However the AST is only generated for a block at a time. Take this sample code:\",\"function example { # An example function if { $ENVVAR } then { out: 'foobar' } out: 'Finished!' } \",\"When that code is run function is executed with the parameters example and{ ... } but the contents of { ... } isn't converted into ASTs until someone calls example elsewhere in the shell.\",\"When example (the Murex function defined above) is executed the parser will then generate AST of the commands inside said function but not any blocks that are associated with those functions. eg the AST would look something like this:\",\"[ { \\\"Command\\\": \\\"if\\\", \\\"Parameters\\\": [ \\\"{ $ENVVAR }\\\", \\\"then\\\", \\\"{\\\\n out: 'foobar'\\\\n }\\\" ] }, { \\\"Command\\\": \\\"out\\\", \\\"Parameters\\\": [ \\\"Finished!\\\" ] } ] \",\"Please note this is a mock JSON structure rather than a representation of the actual AST that would be created. Parameters are stored differently to allow infixing of variables; and there also needs to be data shared about how pipelining (eg STDOUT et al) is chained. What is being captured above is only the command name and parameters.\",\"So when if executes, the conditional (the first parameter) is then parsed and turned into ASTs and executed. Then the last parameter (the then block) is parsed and turned into ASTs, if the first conditional is true.\",\"This sequence of parsing is defined within the if builtin rather than Murex's parser. That means any code blocks are parsed only when a builtin specifically requests that they are executed.\",\"With murex, there's no distinction between text and code. It's up to commands to determine if they want to execute a parameter as code or not (eg a curly brace block might be JSON).\"]},\"267\":{\"h\":\"See Also\",\"t\":[\"ANSI Constants: Infixed constants that return ANSI escape sequences\",\"Curly Brace ({, }) Tokens: Initiates or terminates a code block\",\"Pipeline: Overview of what a \\\"pipeline\\\" is\",\"Schedulers:\\nOverview of the different schedulers (or 'run modes') in Murex\"]},\"268\":{\"h\":\"FileRef - User Guide\",\"t\":[\"How to track what code was loaded and from where\",\"Every function, event, autocompletion and even variable is stored with which file it was sourced, when it was loaded and what module it was loaded from. This makes it trivial to identify buggy 3rd party code, malicious libraries, or even just bugs in your own profiles and/or modules.\",\"» runtime: --functions -> [[ /agent/FileRef/ ]] { \\\"Column\\\": 5, \\\"Line\\\": 5, \\\"Source\\\": { \\\"DateTime\\\": \\\"2021-03-28T09:10:53.572197+01:00\\\", \\\"Filename\\\": \\\"/home/lmorg/.murex_modules/murex-dev/murex-dev.mx\\\", \\\"Module\\\": \\\"murex-dev/murex-dev\\\" } } » runtime --globals -> [[ /DEVOPSBIN/FileRef ]] { \\\"Column\\\": 1, \\\"Line\\\": 0, \\\"Source\\\": { \\\"DateTime\\\": \\\"2021-03-28T09:10:53.541952+01:00\\\", \\\"Filename\\\": \\\"/home/lmorg/.murex_modules/devops/global.mx\\\", \\\"Module\\\": \\\"devops/global\\\" } } \"]},\"269\":{\"h\":\"Module Strings For Non-Module Code\"},\"270\":{\"h\":\"Source\",\"t\":[\"A common shell idiom is to load shell script files via source / .. When this is done the module string (as seen in the FileRef structures described above) will be source/hash where hash will be a unique hash of the file path and load time.\",\"Thus no two sourced files will share the same module string. Even the same file but modified and sourced twice (before and after the edit) will have different module strings due to the load time being part of the hashed data.\"]},\"271\":{\"h\":\"REPL\",\"t\":[\"Any functions, variables, events, auto-completions, etc created manually, directly, in the interactive shell will have a module string of murex and an empty Filename string.\"]},\"272\":{\"h\":\"See Also\",\"t\":[\"Modules and Packages: An introduction to Murex modules and packages\",\"[[ (element): Outputs an element from a nested structure\",\"murex-package: Murex's package manager\",\"runtime: Returns runtime information on the internal state of Murex\",\"source:\\nImport Murex code from another file of code block\"]},\"273\":{\"h\":\"Murex's Interactive Shell - User Guide\",\"t\":[\"What's different about Murex's interactive shell?\",\"Table of Contents\",\"Overview\",\"readline\",\"Hotkeys\",\"Autocompletion\",\"Syntax Completion\",\"Syntax Highlighting\",\"Spellchecker\",\"Hint Text\",\"Configuring Hint Text Colour\",\"Custom Hint Text Statuses\",\"Disabling Hint Text\"]},\"274\":{\"h\":\"Overview\",\"t\":[\"Aside from Murex being carefully designed with scripting in mind, the interactive shell itself is also built around productivity. To achieve this we wrote our own readline library. Below is an example of that library in use:\",\"The above demo includes the following features of Murex's bespoke readline library:\",\"hint text - blue status text below the prompt (the colour is configurable)\",\"syntax highlighting (albeit there isn’t much syntax to highlight in the example). This can also be turned off if your preference is to have colours disabled\",\"tab-completion in gridded mode (seen when typing cd)\",\"tab-completion in list view (seen when selecting a process name to kill where the process ID was substituted when selected)\",\"searching through the tab-completion suggestions (seen in both cd andkill - enabled by pressing [ctrl]+[f])\",\"line editing using $EDITOR (vi in the example - enabled by pressing [esc] followed by [v])\",\"readline’s warning before pasting multiple lines of data into the buffer and the preview option that’s available as part of the aforementioned warning\",\"and VIM keys (enabled by pressing [esc])\"]},\"275\":{\"h\":\"readline\",\"t\":[\"Murex uses a custom readline library to enable support for new features on in addition to the existing uses you'd normally expect from a shell. It is because of this Murex provides one of the best user experiences of any of the shells available today.\"]},\"276\":{\"h\":\"Hotkeys\",\"t\":[\"A full breakdown of supported hotkeys is available at terminal-keys.md.\"]},\"277\":{\"h\":\"Autocompletion\",\"t\":[\"Autocompletion happen when you press [tab] and will differ slightly depending on what is defined in autocomplete and whether you use the traditionalPOSIX pipe token, |, or the arrow pipe,->.\",\"The | token will behave much like any other shell however -> will offer suggestions with matching data types (as seen in runtime --methods). This is a way of helping highlight commands that naturally follow after another in a pipeline. Which is particularly important in Murex as it introduces data types and dozens of new builtins specifically for working with data structures in an intelligent and readable yet succinct way.\",\"You can add your own commands and functions to Murex as methods by defining them with method. For example if we were to add jq as a method:\",\"method: define jq { \\\"Stdin\\\": \\\"json\\\", \\\"Stdout\\\": \\\"@Any\\\" } \"]},\"278\":{\"h\":\"Syntax Completion\",\"t\":[\"Like with most IDEs, Murex will auto close brackets et al.\"]},\"279\":{\"h\":\"Syntax Highlighting\",\"t\":[\"Pipelines in the interactive terminal are syntax highlighted. This is similar to what one expects from an IDE.\",\"Syntax highlighting can be disabled by running:\",\"» config: set shell syntax-highlighting off \"]},\"280\":{\"h\":\"Spellchecker\",\"t\":[\"Murex supports inline spellchecking, where errors are underlined. For example\",\"This might require some manual steps to enable, please see the spellcheck user guide for more details.\"]},\"281\":{\"h\":\"Hint Text\",\"t\":[\"The hint text is a (typically) blue status line that appears directly below your prompt. The idea behind the hint text is to provide clues to you as type instructions into the prompt; but without adding distractions. It is there to be used if you want it while keeping out of the way when you don't want it.\"]},\"282\":{\"h\":\"Configuring Hint Text Colour\",\"t\":[\"By default the hint text will appear blue. This is also customizable:\",\"» config get shell hint-text-formatting {BLUE} \",\"The formatting config takes a string and supports ANSI constants.\",\"It is also worth noting that if colour is disabled then the hint text will not be coloured even if hint-text-formatting includes colour codes:\",\"» config: set shell color false \",\"(please note that syntax highlighting is unaffected by the above config)\"]},\"283\":{\"h\":\"Custom Hint Text Statuses\",\"t\":[\"There is a lot of behavior hardcoded into Murex like displaying the full path to executables and the values of variables. However if there is no status to be displayed then Murex can fallback to a default hint text status. This default is a user defined function. At time of writing this document the author has the following function defined:\",\"config: set shell hint-text-func { trypipe <!null> { git status --porcelain -b -> set gitstatus $gitstatus -> head -n1 -> regexp 's/^## //' -> regexp 's/\\\\.\\\\.\\\\./ => /' } catch { out \\\"Not a git repository.\\\" } } \",\"...which produces a colorized status that looks something like the following:\",\"develop => origin/develop \"]},\"284\":{\"h\":\"Disabling Hint Text\",\"t\":[\"It is enabled by default but can be disabled if you prefer a more minimal prompt:\",\"» config: set shell hint-text-enabled false \"]},\"285\":{\"h\":\"See Also\",\"t\":[\"ANSI Constants: Infixed constants that return ANSI escape sequences\",\"Arrow Pipe (->) Token: Pipes STDOUT from the left hand command to STDIN of the right hand command\",\"Code Block Parsing: Overview of how code blocks are parsed\",\"Curly Brace ({, }) Tokens: Initiates or terminates a code block\",\"POSIX Pipe (|) Token: Pipes STDOUT from the left hand command to STDIN of the right hand command\",\"Spellcheck: How to enable inline spellchecking\",\"autocomplete: Set definitions for tab-completion in the command line\",\"config: Query or define Murex runtime settings\",\"method: Define a methods supported data-types\",\"runtime:\\nReturns runtime information on the internal state of Murex\"]},\"286\":{\"h\":\"Modules and Packages - User Guide\",\"t\":[\"An introduction to Murex modules and packages\",\"Murex has it's own module system with namespacing and a package manager. But why should a shell need all this?\",\"The answer comes from years of me using Bash and wishing my Bash environment could be consistent across multiple machines. So this document is authored from the perspective of my personal usage (\\\"me\\\" being Laurence Morgan, the original author of Murex).\",\"What Murex's package system provides is:\",\"A way to ensure consistency across multiple platforms\",\"An easy way to extend Murex\",\"An easy way to share what you've extended with others\",\"An easy way to ensure your extensions are kept up-to-date\",\"An easy way to track what code is running in your shell and from where it was loaded\",\"Before I address those points in more detail, a bit of background into what modules and packages are:\"]},\"287\":{\"h\":\"What Are Packages And Modules?\",\"t\":[\"Murex comes with it's own package manager to make managing plugins easier.\",\"The format of the packages is a directory, typically located at ~/.murex_modules, which contains one or more murex scripts. Each script can be it's own module. ie there are multiple modules that can be grouped together and distributed as a single package.\",\"The way packages and modules are represented is as a path:\",\"package/module \",\"murex-package is a package management tool for administrating murex modules and packages.\"]},\"288\":{\"h\":\"Using Packages And Modules\"},\"289\":{\"h\":\"Consistency\",\"t\":[\"Package database are stored locally at ~/.murex_modules/packages.json. This file is portable so any new machine can have packages.json imported. The easiest way of doing this is using murex-package which can import from a local path or HTTP(S) URI and automatically download any packages described in the database.\",\"For example the command I run on any new dev machine to import all of my DevOps tools and terminal preferences is the following:\",\"murex-package: import https://gist.githubusercontent.com/lmorg/770c71786935b44ba6667eaa9d470888/raw/fb7b79d592672d90ecb733944e144d722f77fdee/packages.json \"]},\"290\":{\"h\":\"Extendability\",\"t\":[\"Namespacing allows for private functions which allows you to write smaller functions. Smaller functions are easier to write tests against (Murex also has an inbuilt testing and debugging tools).\"]},\"291\":{\"h\":\"Sharing Code\",\"t\":[\"Packages can be hosted via HTTP(S) or git. Anyone can import anyone elses packages using murex-package.\",\"murex-package: install https://github.com/lmorg/murex-module-murex-dev.git \"]},\"292\":{\"h\":\"Updating Packages\",\"t\":[\"Updating packages is easy:\",\"murex-package: update \"]},\"293\":{\"h\":\"Tracking Code\",\"t\":[\"All code loaded in Murex, every function, variable and event (etc) is stored in memory with metadata about where it was loaded from; which package, file and at what time. This is called FileRef.\",\"For more information on FileRef see the link below.\"]},\"294\":{\"h\":\"Module Strings For Non-Module Code\"},\"295\":{\"h\":\"Source\",\"t\":[\"A common shell idiom is to load shell script files via source / .. When this is done the module string (as seen in the FileRef structures described above) will be source/hash where hash will be a unique hash of the file path and load time.\",\"Thus no two sourced files will share the same module string. Even the same file but modified and sourced twice (before and after the edit) will have different module strings due to the load time being part of the hashed data.\"]},\"296\":{\"h\":\"REPL\",\"t\":[\"Any functions, variables, events, auto-completions, etc created manually, directly, in the interactive shell will have a module string of murex and an empty Filename string.\"]},\"297\":{\"h\":\"See Also\",\"t\":[\"FileRef: How to track what code was loaded and from where\",\"murex-package: Murex's package manager\",\"private: Define a private function block\",\"source: Import Murex code from another file of code block\",\"test:\\nMurex's test framework - define tests, run tests and debug shell scripts\"]},\"298\":{\"h\":\"Murex Named Pipes - User Guide\",\"t\":[\"A detailed breakdown of named pipes in Murex\"]},\"299\":{\"h\":\"Background\",\"t\":[\"Wikipedia describes a named pipe as the following:\",\"In computing, a named pipe (also known as a FIFO for its behavior) is an extension to the traditional pipe concept on Unix and Unix-like systems, and is one of the methods of inter-process communication (IPC). The concept is also found in OS/2 and Microsoft Windows, although the semantics differ substantially. A traditional pipe is \\\"unnamed\\\" and lasts only as long as the process. A named pipe, however, can last as long as the system is up, beyond the life of the process. It can be deleted if no longer used. Usually a named pipe appears as a file, and generally processes attach to it for IPC.\",\"Where Murex differs from standard Linux/UNIX is that named pipes are not special files but rather an object or construct within the shell runtime. This allows for more user friendly tooling and syntactic sugar to implemented around it while largely still having the same functionality as a more traditional file based named pipe.\"]},\"300\":{\"h\":\"In Murex\",\"t\":[\"In Murex, named pipes are described in code as a value inside angle brackets. There are four named pipes pre-configured: <in> (STDIN), <out> (STDOUT),<err> (STDERR), and <null> (/dev/null equivalent).\",\"You can call a named pipe as either a method, function, or parameter.\",\"As a method:\",\"<in> -> command parameter1 parameter2 parameter3 \",\"**As a function:\",\"command parameter1 parameter2 parameter3 -> <out> \",\"**As a parameter:\",\"command <out> <!err> parameter1 parameter2 parameter3 \"]},\"301\":{\"h\":\"See Also\",\"t\":[\"<> / read-named-pipe: Reads from a Murex named pipe\",\"<stdin>: Read the STDIN belonging to the parent code block\",\"test:\\nMurex's test framework - define tests, run tests and debug shell scripts\"]},\"302\":{\"h\":\"Pipeline - User Guide\",\"t\":[\"Overview of what a \\\"pipeline\\\" is\",\"In the Murex docs you'll often see the term \\\"pipeline\\\". This refers to any commands sequenced together.\",\"A pipeline can be joined via any pipe token (eg |, ->, =>, ?). But, for the sake of documentation, a pipeline might even be a solitary command.\"]},\"303\":{\"h\":\"Examples\",\"t\":[\"Typical Murex pipeline:\",\"open: example.json -> [[ /node/0 ]] \",\"Example of a single command pipeline:\",\"top \",\"Pipeline you might see in Bash / Zsh (this is also valid in Murex):\",\"cat names.txt | sort | uniq \",\"Pipeline filtering out a specific error from example-cmd\",\"example-cmd ? grep: \\\"File not found\\\" \"]},\"304\":{\"h\":\"Detail\",\"t\":[\"A pipeline isn't a Murex specific construct but rather something inherited from Unix. Where Murex differs is that it can support sending typed information to compatible functions (unlike standard Unix pipes which are dumb-byte streams).\",\"Wikipedia has a page on Pipeline (Unix):\",\"In Unix-like computer operating systems, a pipeline is a mechanism for inter-process communication using message passing. A pipeline is a set of processes chained together by their standard streams, so that the output text of each process (stdout) is passed directly as input (stdin) to the next one. The second process is started as the first process is still executing, and they are executed concurrently. The concept of pipelines was championed by Douglas McIlroy at Unix's ancestral home of Bell Labs, during the development of Unix, shaping its toolbox philosophy. It is named by analogy to a physical pipeline. A key feature of these pipelines is their \\\"hiding of internals\\\" (Ritchie & Thompson, 1974). This in turn allows for more clarity and simplicity in the system.\"]},\"305\":{\"h\":\"Named Pipes\",\"t\":[\"The drawback with pipes is that it assumes each command runs sequentially one after another and that everything fits neatly into the concept of \\\"output\\\" and \\\"errors\\\". The moment you need to use background (bg) processes, do anything more specific with data streams (even if just ignore them entirely), or use more than one data stream, then this concept breaks down. This is where named pipes come to the rescue. Named pipes are out of scope for this specific document but you can read more on them in links the links below.\"]},\"306\":{\"h\":\"See Also\",\"t\":[\"Arrow Pipe (->) Token: Pipes STDOUT from the left hand command to STDIN of the right hand command\",\"Bang Prefix: Bang prefixing to reverse default actions\",\"Generic Pipe (=>) Token: Pipes a reformatted STDOUT stream from the left hand command to STDIN of the right hand command\",\"POSIX Pipe (|) Token: Pipes STDOUT from the left hand command to STDIN of the right hand command\",\"STDERR Pipe (?) Token: Pipes STDERR from the left hand command to STDIN of the right hand command\",\"Schedulers: Overview of the different schedulers (or 'run modes') in Murex\",\"bg:\\nRun processes in the background\"]},\"307\":{\"h\":\"Murex Profile Files - User Guide\",\"t\":[\"A breakdown of the different files loaded on start up\",\"Murex has several profile files which are loaded in the following order of execution:\",\"~/.murex_preload\",\"~/.murex_modules/*/\",\"~/.murex_profile\"]},\"308\":{\"h\":\".murex_preload\",\"t\":[\"This file should only used to define any environmental variables that might need to be set before the modules are loaded (eg including directories in$PATH if you have anything installed in non-standard locations).\",\"Most of the time this file will be empty bar the standard warning message:\",\"# This file is loaded before any murex modules. It should only contain # environmental variables required for the modules to work eg: # # export PATH=... # # Any other profile config belongs in your profile script instead: # /home/$USER/.murex_profile \",\"This file is created upon the first run of Murex.\"]},\"309\":{\"h\":\".murex_modules/\",\"t\":[\"Murex's module directory - where all the modules are installed to. This directory is managed by murex-package builtin.\"]},\"310\":{\"h\":\".murex_profile\",\"t\":[\"This file is comparable to .bash_profile, .bashrc and .zshrc etc. It is the standard place to put all user and/or machine specific config in.\",\".murex_profile is only read from the users home directory. Unlike bash et al, profiles will not be read from /etc/profile.d nor similar. Modules should be used in its place.\"]},\"311\":{\"h\":\"Overriding The Default Paths (XDG)\",\"t\":[\"Some individuals, particularly those running Linux, follow a standard calledXDG Base Directory Specification. While Murex does not adhere to this standard, instead conforming to thede facto standard defined by the past precedents of previous shells, in order to offer flexibility for those who do prefer the XDG specification Murex does support overriding its own default paths via special environmental variables.\",\"MUREX_PRELOAD defines the preload path (and file name)\",\"MUREX_MODULES defines the module path (only)\",\"MUREX_PROFILE defines the profile path (and file name)\",\"Where MUREX_PRELOAD and/or MUREX_PROFILE are directories rather than absolute file names, the path is appended with the default file names as named above.\",\"For people who wish to use XDG paths, in many instances you can get away with setting the follow prior to launching Murex (eg in /etc/profile.d):\",\"MUREX_PRELOAD=\\\"$XDG_CONFIG_HOME/murex/\\\" MUREX_MODULES=\\\"$XDG_CONFIG_HOME/murex/\\\" MUREX_PROFILE=\\\"$XDG_CONFIG_HOME/murex/\\\" \",\"This, however, depends on $XDG_CONFIG_HOME pointing to a single path rather than an array of paths (like $PATH). In that instance you can still use custom paths in Murex but you might need to get a little more creative in how you define that value.\"]},\"312\":{\"h\":\"See Also\",\"t\":[\"Modules and Packages: An introduction to Murex modules and packages\",\"export: Define an environmental variable and set it's value\",\"murex-package:\\nMurex's package manager\"]},\"313\":{\"h\":\"Reserved Variables - User Guide\",\"t\":[\"Special variables reserved by Murex\",\"Murex reserves a few special variables which cannot be assigned via set norlet.\",\"The following is a list of reserved variables, their data type, and its usage:\"]},\"314\":{\"h\":\"SELF (json)\",\"t\":[\"This returns meta information about the running scope.\",\"A 'scope' in Murex is a collection of code blocks to which variables and config are persistent within. In Murex, a variable declared inside an if orforeach block will be persistent outside of their blocks as long as you're still inside the same function.\",\"Please see scoping document (link below) for more information on scoping.\",\"» function example { out $SELF } » example { \\\"Parent\\\": 11357, \\\"Scope\\\": 11357, \\\"TTY\\\": true, \\\"Method\\\": false, \\\"Not\\\": false, \\\"Background\\\": false, \\\"Module\\\": \\\"murex\\\" } \"]},\"315\":{\"h\":\"Parent (num)\",\"t\":[\"This is the function ID of the parent function that created the scope. In some instances this will be the same value as scope FID. However if in doubt then please using Scope instead.\"]},\"316\":{\"h\":\"Scope (num)\",\"t\":[\"The scope value here returns the function ID of the top level function in the scope.\"]},\"317\":{\"h\":\"TTY (bool)\",\"t\":[\"A boolean value as to whether STDOUT is a TTY (ie are we printing to the terminal (TTY) or a pipe?)\"]},\"318\":{\"h\":\"Method (bool)\",\"t\":[\"A boolean value to describe whether the current scope is a method (ie being called mid-way or at the end of a pipeline).\"]},\"319\":{\"h\":\"Not (bool)\",\"t\":[\"A boolean value which represents whether the function was called with a bang- prefix or not.\"]},\"320\":{\"h\":\"Background (bool)\",\"t\":[\"A boolean value to identify whether the current scope is running in the background for foreground.\"]},\"321\":{\"h\":\"Module (str)\",\"t\":[\"This will be the module string for the current scope.\"]},\"322\":{\"h\":\"ARGS (json)\",\"t\":[\"This returns a JSON array of the command name and parameters within a given scope.\",\"Unlike $PARAMS, $ARGS includes the function name.\",\"» function example { out $ARGS } » example abc 1 2 3 [ \\\"example\\\", \\\"abc\\\", \\\"1\\\", \\\"2\\\", \\\"3\\\" ] \"]},\"323\":{\"h\":\"PARAMS (json)\",\"t\":[\"This returns a JSON array of the parameters within a given scope.\",\"Unlike $ARGS, $PARAMS does not include the function name.\",\"» function example { out $PARAMS } » example abc 1 2 3 [ \\\"abc\\\", \\\"1\\\", \\\"2\\\", \\\"3\\\" ] \"]},\"324\":{\"h\":\"MUREX_EXE (str)\",\"t\":[\"This is very similar to the $SHELL environmental variable in that it holds the full path to the running shell. The reason for defining a reserved variable is so that the shell path cannot be overridden.\"]},\"325\":{\"h\":\"MUREX_ARGS (json)\",\"t\":[\"This is TODO: [https://github.com/lmorg/murex/issues/304](Github issue 304)\"]},\"326\":{\"h\":\"HOSTNAME (str)\",\"t\":[\"This returns the hostname of the machine Murex is running from.\"]},\"327\":{\"h\":\"0 (str)\",\"t\":[\"This returns the name of the executable (like $ARGS[0])\"]},\"328\":{\"h\":\"1 , 2 , 3 ... (str)\",\"t\":[\"This returns parameter n (like $ARGS[n]). If there is no parameter n then the variable will not be set thus the upper limit variable is determined by how many parameters are set. For example if you have 19 parameters passed then variables $1 through to $19 (inclusive) will all be set.\"]},\"329\":{\"h\":\"See Also\",\"t\":[\"Array (@) Token: Expand values as an array\",\"Bang Prefix: Bang prefixing to reverse default actions\",\"Modules and Packages: An introduction to Murex modules and packages\",\"Pipeline: Overview of what a \\\"pipeline\\\" is\",\"String ($) Token: Expand values as a string\",\"Variable and Config Scoping: How scoping works within Murex\",\"config: Query or define Murex runtime settings\",\"foreach: Iterate through an array\",\"function: Define a function block\",\"if: Conditional statement to execute different blocks of code depending on the result of the condition\",\"let: Evaluate a mathematical function and assign to variable (deprecated)\",\"private: Define a private function block\",\"set: Define a local variable and set it's value\",\"switch:\\nBlocks of cascading conditionals\"]},\"330\":{\"h\":\"Rosetta Stone - User Guide\",\"t\":[\"A tabulated list of Bashism's and their equivalent Murex syntax\",\"Below is a reference table of common Bash code and how it could be written in Murex.\",\"It is also recommended that you read the language tour if you want to learn more about shell scripting in Murex.\",\"Description\",\"Bash\",\"Murex\",\"Write to STDOUT\",\"echo \\\"Hello Bash\\\"\",\"out \\\"Hello Murex\\\"echo \\\"Hello Murex\\\"[1]\",\"Write to STDERR\",\"echo \\\"Hello Bash\\\" >2\",\"err \\\"Hello Murex\\\"\",\"Write to file (truncate)\",\"echo \\\"Hello Bash\\\" > hello.txt\",\"echo \\\"Hello Murex\\\" |> hello.txt\",\"Write to file (append)\",\"echo \\\"Hello Bash\\\" >> hello.txt\",\"echo \\\"Hello Murex\\\" >> hello.txt\",\"Pipe commands\",\"echo \\\"Hello Bash | grep Bash\",\"echo \\\"Hello Murex | grep Murexout \\\"Hello Murex\\\" -> regexp m/Murex/\",\"Redirect errors to STDOUT\",\"curl murex.rocks 2>&1 | less\",\"curl murex.rocks ? lesscurl <!out> murex.rocks | less\",\"Redirect output to STDERR\",\"uname -a >&2\",\"uname <err> -a\",\"Quoting strings\",\"Infixing\",\"echo \\\"Hello $SHELL\\\"\",\"out \\\"Hello $SHELL\\\"\",\"String literals\",\"echo 'Hello' $SHELL\",\"out 'Hello' $SHELL\",\"Nesting quotes\",\"echo 'Hello \\\\'Bob\\\\''\",\"out %(Hello 'Bob')\",\"Process management\",\"Exit number\",\"$?\",\"exitnum\",\"Background jobs\",\"command &\",\"bg { command }\",\"Job control\",\"ps,jobs,bg pid,fg pid\",\"fid-list,jobs,bg fid,fg fid\",\"Happy paths\",\"command && command\",\"command && commandtry {command; command}\",\"Unhappy paths\",\"command || command\",\"command || commandtry {command}; catch {command}\",\"Pipe fail\",\"set -o pipefail\",\"runmode trypipe modulerunmode trypipe functiontrypipe { commands }\",\"Comments\",\"Single line\",\"# comment\",\"# comment\",\"Multiple lines\",\":<<EOCline 1line 2EOC\",\"/#line 1line 2#/\",\"Mid-line\",\"n/a\",\"eg out foo/#comment#/bar\",\"File pattern matching(also known as \\\"wildcards\\\")\",\"Globbing\",\"eg ls *.txt\",\"eg ls *.txt (in the interactive terminal) g pattern eg ls @{g *.txt}\",\"Regexp\",\"n/a\",\"rx pattern eg ls @{rx '*\\\\\\\\.txt'}\",\"File type matching\",\"n/a\",\"f flags eg f +s (only return symlinks)\",\"Chaining\",\"n/a\",\"eg f +f | g *.txt | !g murex.* (returns only files with the extension \\\"txt\\\" that aren't called \\\"murex\\\")\",\"Expressions\",\"Assignment\",\"foobar = $((1 + 2 * 3))\",\"foobar = 1 + 2 * 3[2]\",\"Comparison, string\",\"[ \\\"$(command)\\\" == \\\"value\\\" ]\",\"${command} == \\\"value\\\"[2][5]\",\"Comparison, numeric\",\"[ $integer -eq 5 ]\",\"$number == 5[2]\",\"Arithmetic\",\"echo $(( 1+2*3 ))\",\"1 + 2 * 3[2]out ${1+2*3}[2][5]\",\"Supported data types\",\"1. String,2. Integer(all variables are strings)\",\"1. String,2. Integer,3. Float (default number type),4. Boolean5. Array,6. Object,7. Null(all variables can be treated as strings and/or their primitive)\",\"Variables\",\"Assign a local variable\",\"local foo=\\\"bar\\\"\",\"$foo = \\\"bar\\\"[2][6]out \\\"bar\\\" | set foo\",\"Assign a global variable\",\"foo=\\\"bar\\\"\",\"$GLOBAL.foo = \\\"bar\\\"[6]out \\\"bar\\\" | global foo\",\"Assign an environmental variable\",\"export foo=\\\"bar\\\"\",\"export foo = \\\"bar\\\"[1][2][3]$ENV.foo = \\\"bar\\\"[6]out \\\"bar\\\" | export foo[3]\",\"Printing a variable\",\"echo \\\"$foobar\\\"\",\"out $foobar[5]$foobar (variables don't need to be quoted in Murex)\",\"Arrays(eg arrays, lists)\",\"Creating an array\",\"array_name=(value1 value2 value3)\",\"%[value1 value2 value3]%[value1, value2, value3] eg array_name = %[1, 2, 3], eg %[hello world] | foreach { ... }\",\"Accessing an array element\",\"${array_name[0]}\",\"$array_name[0] (immutable) $array_name.0 (mutable) [5]array | [0]\",\"Printing multiple elements\",\"echo ${array_name[1]} ${array_name[0]}\",\"@array_name[1 0]array | [1 0]\",\"Printing a range of elements\",\"n/a\",\"@array_name[1..3]array | [1..3]\",\"Printing all elements\",\"echo ${array_name[*]}\",\"@array_name\",\"Iterating through an array\",\"for item in array; do;$itemdone;\",\"array | foreach item { $item } eg %[Tom Richard Sally] | foreach name { out \\\"Hello $name\\\" }\",\"Objects(eg JSON objects, maps, hashes, dictionaries)\",\"Creating an object\",\"n/a\",\"%{ key: value, array: [1, 2, 3] }[2] eg object_name = %{ key: val, arr: [1,3,3] } eg %{ a:1, b:2, c:3 } | formap { ... }\",\"Accessing an element\",\"n/a\",\"$object_name[key] (immutable) $object_name.key[5] (mutable) object | [key]\",\"Printing multiple elements\",\"n/a\",\"$object_name[key1 key2]object | [key1 key2]\",\"Accessing a nested element\",\"n/a\",\"$object_name[[.path.to.element]] (immutable) [4]$object_name.path.to.element (mutable)object | [[.path.to.element]][4]\",\"Iterating through an map\",\"n/a\",\"object | formap key value { $key; $value } eg %{Bob: {age: 10}, Richard: {age: 20}, Sally: {age: 30} } | formap name person { out \\\"$name is $person[age] years old\\\" }\",\"Sub-shells\",\"Sub-shell, string\",\"\\\"$(commands)\\\" eg \\\"echo $(echo \\\"Hello world\\\")\\\"\",\"${commands}[5] eg out ${out Hello world}\",\"Sub-shell, arrays\",\"$(commands) eg $(echo 1 2 3)\",\"@{commands}[5] eg out @{ %[1,2,3] }\"]},\"331\":{\"h\":\"Footnotes\",\"t\":[\"Supported for compatibility with traditional shells like Bash.\",\"Unlike Bash, whitespace (or the absence of) is optional.\",\"Environmental variables can only be stored as a string. This is a limitation of current operating systems.\",\"Path separator can be any 1 byte wide character, eg /. The path separator is defined by the first character in a path.\",\"Murex uses ${} for subshells and $() for variables, the reverse of what Bash and others use. The reason for this difference is because {} always denotes a code block and () denotes strings. So ${foobar} makes more sense as a subshell executing the command foobar, while $(foobar) makes more sense as the variable $foobar.\",\"When assigning a variable where the right hand side is an expression, eg $foo = \\\"bar\\\", the dollar prefix is optional. The set, global and export keywords are considered deprecated.\"]},\"332\":{\"h\":\"See Also\",\"t\":[\"And (&&) Logical Operator: Continues next operation if previous operation passes\",\"Append Pipe (>>) Token: Redirects STDOUT to a file and append its contents\",\"Array (@) Token: Expand values as an array\",\"Murex Named Pipes: A detailed breakdown of named pipes in Murex\",\"Or (||) Logical Operator: Continues next operation only if previous operation fails\",\"String ($) Token: Expand values as a string\",\"Terminal Hotkeys: A list of all the terminal hotkeys and their uses\",\">> (append file): Writes STDIN to disk - appending contents if file already exists\",\"> (truncate file): Writes STDIN to disk - overwriting contents if file already exists\",\"[[ (element): Outputs an element from a nested structure\",\"[ (index): Outputs an element from an array, map or table\",\"[ (range) : Outputs a ranged subset of data from STDIN\",\"runmode: Alter the scheduler's behaviour at higher scoping level\",\"try: Handles errors inside a block of code\",\"trypipe:\\nChecks state of each function in a pipeline and exits block on error\"]},\"333\":{\"h\":\"Schedulers - User Guide\",\"t\":[\"Overview of the different schedulers (or 'run modes') in Murex\",\"There are a few distinct schedulers (or run modes) in Murex which are invoked by builtin commands. This means you can alter the way commands are executed dynamically within Murex shell scripts.\"]},\"334\":{\"h\":\"Normal\",\"t\":[\"This is a traditional shell where anything in a pipeline (eg cmd1 -> cmd2 -> cmd3) is executed in parallel. The scheduler only pauses launching new commands when the last command in any pipeline is still executing. A pipeline could be multiple commands (like above) or a single command (eg top).\"]},\"335\":{\"h\":\"Try\",\"t\":[\"This is similar to normal where commands in a pipeline are run in parallel except Murex validates the stderr and exit status of the last command in any pipeline.\",\"If stderr is greater than stdout (per bytes written) OR the exit status is non-zero then the scheduler exits that entire block.\"]},\"336\":{\"h\":\"Try Pipe\",\"t\":[\"This runs the commands sequentially because the stderr and the exit status of each command is checked irrespective of whether that command is at the start of the pipeline (eg start -> middle -> end), or anywhere else.\",\"Like with try, if stderr is greater than stdout (per bytes written) OR the exit status is non-zero then the scheduler exits that entire block. Unlike with try, this check happens on every command rather than the last command in the pipeline.\"]},\"337\":{\"h\":\"See Also\",\"t\":[\"Arrow Pipe (->) Token: Pipes STDOUT from the left hand command to STDIN of the right hand command\",\"Generic Pipe (=>) Token: Pipes a reformatted STDOUT stream from the left hand command to STDIN of the right hand command\",\"POSIX Pipe (|) Token: Pipes STDOUT from the left hand command to STDIN of the right hand command\",\"Pipeline: Overview of what a \\\"pipeline\\\" is\",\"STDERR Pipe (?) Token: Pipes STDERR from the left hand command to STDIN of the right hand command\",\"runmode: Alter the scheduler's behaviour at higher scoping level\",\"try: Handles errors inside a block of code\",\"trypipe:\\nChecks state of each function in a pipeline and exits block on error\"]},\"338\":{\"h\":\"Variable and Config Scoping - User Guide\",\"t\":[\"How scoping works within Murex\",\"A 'scope' in Murex is a collection of code blocks to which variables and config are persistent within. In Murex, a variable declared inside an if orforeach block will be persistent outside of their blocks as long as you're still inside the same function.\",\"For example lets start with the following function that sets a variable calledfoo\",\"function example { if { true } then { set foo=bar } out $foo } \",\"In here the value is getting set inside an if block but its value is is retrieved outside of that block. out and set have different parents but the same scoping.\",\"Then lets set foo outside of that function and see what happens:\",\"» set foo=oof » $foo oof » example bar » $foo oof \",\"Despite setting a variable named foo, the value inside example does not overwrite the value outside example because they occupy different scoping.\"]},\"339\":{\"h\":\"What Instantiates A New Scope?\",\"t\":[\"A new scope is instantiated by anything which resembles a function. This would be code inside events, dynamic autocompletes, open agents, any code blocks defined in config, as well as public and private functions too.\",\"Code inside an if, switch, foreach and source do not create a new scope. Subshells also do not create a new scoping either.\"]},\"340\":{\"h\":\"See Also\",\"t\":[\"Reserved Variables: Special variables reserved by Murex\",\"autocomplete: Set definitions for tab-completion in the command line\",\"config: Query or define Murex runtime settings\",\"event: Event driven programming for shell scripts\",\"foreach: Iterate through an array\",\"function: Define a function block\",\"if: Conditional statement to execute different blocks of code depending on the result of the condition\",\"let: Evaluate a mathematical function and assign to variable (deprecated)\",\"openagent: Creates a handler function for `open\",\"private: Define a private function block\",\"set: Define a local variable and set it's value\",\"source: Import Murex code from another file of code block\",\"switch:\\nBlocks of cascading conditionals\"]},\"341\":{\"h\":\"Spellcheck - User Guide\",\"t\":[\"How to enable inline spellchecking\",\"Murex supports inline spellchecking, where errors are underlined. For example\",\"However to use this there needs to be a few satisfied prerequisites, not all of which will be enabled by default:\"]},\"342\":{\"h\":\"CLI Spellchecker (3rd Party Software)\",\"t\":[\"A CLI spellchecker needs to be installed. The recommendation is aspell. This might already be installed by default with your OS or has been included as a dependency with another application. You can check if aspell is installed by running the following:\",\"which: aspell \",\"If that returns no data, then you will need to install aspell yourself. Please consult your OS docs for how to install software.\",\"For help debugging issues with aspell, please see the last section in this document.\"]},\"343\":{\"h\":\"Murex Config\"},\"344\":{\"h\":\"ANSI Escape Sequences\",\"t\":[\"ANSI escape sequences need to be enabled (which they are by default). This option is found in config under shell, color.\",\"config: set shell color true \"]},\"345\":{\"h\":\"Spellcheck Enable\",\"t\":[\"Spellcheck needs to be enabled. This option can be found in config undershell, spellcheck-enabled.\",\"To enable this run:\",\"config: set shell spellcheck-enabled true \",\"...or add the above line to your Murex profile, ~/.murex_profile to make the change persistent.\",\"Please note that this option will automatically be enabled if aspell is installed.\"]},\"346\":{\"h\":\"Spellcheck Murex Code\",\"t\":[\"This shouldn't need tweaking if you're running aspell but other spellcheckers will require updated code. The default will look something like this:\",\"» config: get shell spellcheck-func { -> aspell list } \",\"The default should be good enough for most people but should you want to run an alternative spellchecker then follow the instructions in the next section:\"]},\"347\":{\"h\":\"How To Write Your Own spellcheck-func\",\"t\":[\"You might legitimately want to run a different spellchecker and if so you'll need to write your own spellcheck-func. Fortunately this is simple:\",\"The function reads the command line from STDIN, if the spellchecker reads lines from parameters rather than STDIN you'll need to write something equivalent to the following\",\"{ # This is a theoretical example. It will not work generically. -> set: line newspellchecker --check \\\"$line\\\" } \",\"The output of the function must me an array containing the misspelt words only. That array can be JSON just as long as you have set STDOUT's data type tojson. Similarly, other supported Murex data types can be used too. However in general you might just want to go with a misspelling per line as it's pretty POSIX friendly and thus most spellcheckers are likely to support it. eg\",\"» out \\\"a list of misspelt words: qwert fuubar madeupword\\\" -> aspell: list qwert fuubar madeupword \"]},\"348\":{\"h\":\"User Dictionary\",\"t\":[\"Murex has it's own user dictionary, which is held as a JSON array:\",\"» config: get shell spellcheck-user-dictionary [\\\"murex\\\"] \",\"You can add words to a user dictionary via:\",\"» config: eval shell spellcheck-user-dictionary { -> append \\\"myword\\\" } \",\"or\",\"» config: eval shell spellcheck-user-dictionary { -> alter: --merge / ([\\\"word1\\\", \\\"word2\\\", \\\"word3\\\"]) } \",\"Don't forget to record these in your Murex profile, ~/.murex_profile to make the changes persistent.\"]},\"349\":{\"h\":\"Ignored By Default\",\"t\":[\"Sometimes commands are not valid words in ones native language. Thus any words that fall into the following categories are ignored by default:\",\"words that are also the names of commands found in $PATH\",\"words that are the names of Murex functions (defined via function)\",\"words that are builtins (eg config and jsplit)\",\"any global aliases\",\"also any words that are also the names of global variables\"]},\"350\":{\"h\":\"Common Problems With aspell\"},\"351\":{\"h\":\"Error: No word lists can be found for the language \\\"en_NZ\\\".\",\"t\":[\"The en_NZ portion of the error will differ depending on your language.\",\"If this error arises then it means aspell is installed but it doesn't have the dictionary for your language. This is an easy fix in most OSs. For example in Ubuntu:\",\"apt install aspell-en \",\"(you may need to change -en with your specific language code)\",\"Please consult your operating systems documentation for how to install software and what the package names are for aspell and its corresponding dictionaries.\"]},\"352\":{\"h\":\"See Also\",\"t\":[\"ANSI Constants: Infixed constants that return ANSI escape sequences\",\"Code Block Parsing: Overview of how code blocks are parsed\",\"Curly Brace ({, }) Tokens: Initiates or terminates a code block\",\"Murex Profile Files: A breakdown of the different files loaded on start up\",\"Murex's Interactive Shell: What's different about Murex's interactive shell?\",\"alter: Change a value within a structured data-type and pass that change along the pipeline without altering the original source input\",\"append: Add data to the end of an array\",\"config: Query or define Murex runtime settings\",\"json: JavaScript Object Notation (JSON)\",\"jsplit: Splits STDIN into a JSON array based on a regex parameter\",\"set:\\nDefine a local variable and set it's value\"]},\"353\":{\"h\":\"Terminal Hotkeys - User Guide\",\"t\":[\"A list of all the terminal hotkeys and their uses\"]},\"354\":{\"h\":\"tab : autocomplete\",\"t\":[\"Provides autocompletion suggestions. Press esc to hide suggestions.\"]},\"355\":{\"h\":\"ctrl + c : kill foreground process\",\"t\":[\"Pressing this will send a kill (SIGINT) request to the foreground process.\"]},\"356\":{\"h\":\"ctrl + d : end of file\",\"t\":[\"Send EOF (end of file). If the shell is sat on the prompt then this will exit that running session.\"]},\"357\":{\"h\":\"ctrl + f : find in autocomplete suggestions\",\"t\":[\"This will allow you to perform a search through the autocompletion suggestions, allowing you to quickly navigate complex command options or jump to specific sub-directories.\",\"By default the fuzzy finder will look for any item that includes all of the search words. However the search behavior can be changed if the first search term is any of these:\",\"or: show results that match any of the search terms. eg or .md .txt will match both markdown and txt files (when finding files in completion suggestions).\",\"!: only show suggestions that do not match any of the search terms. eg! .md .txt will match all files except markdown and txt files (when finding files in completion suggestions).\",\"g: show only results that match a shell glob. eg *.txt.\",\"rx: use a regexp pattern matcher instead of any fuzzy search. Expressions will be case insensitive and non-greedy by default.\",\"The fuzzy finder search is not case sensitive.\",\"Press esc to cancel search.\"]},\"358\":{\"h\":\"ctrl + r : search shell history\",\"t\":[\"This brings up your timestamped shell history as an autocomplete list with regexp search activated. Using ctrl+r you can rapidly rerun previous command lines.\",\"Press esc to cancel history completion.\"]},\"359\":{\"h\":\"ctrl + u : clear line\",\"t\":[\"Clears the current line.\"]},\"360\":{\"h\":\"ctrl + \\\\ : kill all running processes\",\"t\":[\"This will kill all processes owned by the current Murex session. Including any background processes too.\",\"This function is a effectively an emergency kill switch to bring you back to the command prompt.\",\"Use sparingly because it doesn't allow processes to end graceful.\"]},\"361\":{\"h\":\"ctrl + z : suspend foreground process\",\"t\":[\"Suspends the execution of the current foreground process. You can then use job control to resume execution in either the foreground or background. (read more)\"]},\"362\":{\"h\":\"esc (aka \\\"vim keys\\\")\",\"t\":[\"Pressing esc while no autocomplete suggestions are shown will switch the line editor into vim keys mode.\",\"Press i to return to normal editing mode.\"]},\"363\":{\"h\":\"Supported keys\",\"t\":[\"a: insert after current character\",\"A: insert at end of line\",\"b: jump to beginning of word\",\"B: jump to previous whitespace\",\"d: delete mode\",\"D: delete characters\",\"e: jump to end of word\",\"E: jump to next whitespace\",\"h: previous character (like 🠔)\",\"i: insert mode\",\"I: insert at beginning of line\",\"l: next character (like 🠖)\",\"p: paste after\",\"P: paste before\",\"r: replace character (replace once)\",\"R: replace many characters\",\"u: undo\",\"v: visual editor (opens line in $EDITOR)\",\"w: jump to end of word\",\"W: jump to next whitespace\",\"x: delete character\",\"y: yank (copy line)\",\"Y: same as y\",\"[: jump to previous brace\",\"]: jump to next brace\",\"$: jump to end of line\",\"%: jump to either end of matching bracket\",\"0 to 9: repeat action n times. eg 5x would delete five (5) characters (x)\"]},\"364\":{\"h\":\"Full screen editing via $EDITOR\",\"t\":[\"When in \\\"vim keys\\\" mode, press v to bring up the visual editor. The editor will be whichever command is stored in the $EDITOR environmental variable.\"]},\"365\":{\"h\":\"Recalling previous words\",\"t\":[\"alt+1 recalls the first word\",\"alt+2 recalls the second word\",\"...\",\"alt+9 recalls the ninth word\",\"For example (code inside square brackets represent key presses rather than text):\",\"» echo two three four five six seven eight nine two three four five six seven eight nine » [alt+1]echo [alt+5]five \",\"Please note this isn't currently supported on all terminal emulators.\"]},\"366\":{\"h\":\"See Also\",\"t\":[\"Murex's Interactive Shell:\\nWhat's different about Murex's interactive shell?\"]},\"367\":{\"h\":\"Bar feature\"},\"368\":{\"h\":\"Introduction\",\"t\":[\"We support bar feature, ...\"]},\"369\":{\"h\":\"Details\",\"t\":[\"baz\",\"...\"]},\"370\":{\"h\":\"Baz\",\"t\":[\"Feature details here.\"]},\"371\":{\"h\":\"Foo feature\"},\"372\":{\"h\":\"Introduction\",\"t\":[\"We support foo feature, ...\"]},\"373\":{\"h\":\"Details\",\"t\":[\"ray\",\"...\"]},\"374\":{\"h\":\"Ray\",\"t\":[\"Feature details here.\"]},\"375\":{\"h\":\"User Guide\"}},\"dirtCount\":0,\"index\":[[\"🠖\",{\"1\":{\"363\":1}}],[\"🠔\",{\"1\":{\"363\":1}}],[\"qwert\",{\"1\":{\"347\":2}}],[\"qr\",{\"1\":{\"254\":1}}],[\"queries\",{\"1\":{\"105\":1,\"128\":1}}],[\"queryselector\",{\"1\":{\"214\":1}}],[\"query\",{\"1\":{\"102\":1,\"111\":1,\"125\":1,\"127\":1,\"128\":1,\"129\":1,\"131\":1,\"135\":1,\"137\":1,\"179\":1,\"184\":1,\"264\":1,\"265\":1,\"285\":1,\"329\":1,\"340\":1,\"352\":1}}],[\"question\",{\"1\":{\"66\":1}}],[\"quicker\",{\"1\":{\"128\":1}}],[\"quick\",{\"1\":{\"63\":1,\"68\":1}}],[\"quickly\",{\"1\":{\"50\":1,\"60\":1,\"61\":1,\"62\":1,\"79\":1,\"145\":1,\"357\":1}}],[\"quotation\",{\"1\":{\"27\":1,\"56\":1,\"63\":3}}],[\"quotes\",{\"1\":{\"12\":1,\"18\":1,\"136\":1,\"260\":1,\"330\":1}}],[\"quote\",{\"1\":{\"12\":4,\"18\":1,\"263\":1}}],[\"quoted\",{\"1\":{\"6\":1,\"12\":1,\"18\":1,\"330\":1}}],[\"quoting\",{\"0\":{\"12\":1},\"1\":{\"3\":1,\"330\":1}}],[\"↩︎\",{\"1\":{\"217\":1}}],[\"使用再生纸\",{\"1\":{\"142\":1}}],[\"举手之劳就可以使办公室更加环保\",{\"1\":{\"142\":1}}],[\"比如\",{\"1\":{\"142\":2}}],[\"~>\",{\"1\":{\"157\":1}}],[\"~\",{\"1\":{\"128\":2,\"262\":1,\"287\":1,\"289\":1,\"307\":3,\"345\":1,\"348\":1}}],[\"770c71786935b44ba6667eaa9d470888\",{\"1\":{\"289\":1}}],[\"79\",{\"1\":{\"259\":4}}],[\"70\",{\"1\":{\"259\":1}}],[\"70s\",{\"1\":{\"55\":1,\"73\":1}}],[\"72\",{\"1\":{\"259\":1}}],[\"7300\",{\"0\":{\"147\":1}}],[\"7\",{\"0\":{\"92\":1,\"130\":1},\"1\":{\"259\":4,\"330\":1}}],[\"83\",{\"1\":{\"259\":1}}],[\"82\",{\"1\":{\"259\":1}}],[\"81\",{\"1\":{\"259\":1}}],[\"80\",{\"1\":{\"259\":1}}],[\"80s\",{\"1\":{\"55\":1,\"73\":1}}],[\"8\",{\"0\":{\"91\":1,\"132\":1},\"1\":{\"259\":4}}],[\"91\",{\"1\":{\"259\":74,\"260\":2}}],[\"9\",{\"0\":{\"90\":1,\"134\":1,\"241\":1},\"1\":{\"230\":1,\"231\":1,\"240\":1,\"253\":1,\"259\":3,\"363\":1}}],[\"xdg\",{\"0\":{\"311\":1},\"1\":{\"311\":2}}],[\"xaxis\",{\"1\":{\"209\":1}}],[\"x16\",{\"1\":{\"108\":1}}],[\"x\",{\"0\":{\"84\":1,\"146\":1},\"1\":{\"84\":2,\"110\":1,\"136\":1,\"146\":2,\"363\":2}}],[\"xml\",{\"1\":{\"53\":1}}],[\"48\",{\"1\":{\"259\":22}}],[\"44\",{\"1\":{\"174\":1}}],[\"404\",{\"1\":{\"134\":1}}],[\"408028\",{\"1\":{\"101\":2}}],[\"408024\",{\"1\":{\"101\":2}}],[\"49\",{\"1\":{\"101\":1,\"130\":1,\"259\":41}}],[\"4\",{\"0\":{\"95\":1,\"121\":1},\"1\":{\"77\":1,\"84\":2,\"146\":2,\"259\":6,\"330\":3}}],[\"4200\",{\"0\":{\"159\":1}}],[\"42\",{\"1\":{\"69\":1}}],[\"43\",{\"1\":{\"59\":1}}],[\"00\",{\"1\":{\"106\":1,\"124\":1,\"268\":2}}],[\"01\",{\"0\":{\"89\":1},\"1\":{\"108\":1,\"123\":1}}],[\"09\",{\"0\":{\"88\":1,\"95\":1,\"96\":1},\"1\":{\"110\":1,\"119\":1,\"124\":1,\"183\":1}}],[\"03\",{\"0\":{\"85\":1},\"1\":{\"144\":1,\"268\":2}}],[\"07\",{\"0\":{\"82\":1,\"90\":1},\"1\":{\"134\":1,\"183\":1}}],[\"08\",{\"0\":{\"89\":1},\"1\":{\"78\":1,\"108\":1,\"110\":1,\"124\":1,\"136\":1}}],[\"05\",{\"0\":{\"91\":1,\"92\":1},\"1\":{\"78\":1,\"123\":1,\"130\":1,\"132\":1}}],[\"06\",{\"0\":{\"83\":1,\"84\":1,\"97\":1},\"1\":{\"78\":1,\"115\":1,\"174\":1,\"178\":1}}],[\"0\",{\"0\":{\"85\":1,\"87\":1,\"99\":1,\"101\":1,\"136\":1,\"140\":1,\"327\":1},\"1\":{\"68\":9,\"77\":1,\"207\":1,\"259\":2,\"268\":1,\"303\":1,\"327\":1,\"330\":7,\"363\":1}}],[\"02\",{\"0\":{\"50\":1,\"82\":1,\"86\":1,\"93\":1,\"94\":1},\"1\":{\"69\":1,\"126\":1,\"128\":1,\"138\":1,\"183\":1}}],[\"04\",{\"0\":{\"49\":1,\"84\":1,\"98\":1,\"99\":1},\"1\":{\"59\":1,\"101\":1,\"106\":1,\"174\":1}}],[\"zip\",{\"1\":{\"239\":3}}],[\"zero\",{\"1\":{\"91\":1,\"92\":1,\"110\":1,\"118\":1,\"130\":3,\"132\":1,\"170\":2,\"178\":1,\"335\":1,\"336\":1}}],[\"zshrc\",{\"1\":{\"310\":1}}],[\"zsh\",{\"1\":{\"62\":1,\"64\":1,\"303\":1}}],[\"z\",{\"0\":{\"361\":1},\"1\":{\"46\":1}}],[\"`^\",{\"1\":{\"259\":1}}],[\"`=~\",{\"1\":{\"144\":1}}],[\"`open\",{\"1\":{\"125\":1,\"131\":1,\"340\":1}}],[\"`exec`\",{\"1\":{\"118\":1}}],[\"`echo`\",{\"1\":{\"14\":1}}],[\"`method`\",{\"1\":{\"118\":1}}],[\"`\",{\"1\":{\"118\":3,\"259\":1}}],[\"`|`\",{\"1\":{\"118\":3}}],[\"`config\",{\"1\":{\"86\":1,\"138\":1}}],[\"`git\",{\"1\":{\"32\":1}}],[\"y\",{\"1\":{\"363\":3}}],[\"yank\",{\"1\":{\"363\":1}}],[\"yaxis\",{\"1\":{\"209\":1}}],[\"yarn\",{\"1\":{\"132\":1,\"134\":2,\"136\":1}}],[\"yay\",{\"1\":{\"110\":1}}],[\"yaml\",{\"1\":{\"26\":1,\"53\":1,\"57\":1,\"75\":1,\"76\":1,\"119\":1}}],[\"yes\",{\"1\":{\"210\":1}}],[\"yellow\",{\"1\":{\"123\":1,\"259\":4}}],[\"yet\",{\"1\":{\"60\":1,\"123\":1,\"125\":3,\"137\":2,\"277\":1}}],[\"years\",{\"1\":{\"39\":1,\"62\":1,\"66\":1,\"286\":1,\"330\":1}}],[\"you\",{\"1\":{\"5\":1,\"8\":1,\"9\":2,\"10\":2,\"13\":1,\"15\":1,\"16\":1,\"17\":1,\"21\":1,\"22\":5,\"24\":1,\"28\":1,\"29\":1,\"31\":2,\"32\":1,\"34\":1,\"37\":2,\"38\":1,\"41\":1,\"54\":3,\"55\":4,\"56\":4,\"57\":2,\"58\":2,\"59\":3,\"62\":1,\"63\":5,\"66\":8,\"67\":1,\"68\":1,\"72\":3,\"73\":5,\"75\":5,\"86\":1,\"91\":1,\"105\":2,\"110\":1,\"123\":3,\"126\":2,\"128\":7,\"130\":2,\"132\":1,\"134\":2,\"136\":1,\"138\":2,\"141\":3,\"169\":1,\"177\":2,\"188\":1,\"191\":2,\"192\":1,\"193\":2,\"204\":1,\"221\":1,\"222\":3,\"223\":1,\"231\":1,\"241\":2,\"244\":2,\"247\":1,\"252\":2,\"253\":7,\"254\":1,\"262\":1,\"275\":1,\"277\":3,\"281\":3,\"284\":1,\"286\":1,\"290\":1,\"300\":1,\"302\":1,\"303\":1,\"305\":2,\"308\":1,\"311\":4,\"314\":1,\"328\":1,\"330\":2,\"333\":1,\"338\":1,\"342\":2,\"346\":2,\"347\":5,\"348\":1,\"351\":1,\"357\":2,\"358\":1,\"360\":1,\"361\":1}}],[\"yourself\",{\"1\":{\"342\":1}}],[\"your~\",{\"1\":{\"123\":1}}],[\"your\",{\"0\":{\"347\":1},\"1\":{\"1\":1,\"4\":2,\"10\":1,\"16\":1,\"17\":1,\"21\":1,\"22\":1,\"45\":1,\"49\":2,\"52\":2,\"59\":2,\"70\":2,\"73\":2,\"92\":1,\"102\":1,\"104\":1,\"110\":1,\"113\":1,\"123\":2,\"128\":3,\"130\":2,\"137\":1,\"222\":2,\"231\":1,\"243\":1,\"244\":3,\"247\":1,\"252\":2,\"253\":1,\"255\":1,\"262\":1,\"268\":1,\"274\":1,\"277\":1,\"281\":1,\"286\":2,\"308\":1,\"342\":2,\"345\":1,\"347\":1,\"348\":1,\"351\":4,\"358\":1}}],[\"jsplit\",{\"1\":{\"349\":1,\"352\":1}}],[\"jsonc\",{\"1\":{\"132\":1,\"133\":1}}],[\"jsonl\",{\"1\":{\"107\":1,\"132\":1}}],[\"jsonlines\",{\"1\":{\"105\":1,\"132\":1}}],[\"json=\",{\"1\":{\"56\":1}}],[\"json\",{\"0\":{\"58\":1,\"314\":1,\"322\":1,\"323\":1,\"325\":1},\"1\":{\"25\":2,\"26\":1,\"49\":1,\"52\":2,\"53\":1,\"55\":2,\"56\":3,\"57\":3,\"58\":3,\"59\":4,\"70\":1,\"73\":2,\"74\":1,\"75\":4,\"76\":2,\"105\":1,\"107\":1,\"119\":1,\"125\":1,\"128\":2,\"132\":3,\"133\":1,\"136\":2,\"137\":1,\"177\":1,\"266\":2,\"277\":1,\"289\":3,\"303\":1,\"322\":1,\"323\":1,\"330\":1,\"347\":1,\"348\":1,\"352\":3}}],[\"joined\",{\"1\":{\"302\":1}}],[\"jobs\",{\"1\":{\"105\":3,\"107\":1,\"123\":1,\"138\":1,\"330\":3}}],[\"job\",{\"1\":{\"69\":1,\"330\":1,\"361\":1}}],[\"ja\",{\"1\":{\"125\":1,\"136\":2,\"137\":1}}],[\"jan\",{\"1\":{\"123\":1}}],[\"january\",{\"1\":{\"75\":4,\"221\":1}}],[\"javascript\",{\"1\":{\"67\":1,\"68\":1,\"352\":1}}],[\"jq\",{\"0\":{\"56\":1},\"1\":{\"52\":1,\"55\":1,\"56\":8,\"57\":1,\"59\":1,\"73\":1,\"277\":2}}],[\"july\",{\"1\":{\"75\":2}}],[\"june\",{\"1\":{\"75\":2}}],[\"jumped\",{\"1\":{\"177\":1}}],[\"jump\",{\"1\":{\"41\":1,\"177\":5,\"357\":1,\"363\":10}}],[\"just\",{\"1\":{\"6\":1,\"17\":1,\"43\":1,\"54\":1,\"56\":1,\"57\":2,\"58\":1,\"62\":1,\"63\":3,\"72\":1,\"75\":1,\"130\":1,\"134\":2,\"153\":1,\"177\":1,\"256\":1,\"268\":1,\"305\":1,\"347\":2}}],[\"3rd\",{\"0\":{\"342\":1},\"1\":{\"268\":1}}],[\"386\",{\"1\":{\"235\":1,\"236\":1,\"237\":1,\"238\":1,\"239\":1,\"241\":1}}],[\"380\",{\"1\":{\"123\":2}}],[\"35\",{\"1\":{\"134\":1}}],[\"32bit\",{\"1\":{\"126\":1}}],[\"379\",{\"1\":{\"123\":1}}],[\"33\",{\"1\":{\"119\":1,\"128\":1}}],[\"362\",{\"1\":{\"118\":1}}],[\"316\",{\"1\":{\"118\":1}}],[\"31\",{\"0\":{\"87\":1},\"1\":{\"136\":1,\"259\":1}}],[\"304\",{\"1\":{\"325\":2}}],[\"3010\",{\"0\":{\"163\":1}}],[\"30\",{\"0\":{\"98\":1},\"1\":{\"39\":1,\"106\":1,\"259\":1,\"330\":1}}],[\"3\",{\"0\":{\"82\":1,\"96\":1,\"117\":1,\"180\":1,\"328\":1},\"1\":{\"25\":2,\"26\":2,\"27\":4,\"57\":1,\"76\":1,\"77\":2,\"136\":1,\"231\":1,\"259\":3,\"322\":2,\"323\":2,\"330\":17}}],[\"<<eocline\",{\"1\":{\"330\":1}}],[\"<stdin>\",{\"1\":{\"301\":1}}],[\"<span\",{\"1\":{\"214\":1}}],[\"<out>\",{\"1\":{\"300\":3}}],[\"<in>\",{\"1\":{\"300\":2}}],[\"<int>\",{\"1\":{\"177\":1}}],[\"<p>is\",{\"1\":{\"214\":1}}],[\"<pre><code>config\",{\"1\":{\"123\":2}}],[\"<pre><code>\",{\"1\":{\"114\":1,\"118\":1}}],[\"<h1>vuepress\",{\"1\":{\"214\":1}}],[\"<~\",{\"1\":{\"154\":1,\"161\":1}}],[\"<>\",{\"1\":{\"127\":1,\"301\":1}}],[\"<table2>\",{\"1\":{\"126\":1}}],[\"<table1>\",{\"1\":{\"126\":1}}],[\"<env\",{\"1\":{\"114\":1,\"166\":1}}],[\"<err>\",{\"1\":{\"22\":2,\"300\":1,\"330\":1}}],[\"<null>\",{\"1\":{\"22\":2,\"300\":1}}],[\"<\",{\"1\":{\"22\":4,\"54\":3,\"72\":3,\"123\":1,\"214\":1,\"283\":1,\"300\":1,\"330\":1}}],[\"$value\",{\"1\":{\"330\":1}}],[\"$key\",{\"1\":{\"330\":1}}],[\"$object\",{\"1\":{\"330\":5}}],[\"$array\",{\"1\":{\"330\":2}}],[\"$args\",{\"1\":{\"322\":2,\"323\":1,\"327\":1,\"328\":1}}],[\"$shell\",{\"1\":{\"324\":1,\"330\":4}}],[\"$shells\",{\"1\":{\"50\":1,\"61\":1,\"62\":1}}],[\"$self\",{\"1\":{\"314\":1}}],[\"$xdg\",{\"1\":{\"311\":4}}],[\"$gitstatus\",{\"1\":{\"283\":1}}],[\"$gopath\",{\"1\":{\"252\":1,\"253\":2}}],[\"$global\",{\"1\":{\"15\":4,\"142\":1,\"330\":1}}],[\"$hello\",{\"1\":{\"141\":1}}],[\"$hostname\",{\"1\":{\"130\":1}}],[\"$0\",{\"1\":{\"130\":1}}],[\"$2\",{\"1\":{\"130\":1}}],[\"$19\",{\"1\":{\"328\":1}}],[\"$13\",{\"1\":{\"130\":1}}],[\"$1\",{\"1\":{\"130\":2,\"328\":1}}],[\"$table2\",{\"1\":{\"126\":1}}],[\"$table1\",{\"1\":{\"126\":1}}],[\"$len\",{\"1\":{\"123\":1}}],[\"$linenum\",{\"1\":{\"123\":1}}],[\"$line\",{\"1\":{\"54\":4,\"72\":4,\"347\":1}}],[\"$editor\",{\"0\":{\"364\":1},\"1\":{\"274\":1,\"363\":1,\"364\":1}}],[\"$example\",{\"1\":{\"77\":2}}],[\"$envvar\",{\"1\":{\"266\":2}}],[\"$env\",{\"1\":{\"16\":3,\"142\":1,\"330\":1}}],[\"$myvar\",{\"1\":{\"132\":1}}],[\"$months\",{\"1\":{\"75\":2}}],[\"$message\",{\"1\":{\"32\":1}}],[\"$day\",{\"1\":{\"56\":1,\"57\":1,\"58\":2}}],[\"$jsonobject\",{\"1\":{\"58\":2}}],[\"$jsonstring\",{\"1\":{\"58\":3}}],[\"$json\",{\"1\":{\"56\":1,\"57\":1,\"142\":1}}],[\"$number\",{\"1\":{\"330\":1}}],[\"$new\",{\"1\":{\"54\":2,\"72\":2}}],[\"$name\",{\"1\":{\"15\":3,\"39\":1,\"330\":2}}],[\"$item\",{\"1\":{\"330\":1}}],[\"$itemdone\",{\"1\":{\"330\":1}}],[\"$integer\",{\"1\":{\"330\":1}}],[\"$i\",{\"1\":{\"41\":2,\"42\":2}}],[\"$params\",{\"1\":{\"322\":1,\"323\":2}}],[\"$path\",{\"1\":{\"34\":1,\"128\":1,\"138\":2,\"255\":1,\"311\":1,\"349\":1}}],[\"$prefix\",{\"1\":{\"157\":1}}],[\"$pwd\",{\"1\":{\"134\":1,\"141\":3}}],[\"$person\",{\"1\":{\"39\":1,\"330\":1}}],[\"$user\",{\"1\":{\"37\":1,\"42\":1,\"308\":1}}],[\"$\",{\"1\":{\"27\":2,\"28\":1,\"56\":1,\"57\":1,\"77\":4,\"123\":3,\"130\":1,\"141\":2,\"142\":3,\"145\":1,\"150\":1,\"157\":1,\"177\":1,\"178\":1,\"329\":1,\"330\":16,\"331\":4,\"332\":1,\"363\":1}}],[\"$f\",{\"1\":{\"253\":1}}],[\"$fruit\",{\"1\":{\"38\":1}}],[\"$file\",{\"1\":{\"18\":1}}],[\"$foo\",{\"1\":{\"15\":1,\"136\":1,\"142\":1,\"330\":1,\"331\":1,\"338\":3}}],[\"$foobar\",{\"1\":{\"14\":1,\"142\":1,\"330\":3,\"331\":1}}],[\"2eoc\",{\"1\":{\"330\":1}}],[\"29\",{\"1\":{\"259\":1}}],[\"299\",{\"1\":{\"118\":1}}],[\"28t09\",{\"1\":{\"268\":2}}],[\"28\",{\"1\":{\"259\":1}}],[\"27\",{\"1\":{\"259\":91,\"260\":2}}],[\"25\",{\"1\":{\"259\":1}}],[\"253\",{\"1\":{\"207\":1}}],[\"2^31\",{\"1\":{\"126\":1}}],[\"2^63\",{\"1\":{\"126\":1}}],[\"218\",{\"1\":{\"209\":1}}],[\"21\",{\"0\":{\"97\":1},\"1\":{\"115\":2,\"123\":1,\"138\":1,\"259\":1}}],[\"230\",{\"1\":{\"207\":1,\"209\":1}}],[\"23\",{\"0\":{\"91\":1},\"1\":{\"132\":2,\"178\":1,\"259\":1}}],[\"260\",{\"1\":{\"209\":1}}],[\"26\",{\"0\":{\"85\":1,\"93\":1,\"96\":1},\"1\":{\"119\":1,\"128\":1,\"144\":1,\"259\":1}}],[\"24\",{\"1\":{\"78\":1,\"259\":1}}],[\"224\",{\"1\":{\"209\":1}}],[\"22\",{\"0\":{\"49\":1},\"1\":{\"59\":1,\"69\":1,\"130\":1,\"132\":1,\"138\":1,\"259\":1}}],[\"2>\",{\"1\":{\"22\":1,\"330\":1}}],[\"2\",{\"0\":{\"83\":1,\"97\":1,\"112\":1,\"175\":1,\"328\":1},\"1\":{\"14\":1,\"25\":2,\"26\":2,\"27\":4,\"76\":1,\"77\":7,\"82\":1,\"108\":1,\"118\":1,\"180\":1,\"259\":4,\"299\":1,\"322\":2,\"323\":2,\"330\":20}}],[\"200\",{\"1\":{\"123\":1}}],[\"2020\",{\"1\":{\"221\":1}}],[\"2022\",{\"0\":{\"87\":1,\"88\":1,\"89\":1,\"90\":1,\"91\":1,\"92\":1,\"93\":1,\"94\":1},\"1\":{\"108\":1,\"110\":1,\"126\":1,\"128\":1,\"130\":1,\"132\":1,\"134\":1,\"136\":1}}],[\"2021\",{\"0\":{\"50\":1,\"95\":1,\"96\":1,\"97\":1,\"98\":1,\"99\":1},\"1\":{\"69\":1,\"78\":1,\"101\":1,\"106\":1,\"115\":1,\"119\":1,\"124\":1,\"268\":2}}],[\"2023\",{\"0\":{\"49\":1,\"82\":1,\"83\":1,\"84\":1,\"85\":1,\"86\":1},\"1\":{\"59\":1,\"138\":1,\"144\":1,\"174\":1,\"178\":1,\"183\":1}}],[\"20\",{\"1\":{\"14\":1,\"39\":1,\"108\":1,\"123\":1,\"134\":1,\"259\":1,\"330\":1}}],[\"kind\",{\"1\":{\"105\":1}}],[\"kin\",{\"1\":{\"68\":1}}],[\"killed\",{\"1\":{\"128\":1}}],[\"kill\",{\"0\":{\"355\":1,\"360\":1},\"1\":{\"7\":1,\"274\":1,\"355\":1,\"360\":2}}],[\"knew\",{\"1\":{\"63\":1}}],[\"known\",{\"1\":{\"246\":1,\"299\":1,\"330\":1}}],[\"know\",{\"1\":{\"10\":1,\"37\":1,\"192\":1,\"193\":1}}],[\"kept\",{\"1\":{\"286\":1}}],[\"keywords\",{\"1\":{\"331\":1}}],[\"key2\",{\"1\":{\"330\":2}}],[\"key1\",{\"1\":{\"330\":2}}],[\"keyboard\",{\"1\":{\"153\":1}}],[\"keys\",{\"0\":{\"362\":1,\"363\":1},\"1\":{\"104\":1,\"110\":1,\"111\":2,\"113\":1,\"169\":1,\"183\":2,\"259\":1,\"274\":1,\"276\":1,\"362\":1,\"364\":1}}],[\"keystrokes\",{\"1\":{\"31\":1}}],[\"key=c\",{\"1\":{\"76\":1}}],[\"key=b\",{\"1\":{\"76\":1}}],[\"key=a\",{\"1\":{\"76\":1}}],[\"key=$key\",{\"1\":{\"76\":1}}],[\"key\",{\"1\":{\"66\":1,\"68\":1,\"76\":3,\"77\":3,\"113\":1,\"162\":1,\"304\":1,\"330\":6,\"365\":1}}],[\"keyed\",{\"1\":{\"63\":1}}],[\"keeping\",{\"1\":{\"281\":1}}],[\"keep\",{\"1\":{\"56\":1,\"169\":1}}],[\"vt100\",{\"1\":{\"259\":6}}],[\"vue\",{\"0\":{\"217\":1},\"1\":{\"217\":2}}],[\"vuepress\",{\"0\":{\"195\":1},\"1\":{\"191\":2,\"193\":2,\"194\":1,\"195\":2,\"196\":1,\"222\":1}}],[\"v1\",{\"1\":{\"134\":2}}],[\"v19\",{\"1\":{\"110\":1}}],[\"v\",{\"1\":{\"108\":2,\"274\":1,\"363\":1,\"364\":1}}],[\"v2\",{\"0\":{\"88\":1,\"89\":1,\"90\":1,\"91\":1,\"92\":1,\"93\":1,\"94\":1,\"95\":1,\"96\":1,\"97\":1,\"98\":1,\"99\":1,\"101\":1,\"103\":1,\"108\":1,\"110\":1,\"112\":1,\"117\":1,\"121\":1,\"126\":1,\"128\":1,\"130\":1,\"132\":1,\"134\":1},\"1\":{\"118\":1}}],[\"v3\",{\"0\":{\"86\":1,\"87\":1,\"136\":1,\"138\":1}}],[\"v4\",{\"0\":{\"82\":1,\"83\":1,\"84\":1,\"85\":1,\"140\":1,\"146\":1,\"147\":1,\"151\":1,\"155\":1,\"159\":1,\"163\":1,\"167\":1,\"171\":1,\"175\":1,\"180\":1},\"1\":{\"82\":1,\"180\":1}}],[\"visual\",{\"1\":{\"363\":1,\"364\":1}}],[\"visible\",{\"1\":{\"110\":1,\"118\":1}}],[\"vi\",{\"1\":{\"274\":1}}],[\"view\",{\"1\":{\"197\":1,\"198\":1,\"199\":1,\"200\":1,\"201\":1,\"202\":1,\"203\":1,\"204\":1,\"205\":1,\"206\":1,\"207\":1,\"208\":1,\"209\":1,\"210\":1,\"211\":1,\"212\":1,\"213\":1,\"214\":1,\"215\":1,\"216\":1,\"274\":1}}],[\"vim\",{\"0\":{\"362\":1},\"1\":{\"162\":2,\"274\":1,\"362\":1,\"364\":1}}],[\"video\",{\"1\":{\"75\":1}}],[\"via\",{\"0\":{\"56\":1,\"57\":1,\"364\":1},\"1\":{\"8\":1,\"17\":1,\"22\":1,\"28\":4,\"34\":1,\"52\":2,\"86\":1,\"105\":4,\"123\":1,\"130\":3,\"134\":3,\"136\":3,\"138\":4,\"142\":1,\"194\":1,\"231\":1,\"244\":1,\"270\":1,\"291\":1,\"295\":1,\"302\":1,\"311\":1,\"313\":1,\"348\":1,\"349\":1}}],[\"vendor\",{\"1\":{\"134\":1}}],[\"vendors\",{\"1\":{\"106\":1,\"115\":1}}],[\"ve\",{\"1\":{\"58\":1,\"63\":1,\"64\":2,\"286\":1}}],[\"verify\",{\"1\":{\"105\":1}}],[\"verbose\",{\"1\":{\"66\":2}}],[\"versions\",{\"1\":{\"84\":1,\"134\":2,\"146\":1}}],[\"version\",{\"1\":{\"57\":1,\"77\":1,\"91\":1,\"110\":1,\"132\":1,\"134\":1,\"136\":1,\"243\":1,\"254\":1}}],[\"verses\",{\"1\":{\"50\":1,\"61\":1}}],[\"very\",{\"0\":{\"62\":1},\"1\":{\"22\":1,\"62\":2,\"153\":1,\"214\":3,\"324\":1}}],[\"var\",{\"1\":{\"259\":2}}],[\"vars\",{\"1\":{\"123\":1,\"128\":2}}],[\"variety\",{\"1\":{\"36\":1,\"37\":1}}],[\"variable\",{\"0\":{\"338\":1},\"1\":{\"14\":1,\"16\":1,\"17\":1,\"19\":1,\"54\":4,\"57\":1,\"58\":1,\"72\":4,\"77\":1,\"86\":1,\"111\":2,\"126\":1,\"127\":2,\"128\":1,\"130\":3,\"131\":1,\"134\":2,\"136\":2,\"138\":1,\"142\":3,\"157\":1,\"177\":1,\"197\":1,\"252\":1,\"264\":2,\"265\":1,\"268\":1,\"293\":1,\"312\":1,\"314\":1,\"324\":2,\"328\":2,\"329\":3,\"330\":4,\"331\":2,\"338\":3,\"340\":2,\"352\":1,\"364\":1}}],[\"variables\",{\"0\":{\"14\":1,\"15\":1,\"16\":1,\"313\":1},\"1\":{\"3\":3,\"12\":1,\"14\":2,\"15\":1,\"16\":5,\"18\":4,\"19\":1,\"24\":1,\"62\":1,\"93\":1,\"95\":1,\"108\":1,\"114\":1,\"121\":1,\"123\":2,\"126\":3,\"128\":1,\"130\":4,\"131\":2,\"133\":2,\"135\":2,\"136\":3,\"141\":1,\"142\":2,\"150\":1,\"166\":1,\"178\":1,\"265\":2,\"266\":1,\"271\":1,\"283\":1,\"296\":1,\"308\":2,\"311\":1,\"313\":3,\"314\":1,\"328\":1,\"330\":4,\"331\":2,\"338\":1,\"340\":2,\"349\":1}}],[\"various\",{\"1\":{\"4\":1,\"59\":1,\"144\":1,\"182\":1}}],[\"val\",{\"1\":{\"77\":6,\"330\":1}}],[\"value3\",{\"1\":{\"330\":3}}],[\"value2\",{\"1\":{\"330\":3}}],[\"value1\",{\"1\":{\"330\":3}}],[\"value=3\",{\"1\":{\"76\":1}}],[\"value=2\",{\"1\":{\"76\":1}}],[\"value=1\",{\"1\":{\"76\":1}}],[\"value=$value\",{\"1\":{\"76\":1}}],[\"value\",{\"1\":{\"76\":3,\"86\":1,\"111\":1,\"122\":1,\"127\":2,\"138\":1,\"168\":1,\"209\":1,\"265\":1,\"300\":1,\"311\":1,\"312\":1,\"315\":1,\"316\":1,\"317\":1,\"318\":1,\"319\":1,\"320\":1,\"329\":1,\"330\":4,\"338\":4,\"340\":1,\"352\":2}}],[\"values\",{\"1\":{\"7\":1,\"8\":1,\"56\":1,\"104\":1,\"110\":1,\"125\":1,\"126\":2,\"132\":1,\"142\":1,\"145\":1,\"168\":1,\"169\":2,\"177\":2,\"260\":1,\"283\":1,\"329\":2,\"332\":2}}],[\"validates\",{\"1\":{\"335\":1}}],[\"valid\",{\"1\":{\"7\":1,\"13\":1,\"141\":1,\"261\":1,\"303\":1,\"349\":1}}],[\"^^\",{\"1\":{\"259\":1}}],[\"^y\",{\"1\":{\"259\":1}}],[\"^x\",{\"1\":{\"259\":1}}],[\"^w\",{\"1\":{\"259\":1}}],[\"^v\",{\"1\":{\"259\":1}}],[\"^u\",{\"1\":{\"259\":1}}],[\"^t\",{\"1\":{\"259\":1}}],[\"^s\",{\"1\":{\"259\":1}}],[\"^q\",{\"1\":{\"259\":1}}],[\"^p\",{\"1\":{\"259\":1}}],[\"^o\",{\"1\":{\"259\":1}}],[\"^n\",{\"1\":{\"259\":1}}],[\"^m\",{\"1\":{\"259\":1}}],[\"^l\",{\"1\":{\"259\":1}}],[\"^k\",{\"1\":{\"259\":1}}],[\"^j\",{\"1\":{\"259\":1}}],[\"^i\",{\"1\":{\"259\":1}}],[\"^h\",{\"1\":{\"259\":1}}],[\"^g\",{\"1\":{\"259\":1}}],[\"^e\",{\"1\":{\"259\":1}}],[\"^d\",{\"1\":{\"259\":1}}],[\"^b\",{\"1\":{\"259\":1}}],[\"^a\",{\"1\":{\"259\":1}}],[\"^r\",{\"1\":{\"162\":1,\"259\":1}}],[\"^f\",{\"1\":{\"162\":1,\"259\":1}}],[\"^$name\",{\"1\":{\"130\":1}}],[\"^c\",{\"1\":{\"110\":2,\"130\":1,\"154\":1,\"259\":1}}],[\"^z\",{\"1\":{\"105\":2,\"130\":1,\"259\":1}}],[\"^\",{\"1\":{\"8\":2,\"41\":1,\"42\":1,\"136\":1,\"259\":5,\"283\":1}}],[\"1+2\",{\"1\":{\"330\":2}}],[\"1line\",{\"1\":{\"330\":2}}],[\"1st\",{\"1\":{\"136\":2}}],[\"147\",{\"1\":{\"209\":1}}],[\"14\",{\"1\":{\"134\":1,\"259\":1}}],[\"18\",{\"1\":{\"128\":1,\"252\":1,\"259\":1}}],[\"16\",{\"1\":{\"126\":2,\"259\":1}}],[\"1<\",{\"1\":{\"118\":1}}],[\"135\",{\"1\":{\"209\":1}}],[\"138\",{\"1\":{\"207\":1}}],[\"13\",{\"1\":{\"114\":1,\"134\":1,\"259\":3}}],[\"17\",{\"0\":{\"99\":1},\"1\":{\"101\":1,\"136\":1,\"144\":1,\"259\":1}}],[\"150\",{\"1\":{\"209\":1}}],[\"15\",{\"0\":{\"90\":1,\"92\":1},\"1\":{\"130\":1,\"134\":2,\"178\":1,\"207\":1,\"259\":1}}],[\"126\",{\"1\":{\"259\":18}}],[\"127\",{\"1\":{\"259\":2}}],[\"1200\",{\"1\":{\"118\":1}}],[\"12\",{\"0\":{\"86\":1,\"87\":1,\"88\":1,\"94\":1,\"95\":1},\"1\":{\"101\":1,\"105\":1,\"110\":1,\"124\":1,\"126\":1,\"136\":1,\"138\":1,\"259\":1}}],[\"1234\",{\"1\":{\"7\":1}}],[\"1974\",{\"1\":{\"304\":1}}],[\"1970s\",{\"1\":{\"67\":1}}],[\"19th\",{\"1\":{\"200\":1}}],[\"19\",{\"0\":{\"83\":1},\"1\":{\"178\":1,\"259\":1,\"328\":1}}],[\"11357\",{\"1\":{\"314\":2}}],[\"1100\",{\"0\":{\"167\":1}}],[\"11\",{\"0\":{\"88\":1,\"110\":1},\"1\":{\"59\":1,\"119\":1,\"259\":1}}],[\"1\",{\"0\":{\"84\":1,\"86\":1,\"98\":1,\"103\":1,\"138\":1,\"146\":1,\"147\":1,\"151\":1,\"155\":1,\"159\":1,\"163\":1,\"167\":1,\"171\":1,\"328\":1},\"1\":{\"14\":2,\"22\":1,\"25\":2,\"26\":2,\"27\":4,\"29\":2,\"41\":1,\"42\":1,\"57\":1,\"68\":9,\"76\":1,\"77\":2,\"84\":2,\"118\":2,\"122\":1,\"123\":1,\"126\":4,\"134\":1,\"136\":3,\"146\":2,\"183\":1,\"197\":1,\"203\":1,\"221\":1,\"252\":1,\"259\":3,\"268\":1,\"322\":2,\"323\":2,\"330\":19,\"331\":1}}],[\"109\",{\"1\":{\"259\":50,\"260\":2}}],[\"10\",{\"0\":{\"50\":1,\"89\":1,\"108\":1,\"171\":1},\"1\":{\"7\":1,\"39\":1,\"41\":1,\"42\":1,\"69\":1,\"106\":1,\"108\":1,\"110\":1,\"136\":1,\"174\":1,\"259\":3,\"268\":2,\"330\":1}}],[\"||\",{\"1\":{\"108\":1,\"109\":1,\"130\":2,\"131\":1,\"330\":2,\"332\":1}}],[\"|>\",{\"1\":{\"23\":1,\"134\":1,\"330\":1}}],[\"|\",{\"1\":{\"7\":1,\"8\":1,\"21\":3,\"25\":3,\"26\":1,\"28\":2,\"38\":1,\"39\":1,\"41\":1,\"42\":1,\"54\":1,\"56\":2,\"57\":1,\"63\":2,\"72\":1,\"75\":3,\"76\":1,\"114\":1,\"119\":1,\"120\":1,\"277\":2,\"285\":1,\"302\":1,\"303\":2,\"306\":1,\"330\":21,\"337\":1}}],[\"h\",{\"1\":{\"363\":1}}],[\"human\",{\"1\":{\"259\":1}}],[\"h=murex\",{\"1\":{\"249\":1}}],[\"h1>\",{\"1\":{\"214\":1}}],[\"h2o\",{\"1\":{\"200\":1}}],[\"html\",{\"1\":{\"182\":1}}],[\"https\",{\"0\":{\"247\":1},\"1\":{\"101\":5,\"123\":1,\"182\":1,\"207\":2,\"231\":1,\"243\":1,\"245\":1,\"249\":2,\"253\":1,\"289\":1,\"291\":1,\"325\":1}}],[\"http\",{\"1\":{\"17\":1,\"128\":2,\"137\":1,\"255\":1,\"289\":1,\"291\":1}}],[\"hcl\",{\"1\":{\"119\":1}}],[\"hyphen\",{\"1\":{\"118\":2}}],[\"hide\",{\"1\":{\"354\":1}}],[\"hiding\",{\"1\":{\"304\":1}}],[\"hierarchy\",{\"1\":{\"253\":1}}],[\"hitting\",{\"1\":{\"136\":1}}],[\"hint\",{\"0\":{\"281\":1,\"282\":1,\"283\":1,\"284\":1},\"1\":{\"110\":4,\"119\":1,\"123\":1,\"136\":1,\"144\":2,\"158\":1,\"273\":4,\"274\":1,\"281\":2,\"282\":4,\"283\":2,\"284\":1}}],[\"hinted\",{\"1\":{\"64\":1}}],[\"highlighted\",{\"1\":{\"279\":1}}],[\"highlighter\",{\"1\":{\"118\":1,\"150\":1}}],[\"highlight\",{\"0\":{\"227\":1},\"1\":{\"274\":1,\"277\":1}}],[\"highlighting\",{\"0\":{\"279\":1},\"1\":{\"118\":1,\"123\":1,\"273\":1,\"274\":1,\"279\":2,\"282\":1}}],[\"higher\",{\"1\":{\"109\":1,\"135\":1,\"252\":1,\"332\":1,\"337\":1}}],[\"high\",{\"1\":{\"87\":1,\"136\":1}}],[\"history\",{\"0\":{\"62\":1,\"358\":1},\"1\":{\"80\":1,\"110\":1,\"358\":2}}],[\"home\",{\"1\":{\"259\":2,\"268\":2,\"304\":1,\"308\":1,\"310\":1,\"311\":4}}],[\"homebrew\",{\"0\":{\"250\":1},\"1\":{\"134\":1,\"177\":1,\"232\":1,\"245\":1}}],[\"hope<\",{\"1\":{\"214\":1}}],[\"hope\",{\"1\":{\"207\":2,\"215\":1,\"221\":1}}],[\"holds\",{\"1\":{\"177\":1,\"324\":1}}],[\"hotkeys\",{\"0\":{\"276\":1,\"353\":1},\"1\":{\"145\":2,\"177\":1,\"179\":2,\"273\":1,\"276\":1,\"332\":2,\"353\":1}}],[\"honoring\",{\"1\":{\"136\":1}}],[\"hostname\",{\"0\":{\"326\":1},\"1\":{\"326\":1}}],[\"hosted\",{\"1\":{\"291\":1}}],[\"hosts\",{\"1\":{\"128\":1}}],[\"host\",{\"1\":{\"58\":1}}],[\"howdie\",{\"1\":{\"37\":1}}],[\"how\",{\"0\":{\"260\":1,\"347\":1},\"1\":{\"17\":1,\"25\":1,\"49\":2,\"50\":1,\"52\":2,\"55\":1,\"57\":1,\"61\":1,\"63\":1,\"65\":1,\"66\":1,\"67\":1,\"70\":2,\"73\":1,\"75\":1,\"93\":1,\"102\":1,\"105\":2,\"108\":1,\"109\":2,\"125\":1,\"128\":1,\"192\":1,\"252\":4,\"266\":2,\"268\":1,\"285\":2,\"297\":1,\"311\":1,\"328\":1,\"329\":1,\"330\":1,\"338\":1,\"341\":1,\"342\":1,\"351\":1,\"352\":1}}],[\"however\",{\"1\":{\"8\":1,\"13\":1,\"17\":1,\"34\":1,\"49\":1,\"52\":1,\"55\":1,\"56\":1,\"57\":1,\"63\":3,\"66\":3,\"70\":1,\"74\":1,\"87\":1,\"105\":2,\"110\":1,\"118\":1,\"123\":1,\"124\":1,\"126\":1,\"132\":1,\"136\":2,\"141\":1,\"157\":1,\"168\":1,\"240\":1,\"241\":1,\"252\":1,\"254\":1,\"256\":1,\"266\":1,\"277\":1,\"283\":1,\"299\":1,\"311\":1,\"315\":1,\"341\":1,\"347\":1,\"357\":1}}],[\"haywire\",{\"1\":{\"108\":1}}],[\"hand\",{\"1\":{\"120\":4,\"285\":4,\"306\":8,\"331\":1,\"337\":8}}],[\"handled\",{\"1\":{\"142\":1,\"144\":1,\"162\":1,\"183\":1}}],[\"handle\",{\"1\":{\"126\":1}}],[\"handles\",{\"1\":{\"109\":1,\"135\":1,\"332\":1,\"337\":1}}],[\"handler\",{\"1\":{\"102\":1,\"125\":2,\"131\":1,\"138\":1,\"179\":1,\"340\":1}}],[\"handling\",{\"1\":{\"90\":1,\"114\":1,\"130\":1,\"134\":1,\"174\":1}}],[\"handy\",{\"1\":{\"45\":1}}],[\"had\",{\"1\":{\"62\":1,\"63\":1,\"66\":1,\"108\":1,\"128\":2}}],[\"happen\",{\"1\":{\"110\":1,\"277\":1}}],[\"happens\",{\"1\":{\"58\":1,\"110\":1,\"336\":1,\"338\":1}}],[\"happening\",{\"1\":{\"56\":1,\"57\":1}}],[\"happy\",{\"1\":{\"56\":9,\"57\":1,\"64\":1,\"330\":1}}],[\"having\",{\"1\":{\"56\":1,\"58\":1,\"177\":1,\"202\":1,\"246\":1,\"299\":1}}],[\"haven\",{\"1\":{\"123\":1}}],[\"have\",{\"1\":{\"7\":1,\"21\":1,\"41\":1,\"50\":1,\"55\":2,\"57\":1,\"61\":1,\"63\":1,\"64\":1,\"66\":1,\"67\":1,\"73\":2,\"75\":1,\"84\":1,\"104\":1,\"105\":4,\"106\":2,\"115\":2,\"124\":1,\"128\":2,\"136\":1,\"146\":1,\"177\":1,\"181\":1,\"182\":1,\"243\":2,\"253\":1,\"255\":1,\"256\":1,\"270\":1,\"271\":1,\"274\":1,\"289\":1,\"295\":1,\"296\":1,\"308\":1,\"328\":1,\"338\":1,\"347\":1,\"351\":1}}],[\"hardcoded\",{\"1\":{\"283\":1}}],[\"harder\",{\"1\":{\"76\":1}}],[\"hard\",{\"1\":{\"49\":1,\"52\":1,\"70\":1,\"104\":2,\"123\":1}}],[\"hatch\",{\"1\":{\"45\":1}}],[\"haskell\",{\"1\":{\"256\":1}}],[\"hasklig\",{\"1\":{\"256\":1}}],[\"hasn\",{\"1\":{\"123\":1,\"128\":2}}],[\"hashed\",{\"1\":{\"270\":1,\"295\":1}}],[\"hashes\",{\"1\":{\"76\":1,\"330\":1}}],[\"hashtags\",{\"1\":{\"130\":1}}],[\"hash\",{\"1\":{\"13\":1,\"270\":3,\"295\":3}}],[\"has\",{\"1\":{\"13\":1,\"56\":1,\"58\":1,\"64\":1,\"66\":1,\"76\":1,\"83\":1,\"92\":1,\"93\":1,\"105\":1,\"108\":1,\"113\":1,\"118\":1,\"123\":2,\"124\":1,\"126\":1,\"128\":3,\"130\":1,\"134\":3,\"136\":5,\"138\":1,\"175\":1,\"177\":1,\"178\":1,\"195\":1,\"203\":1,\"264\":1,\"283\":1,\"286\":1,\"290\":1,\"304\":1,\"307\":1,\"342\":1,\"348\":1}}],[\"heritage\",{\"1\":{\"64\":1}}],[\"here\",{\"1\":{\"56\":1,\"57\":1,\"63\":1,\"76\":1,\"80\":1,\"114\":1,\"118\":1,\"126\":1,\"222\":1,\"316\":1,\"338\":1,\"370\":1,\"374\":1}}],[\"head\",{\"1\":{\"247\":1,\"283\":1}}],[\"headings\",{\"1\":{\"126\":1}}],[\"headline\",{\"1\":{\"89\":1,\"108\":1}}],[\"headers\",{\"1\":{\"105\":1}}],[\"header\",{\"1\":{\"17\":1,\"128\":1}}],[\"heavy\",{\"1\":{\"6\":2,\"69\":1}}],[\"held\",{\"1\":{\"348\":1}}],[\"helping\",{\"1\":{\"277\":1}}],[\"helps\",{\"1\":{\"118\":1}}],[\"helpful\",{\"1\":{\"54\":1,\"72\":1}}],[\"help\",{\"1\":{\"10\":1,\"21\":1,\"59\":1,\"118\":1,\"136\":1,\"158\":1,\"342\":1}}],[\"hello\",{\"1\":{\"7\":1,\"8\":1,\"13\":2,\"37\":1,\"57\":1,\"58\":1,\"130\":1,\"141\":1,\"330\":26}}],[\"+x\",{\"1\":{\"243\":1}}],[\"+json\",{\"1\":{\"128\":1}}],[\"+=\",{\"1\":{\"126\":1,\"154\":2}}],[\"+f\",{\"1\":{\"108\":1,\"330\":1}}],[\"+build\",{\"1\":{\"105\":1}}],[\"+s\",{\"1\":{\"28\":1,\"330\":1}}],[\"+d\",{\"1\":{\"28\":2}}],[\"+\",{\"0\":{\"355\":1,\"356\":1,\"357\":1,\"358\":1,\"359\":1,\"360\":1,\"361\":1},\"1\":{\"7\":2,\"44\":1,\"45\":1,\"46\":1,\"136\":1,\"142\":2,\"274\":1,\"330\":3}}],[\"=>\",{\"1\":{\"119\":1,\"177\":1,\"214\":1,\"283\":2,\"302\":1,\"306\":1,\"337\":1}}],[\"==\",{\"1\":{\"41\":1,\"42\":2,\"68\":5,\"77\":2,\"330\":3}}],[\"=\",{\"1\":{\"7\":1,\"14\":3,\"15\":3,\"16\":1,\"18\":1,\"19\":1,\"58\":2,\"68\":3,\"75\":1,\"77\":1,\"110\":1,\"123\":1,\"126\":3,\"132\":1,\"136\":1,\"142\":2,\"154\":1,\"197\":1,\"259\":2,\"330\":8,\"331\":1}}],[\"5x\",{\"1\":{\"363\":1}}],[\"59\",{\"1\":{\"259\":16}}],[\"593\",{\"1\":{\"149\":1}}],[\"541952+01\",{\"1\":{\"268\":1}}],[\"54\",{\"1\":{\"259\":4}}],[\"572197+01\",{\"1\":{\"268\":1}}],[\"57\",{\"1\":{\"259\":3}}],[\"56\",{\"1\":{\"259\":3}}],[\"566\",{\"1\":{\"174\":1}}],[\"53\",{\"1\":{\"259\":6,\"268\":2}}],[\"536\",{\"1\":{\"166\":1}}],[\"52\",{\"1\":{\"259\":25}}],[\"5200\",{\"0\":{\"155\":1}}],[\"55\",{\"1\":{\"183\":1,\"259\":6}}],[\"50\",{\"1\":{\"144\":1,\"259\":12,\"260\":2}}],[\"50+\",{\"1\":{\"66\":1}}],[\"51\",{\"1\":{\"115\":1,\"259\":25,\"260\":2}}],[\"5\",{\"0\":{\"94\":1,\"126\":1},\"1\":{\"7\":5,\"29\":2,\"41\":1,\"42\":1,\"134\":1,\"136\":2,\"259\":3,\"268\":2,\"330\":9,\"363\":1}}],[\">2\",{\"1\":{\"330\":1}}],[\">very<\",{\"1\":{\"214\":1}}],[\">c2\",{\"1\":{\"211\":1}}],[\">b2\",{\"1\":{\"211\":1}}],[\">a2\",{\"1\":{\"211\":2}}],[\">e\",{\"1\":{\"210\":2}}],[\">process\",{\"1\":{\"210\":1}}],[\">`\",{\"1\":{\"118\":3}}],[\">>\",{\"1\":{\"23\":1,\"134\":2,\"135\":2,\"330\":2,\"332\":2}}],[\">\",{\"1\":{\"7\":1,\"21\":4,\"104\":2,\"105\":1,\"108\":1,\"113\":1,\"119\":1,\"120\":1,\"123\":1,\"134\":2,\"135\":1,\"136\":1,\"165\":1,\"211\":3,\"253\":1,\"268\":2,\"277\":2,\"283\":4,\"285\":1,\"300\":2,\"302\":1,\"303\":1,\"306\":1,\"330\":3,\"332\":1,\"334\":2,\"336\":2,\"337\":1,\"346\":1,\"347\":2,\"348\":2}}],[\"68\",{\"1\":{\"259\":1}}],[\"67\",{\"1\":{\"259\":1}}],[\"66\",{\"1\":{\"259\":1}}],[\"65\",{\"1\":{\"259\":1}}],[\"628\",{\"1\":{\"183\":1}}],[\"620\",{\"1\":{\"177\":1}}],[\"630\",{\"1\":{\"183\":1}}],[\"614\",{\"1\":{\"178\":1}}],[\"6140\",{\"0\":{\"151\":1}}],[\"617\",{\"1\":{\"178\":1}}],[\"613\",{\"1\":{\"177\":1}}],[\"611\",{\"1\":{\"177\":1}}],[\"608\",{\"1\":{\"177\":1}}],[\"601\",{\"1\":{\"154\":1}}],[\"603\",{\"1\":{\"150\":1}}],[\"600\",{\"1\":{\"150\":1}}],[\"64bit\",{\"1\":{\"126\":1,\"243\":1}}],[\"6\",{\"0\":{\"93\":1,\"128\":1},\"1\":{\"7\":1,\"105\":1,\"231\":1,\"259\":3,\"330\":4}}],[\"nz\",{\"0\":{\"351\":1},\"1\":{\"351\":1}}],[\"n1\",{\"1\":{\"283\":1}}],[\"nine\",{\"1\":{\"365\":2}}],[\"ninth\",{\"1\":{\"365\":1}}],[\"nil\",{\"1\":{\"118\":1,\"136\":1}}],[\"niche\",{\"1\":{\"64\":1}}],[\"nicely\",{\"1\":{\"64\":1,\"66\":1}}],[\"nice\",{\"1\":{\"37\":1}}],[\"navigate\",{\"1\":{\"357\":1}}],[\"navbar\",{\"1\":{\"188\":1,\"223\":1}}],[\"naming\",{\"1\":{\"134\":1}}],[\"name=\",{\"1\":{\"330\":1}}],[\"named\",{\"0\":{\"298\":1,\"305\":1},\"1\":{\"27\":2,\"28\":1,\"57\":1,\"68\":1,\"123\":1,\"126\":2,\"127\":3,\"298\":1,\"299\":6,\"300\":3,\"301\":2,\"304\":1,\"305\":2,\"311\":1,\"332\":2,\"338\":1}}],[\"name\",{\"1\":{\"14\":1,\"15\":2,\"16\":1,\"17\":1,\"18\":2,\"22\":1,\"39\":1,\"58\":2,\"110\":1,\"113\":1,\"123\":3,\"128\":1,\"130\":2,\"150\":1,\"154\":1,\"243\":1,\"258\":1,\"260\":1,\"266\":1,\"274\":1,\"311\":2,\"322\":2,\"323\":1,\"327\":1,\"330\":18}}],[\"namespacing\",{\"1\":{\"286\":1,\"290\":1}}],[\"namespaces\",{\"1\":{\"134\":1}}],[\"namespace\",{\"1\":{\"15\":1,\"16\":2,\"33\":1}}],[\"names\",{\"1\":{\"6\":1,\"18\":1,\"58\":1,\"104\":1,\"126\":2,\"142\":1,\"303\":1,\"311\":2,\"349\":3,\"351\":1}}],[\"native\",{\"1\":{\"128\":1,\"136\":1,\"349\":1}}],[\"natively\",{\"1\":{\"56\":1,\"57\":1,\"74\":1,\"128\":1}}],[\"naturally\",{\"1\":{\"66\":1,\"277\":1}}],[\"n\",{\"1\":{\"53\":1,\"56\":1,\"63\":2,\"266\":2,\"328\":3,\"330\":10,\"363\":1}}],[\"nly\",{\"1\":{\"50\":1}}],[\"num\",{\"0\":{\"315\":1,\"316\":1},\"1\":{\"259\":1}}],[\"numeric\",{\"1\":{\"126\":1,\"330\":1}}],[\"numerous\",{\"1\":{\"18\":1}}],[\"numbers\",{\"1\":{\"158\":1}}],[\"number\",{\"1\":{\"36\":1,\"66\":1,\"77\":1,\"83\":1,\"87\":1,\"91\":1,\"94\":1,\"121\":1,\"126\":2,\"132\":1,\"136\":2,\"175\":1,\"177\":1,\"265\":1,\"330\":2}}],[\"null>\",{\"1\":{\"22\":2,\"283\":1}}],[\"null\",{\"1\":{\"22\":2,\"136\":2,\"300\":1,\"330\":1}}],[\"node\",{\"1\":{\"303\":1}}],[\"november\",{\"1\":{\"75\":2}}],[\"none\",{\"1\":{\"108\":1,\"110\":1,\"132\":1,\"134\":1,\"138\":2,\"148\":1,\"152\":1,\"156\":1,\"160\":1,\"164\":1,\"172\":1,\"176\":1}}],[\"non\",{\"0\":{\"106\":1,\"115\":1,\"119\":1,\"124\":1,\"143\":1,\"269\":1,\"294\":1},\"1\":{\"63\":1,\"85\":1,\"94\":1,\"108\":1,\"118\":1,\"126\":2,\"128\":1,\"136\":1,\"138\":1,\"140\":1,\"240\":1,\"308\":1,\"335\":1,\"336\":1,\"357\":1}}],[\"now\",{\"1\":{\"55\":1,\"56\":3,\"64\":1,\"66\":1,\"75\":1,\"92\":1,\"93\":1,\"104\":1,\"105\":2,\"108\":4,\"110\":4,\"114\":1,\"118\":2,\"119\":2,\"123\":7,\"126\":10,\"128\":6,\"130\":6,\"132\":5,\"134\":3,\"136\":9,\"138\":1,\"141\":2,\"142\":4,\"144\":2,\"149\":1,\"153\":1,\"157\":3,\"166\":2,\"169\":1,\"170\":1,\"178\":1,\"183\":1}}],[\"norlet\",{\"1\":{\"313\":1}}],[\"nor\",{\"1\":{\"34\":1,\"123\":1,\"126\":1,\"128\":1,\"310\":1}}],[\"normal\",{\"0\":{\"334\":1},\"1\":{\"21\":1,\"34\":1,\"110\":1,\"214\":2,\"264\":1,\"335\":1,\"362\":1}}],[\"normally\",{\"1\":{\"18\":1,\"264\":1,\"275\":1}}],[\"no\",{\"0\":{\"351\":1},\"1\":{\"18\":1,\"21\":1,\"22\":1,\"66\":1,\"105\":1,\"106\":1,\"108\":1,\"114\":1,\"115\":1,\"118\":3,\"122\":1,\"123\":1,\"130\":1,\"136\":4,\"138\":1,\"141\":1,\"144\":1,\"169\":1,\"173\":1,\"210\":1,\"266\":1,\"270\":1,\"283\":1,\"295\":1,\"299\":1,\"328\":1,\"342\":1,\"362\":1}}],[\"notation\",{\"1\":{\"142\":1,\"258\":1,\"352\":1}}],[\"nothing\",{\"1\":{\"136\":2}}],[\"noting\",{\"1\":{\"57\":1,\"282\":1}}],[\"notes\",{\"1\":{\"84\":1,\"93\":1,\"128\":1,\"146\":1}}],[\"note\",{\"1\":{\"12\":1,\"244\":1,\"266\":1,\"282\":1,\"345\":1,\"365\":1}}],[\"not\",{\"0\":{\"319\":1},\"1\":{\"4\":2,\"6\":1,\"7\":1,\"14\":1,\"19\":1,\"21\":1,\"43\":2,\"56\":1,\"63\":1,\"69\":1,\"105\":1,\"110\":2,\"126\":1,\"128\":1,\"130\":3,\"134\":3,\"144\":1,\"150\":1,\"162\":1,\"166\":1,\"253\":2,\"254\":1,\"259\":11,\"261\":1,\"264\":1,\"265\":2,\"266\":2,\"282\":1,\"283\":1,\"299\":1,\"303\":1,\"310\":1,\"311\":1,\"314\":1,\"319\":1,\"323\":1,\"328\":1,\"338\":1,\"339\":2,\"341\":1,\"347\":1,\"349\":1,\"357\":2}}],[\"neatly\",{\"1\":{\"305\":1}}],[\"nearly\",{\"1\":{\"136\":1}}],[\"negative\",{\"1\":{\"149\":1,\"264\":1}}],[\"negatively\",{\"1\":{\"110\":1}}],[\"never\",{\"1\":{\"124\":1,\"136\":1}}],[\"netbsd\",{\"0\":{\"236\":1},\"1\":{\"230\":1,\"236\":4}}],[\"net\",{\"1\":{\"55\":1,\"58\":1,\"66\":7,\"73\":2,\"255\":1}}],[\"network\",{\"1\":{\"22\":1}}],[\"nested\",{\"1\":{\"41\":1,\"56\":1,\"133\":1,\"166\":1,\"177\":1,\"272\":1,\"330\":1,\"332\":1}}],[\"nesting\",{\"1\":{\"12\":1,\"330\":1}}],[\"next\",{\"1\":{\"41\":2,\"94\":1,\"105\":1,\"109\":2,\"126\":1,\"130\":1,\"131\":2,\"136\":1,\"188\":1,\"304\":1,\"332\":2,\"346\":1,\"363\":4}}],[\"newspellchecker\",{\"1\":{\"347\":1}}],[\"newline\",{\"1\":{\"123\":1}}],[\"newer\",{\"1\":{\"87\":1,\"118\":1,\"128\":1,\"134\":1,\"136\":1}}],[\"new\",{\"0\":{\"71\":1,\"82\":1,\"83\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"89\":1,\"90\":1,\"91\":1,\"92\":1,\"93\":1,\"94\":1,\"95\":1,\"96\":1,\"97\":1,\"98\":1,\"99\":1,\"101\":1,\"103\":1,\"108\":1,\"110\":1,\"112\":1,\"117\":1,\"121\":1,\"126\":1,\"128\":1,\"130\":1,\"132\":1,\"134\":1,\"136\":1,\"138\":1,\"140\":1,\"146\":1,\"175\":1,\"180\":1,\"339\":1},\"1\":{\"27\":1,\"53\":1,\"54\":1,\"67\":1,\"71\":1,\"72\":1,\"80\":1,\"85\":2,\"86\":1,\"87\":2,\"88\":1,\"89\":1,\"90\":1,\"94\":1,\"95\":1,\"101\":1,\"103\":1,\"105\":2,\"108\":1,\"110\":3,\"112\":1,\"118\":1,\"119\":2,\"121\":2,\"123\":1,\"124\":3,\"126\":6,\"128\":1,\"130\":5,\"132\":2,\"134\":7,\"136\":9,\"138\":1,\"140\":2,\"142\":2,\"144\":1,\"150\":2,\"157\":1,\"173\":1,\"177\":3,\"182\":2,\"192\":1,\"263\":2,\"275\":1,\"277\":1,\"289\":2,\"334\":1,\"339\":3}}],[\"needed\",{\"1\":{\"93\":1,\"128\":1,\"134\":1,\"136\":1}}],[\"needs\",{\"1\":{\"59\":1,\"63\":2,\"64\":1,\"266\":1,\"341\":1,\"342\":1,\"345\":1}}],[\"need\",{\"1\":{\"6\":1,\"17\":1,\"18\":2,\"21\":1,\"27\":1,\"34\":1,\"50\":2,\"55\":1,\"56\":1,\"58\":1,\"61\":2,\"63\":2,\"66\":2,\"73\":2,\"93\":1,\"105\":1,\"128\":2,\"141\":1,\"142\":1,\"169\":1,\"193\":1,\"232\":1,\"252\":1,\"253\":1,\"262\":1,\"286\":1,\"305\":1,\"308\":1,\"311\":1,\"330\":1,\"342\":1,\"344\":1,\"346\":1,\"347\":2,\"351\":1}}],[\"ubuntu\",{\"1\":{\"351\":1}}],[\"uri\",{\"1\":{\"289\":1}}],[\"utils\",{\"1\":{\"126\":1}}],[\"utilities\",{\"1\":{\"55\":1,\"73\":1}}],[\"u\",{\"0\":{\"359\":1},\"1\":{\"123\":1,\"253\":1,\"363\":1}}],[\"ux\",{\"1\":{\"106\":1,\"115\":1}}],[\"ui\",{\"1\":{\"106\":1,\"115\":1,\"119\":1,\"153\":1}}],[\"upper\",{\"1\":{\"328\":1}}],[\"upping\",{\"1\":{\"134\":1}}],[\"updated\",{\"1\":{\"106\":1,\"108\":2,\"115\":1,\"119\":1,\"123\":2,\"124\":1,\"126\":1,\"128\":1,\"134\":1,\"143\":1,\"157\":1,\"346\":1}}],[\"update\",{\"1\":{\"92\":1,\"93\":1,\"128\":1,\"130\":1,\"188\":1,\"223\":1,\"292\":1}}],[\"updates\",{\"1\":{\"90\":1,\"110\":1,\"134\":1,\"253\":1}}],[\"updating\",{\"0\":{\"292\":1},\"1\":{\"91\":1,\"132\":1,\"153\":1,\"292\":1}}],[\"upwards\",{\"1\":{\"67\":1,\"130\":1}}],[\"upwardly\",{\"1\":{\"62\":1}}],[\"upgrade\",{\"1\":{\"67\":1,\"101\":1}}],[\"up\",{\"1\":{\"56\":1,\"63\":1,\"68\":1,\"73\":1,\"106\":1,\"109\":1,\"110\":1,\"111\":1,\"115\":1,\"125\":1,\"126\":1,\"128\":1,\"134\":1,\"144\":1,\"259\":1,\"263\":1,\"266\":1,\"286\":1,\"299\":1,\"307\":1,\"352\":1,\"358\":1,\"364\":1}}],[\"upon\",{\"1\":{\"4\":1,\"24\":1,\"67\":1,\"110\":2,\"124\":1,\"134\":1,\"144\":1,\"154\":1,\"308\":1}}],[\"ugly\",{\"1\":{\"37\":1,\"126\":1}}],[\"undo\",{\"1\":{\"363\":1}}],[\"undefine\",{\"1\":{\"264\":1}}],[\"underoff\",{\"1\":{\"259\":1}}],[\"undershell\",{\"1\":{\"345\":1}}],[\"underscore\",{\"1\":{\"259\":1}}],[\"understand\",{\"1\":{\"66\":1,\"75\":1}}],[\"understandable\",{\"1\":{\"64\":1}}],[\"understanding\",{\"1\":{\"63\":1,\"253\":1}}],[\"underpinning\",{\"1\":{\"244\":1}}],[\"underline\",{\"1\":{\"259\":1}}],[\"underlined\",{\"1\":{\"136\":1,\"280\":1,\"341\":1}}],[\"underlines\",{\"1\":{\"108\":1}}],[\"underlying\",{\"1\":{\"4\":1,\"126\":1,\"243\":1}}],[\"under\",{\"1\":{\"14\":1,\"110\":1,\"123\":1,\"344\":1}}],[\"unhappy\",{\"1\":{\"330\":1}}],[\"unnamed\",{\"1\":{\"299\":1}}],[\"unedited\",{\"1\":{\"261\":1}}],[\"unless\",{\"1\":{\"253\":1}}],[\"unlike\",{\"1\":{\"55\":1,\"73\":1,\"240\":1,\"304\":1,\"310\":1,\"322\":1,\"323\":1,\"331\":1,\"336\":1}}],[\"unzip\",{\"1\":{\"244\":1}}],[\"untested\",{\"1\":{\"241\":1,\"253\":1}}],[\"until\",{\"1\":{\"62\":1,\"129\":1,\"179\":1,\"266\":1}}],[\"unaffected\",{\"1\":{\"282\":1}}],[\"unavailable\",{\"1\":{\"162\":1}}],[\"uname\",{\"1\":{\"34\":2,\"330\":2}}],[\"unmarshal\",{\"1\":{\"154\":1}}],[\"unmatched\",{\"1\":{\"132\":1}}],[\"unfortunate\",{\"1\":{\"136\":1}}],[\"unfortunately\",{\"1\":{\"64\":1,\"105\":1}}],[\"unsupported\",{\"0\":{\"261\":1}}],[\"unsuccessful\",{\"1\":{\"130\":1,\"265\":1}}],[\"unsafe\",{\"1\":{\"136\":1}}],[\"unset\",{\"1\":{\"14\":1,\"130\":1,\"154\":1}}],[\"unknown\",{\"1\":{\"128\":1,\"177\":1}}],[\"unreadable\",{\"1\":{\"118\":1}}],[\"uncropped\",{\"1\":{\"110\":1}}],[\"unused\",{\"1\":{\"108\":1}}],[\"uniq\",{\"1\":{\"303\":1}}],[\"unique\",{\"1\":{\"59\":1,\"270\":1,\"295\":1}}],[\"unit\",{\"1\":{\"105\":1,\"106\":1,\"110\":1,\"115\":1,\"119\":1,\"128\":1,\"134\":1}}],[\"unicode\",{\"1\":{\"66\":1,\"142\":2,\"162\":1}}],[\"unix\",{\"0\":{\"243\":1},\"1\":{\"54\":1,\"55\":2,\"62\":2,\"66\":1,\"67\":1,\"72\":1,\"73\":2,\"78\":1,\"105\":1,\"123\":1,\"136\":1,\"230\":1,\"244\":1,\"299\":3,\"304\":6}}],[\"usually\",{\"1\":{\"126\":1,\"299\":1}}],[\"usual\",{\"1\":{\"118\":1,\"179\":1}}],[\"us\",{\"1\":{\"105\":1,\"136\":1,\"244\":1}}],[\"usability\",{\"1\":{\"88\":1,\"90\":1,\"110\":1,\"134\":1}}],[\"usages\",{\"1\":{\"37\":1}}],[\"usage\",{\"0\":{\"50\":1,\"61\":1},\"1\":{\"34\":1,\"50\":1,\"61\":1,\"62\":1,\"63\":1,\"64\":2,\"68\":1,\"83\":1,\"93\":1,\"128\":1,\"175\":1,\"286\":1,\"313\":1}}],[\"useless\",{\"1\":{\"63\":1}}],[\"users\",{\"1\":{\"67\":1,\"94\":1,\"105\":1,\"118\":1,\"126\":1,\"253\":1,\"310\":1}}],[\"user\",{\"0\":{\"105\":1,\"106\":1,\"114\":1,\"115\":1,\"118\":1,\"119\":1,\"123\":1,\"124\":1,\"143\":1,\"258\":1,\"264\":1,\"266\":1,\"268\":1,\"273\":1,\"286\":1,\"298\":1,\"302\":1,\"307\":1,\"313\":1,\"330\":1,\"333\":1,\"338\":1,\"341\":1,\"348\":1,\"353\":1,\"375\":1},\"1\":{\"59\":2,\"85\":1,\"105\":2,\"114\":1,\"118\":1,\"125\":1,\"126\":2,\"128\":2,\"130\":1,\"131\":1,\"136\":1,\"138\":2,\"140\":1,\"157\":1,\"243\":1,\"275\":1,\"280\":1,\"283\":1,\"299\":1,\"310\":1,\"348\":5}}],[\"uses\",{\"1\":{\"57\":1,\"75\":1,\"114\":1,\"128\":1,\"145\":1,\"179\":1,\"258\":1,\"275\":2,\"331\":1,\"332\":1,\"353\":1}}],[\"useful\",{\"1\":{\"54\":3,\"72\":3}}],[\"used\",{\"1\":{\"7\":1,\"21\":1,\"36\":1,\"64\":1,\"104\":1,\"108\":2,\"110\":1,\"118\":3,\"119\":1,\"128\":5,\"130\":1,\"132\":3,\"136\":4,\"142\":1,\"162\":1,\"177\":1,\"253\":1,\"255\":1,\"264\":1,\"281\":1,\"299\":1,\"308\":1,\"310\":1,\"347\":1}}],[\"use\",{\"1\":{\"6\":3,\"12\":3,\"21\":1,\"22\":2,\"28\":1,\"41\":1,\"50\":1,\"54\":3,\"56\":1,\"57\":4,\"61\":1,\"63\":4,\"64\":2,\"66\":1,\"72\":3,\"74\":1,\"85\":1,\"91\":1,\"105\":1,\"119\":1,\"126\":1,\"128\":3,\"132\":1,\"134\":1,\"136\":1,\"140\":1,\"141\":2,\"191\":1,\"197\":1,\"222\":2,\"231\":1,\"239\":1,\"243\":1,\"253\":1,\"274\":1,\"277\":1,\"305\":2,\"311\":2,\"331\":1,\"341\":1,\"357\":1,\"360\":1,\"361\":1}}],[\"using\",{\"0\":{\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"288\":1},\"1\":{\"3\":4,\"9\":1,\"15\":2,\"16\":3,\"27\":1,\"28\":1,\"29\":1,\"32\":1,\"58\":1,\"59\":1,\"63\":1,\"64\":1,\"76\":1,\"118\":1,\"126\":1,\"132\":2,\"136\":1,\"193\":1,\"196\":1,\"241\":1,\"244\":2,\"274\":1,\"286\":1,\"289\":1,\"291\":1,\"304\":1,\"315\":1,\"358\":1}}],[\"dumb\",{\"1\":{\"304\":1}}],[\"duplicate\",{\"1\":{\"259\":1}}],[\"duplication\",{\"1\":{\"118\":1}}],[\"during\",{\"1\":{\"130\":1,\"304\":1}}],[\"due\",{\"1\":{\"7\":1,\"18\":2,\"19\":1,\"105\":1,\"114\":2,\"134\":1,\"136\":1,\"157\":1,\"162\":1,\"244\":2,\"270\":1,\"295\":1}}],[\"dynamicdesc\",{\"1\":{\"104\":1,\"157\":1,\"182\":1}}],[\"dynamic\",{\"1\":{\"104\":1,\"105\":1,\"123\":1,\"126\":3,\"132\":1,\"134\":1,\"143\":1,\"157\":1,\"182\":1,\"339\":1}}],[\"dynamically\",{\"1\":{\"57\":1,\"75\":1,\"128\":1,\"333\":1}}],[\"drifting\",{\"1\":{\"259\":1}}],[\"drives\",{\"1\":{\"110\":1}}],[\"driven\",{\"1\":{\"68\":1,\"131\":1,\"157\":1,\"184\":1,\"340\":1}}],[\"drawback\",{\"1\":{\"305\":1}}],[\"drawbacks\",{\"1\":{\"55\":1}}],[\"dragonfly\",{\"1\":{\"234\":1}}],[\"dragonflybsd\",{\"0\":{\"234\":1},\"1\":{\"230\":1}}],[\"dramatically\",{\"1\":{\"128\":1}}],[\"dropped\",{\"1\":{\"108\":1,\"136\":1}}],[\"d\",{\"0\":{\"356\":1},\"1\":{\"56\":1,\"63\":1,\"177\":1,\"275\":1,\"310\":1,\"311\":1,\"363\":2}}],[\"dark\",{\"1\":{\"222\":1}}],[\"darwin\",{\"0\":{\"232\":1},\"1\":{\"110\":1,\"177\":1,\"230\":1,\"232\":2,\"243\":1}}],[\"danger\",{\"1\":{\"197\":1}}],[\"dates\",{\"1\":{\"123\":1}}],[\"date\",{\"1\":{\"123\":4,\"125\":2,\"221\":1,\"286\":1}}],[\"datetime\",{\"1\":{\"123\":2,\"125\":1,\"268\":2}}],[\"database\",{\"1\":{\"105\":1,\"128\":1,\"289\":2}}],[\"data\",{\"1\":{\"4\":1,\"8\":1,\"14\":1,\"17\":2,\"21\":1,\"22\":1,\"24\":1,\"25\":2,\"26\":2,\"49\":1,\"52\":1,\"53\":2,\"57\":1,\"59\":2,\"60\":2,\"66\":2,\"70\":1,\"74\":1,\"77\":1,\"78\":1,\"79\":2,\"85\":2,\"101\":1,\"102\":1,\"105\":1,\"107\":2,\"108\":1,\"109\":1,\"114\":3,\"115\":1,\"118\":3,\"120\":1,\"123\":1,\"125\":1,\"126\":2,\"127\":1,\"128\":5,\"132\":3,\"135\":1,\"136\":6,\"137\":4,\"138\":1,\"140\":2,\"142\":2,\"143\":1,\"149\":1,\"157\":1,\"169\":1,\"179\":2,\"209\":2,\"263\":1,\"266\":1,\"270\":1,\"274\":1,\"277\":3,\"285\":1,\"295\":1,\"305\":2,\"313\":1,\"330\":1,\"332\":1,\"342\":1,\"347\":2,\"352\":2}}],[\"days\",{\"1\":{\"53\":2,\"62\":1}}],[\"day\",{\"1\":{\"34\":2,\"56\":1,\"57\":2}}],[\"damage\",{\"1\":{\"28\":1}}],[\"dictionary\",{\"0\":{\"348\":1},\"1\":{\"348\":5,\"351\":1}}],[\"dictionaries\",{\"1\":{\"76\":1,\"330\":1,\"351\":1}}],[\"dick\",{\"1\":{\"37\":1}}],[\"difficult\",{\"1\":{\"69\":1,\"253\":1}}],[\"differ\",{\"1\":{\"118\":1,\"277\":1,\"299\":1,\"351\":1}}],[\"differs\",{\"1\":{\"58\":1,\"136\":1,\"299\":1,\"304\":1}}],[\"difference\",{\"1\":{\"21\":1,\"331\":1}}],[\"different\",{\"1\":{\"18\":1,\"21\":3,\"22\":1,\"36\":2,\"37\":2,\"49\":1,\"50\":1,\"52\":1,\"57\":1,\"59\":2,\"61\":1,\"69\":1,\"70\":3,\"102\":1,\"109\":2,\"111\":1,\"114\":2,\"118\":1,\"125\":1,\"135\":1,\"145\":1,\"168\":1,\"179\":1,\"191\":1,\"244\":1,\"263\":1,\"267\":1,\"270\":1,\"273\":1,\"295\":1,\"306\":1,\"307\":1,\"329\":1,\"333\":1,\"338\":2,\"340\":1,\"347\":1,\"352\":2,\"366\":1}}],[\"differently\",{\"1\":{\"7\":1,\"8\":1,\"31\":1,\"266\":1}}],[\"directive\",{\"1\":{\"128\":1,\"132\":2,\"134\":1}}],[\"directives\",{\"1\":{\"126\":1}}],[\"directly\",{\"1\":{\"62\":1,\"136\":1,\"259\":1,\"271\":1,\"281\":1,\"296\":1,\"304\":1}}],[\"directories\",{\"1\":{\"28\":2,\"126\":1,\"177\":1,\"308\":1,\"311\":1,\"357\":1}}],[\"directory\",{\"1\":{\"28\":1,\"104\":1,\"106\":1,\"111\":1,\"115\":1,\"123\":1,\"134\":1,\"138\":3,\"222\":1,\"253\":3,\"287\":1,\"309\":2,\"310\":1,\"311\":1}}],[\"didn\",{\"1\":{\"63\":1,\"66\":2,\"162\":1}}],[\"did\",{\"1\":{\"56\":1,\"57\":1,\"66\":1,\"132\":1}}],[\"distinct\",{\"1\":{\"333\":1}}],[\"distinction\",{\"1\":{\"266\":1}}],[\"distributed\",{\"1\":{\"287\":1}}],[\"distractions\",{\"1\":{\"281\":1}}],[\"disabling\",{\"0\":{\"188\":1,\"262\":1,\"284\":1},\"1\":{\"273\":1}}],[\"disables\",{\"1\":{\"188\":1}}],[\"disabled\",{\"1\":{\"126\":1,\"130\":1,\"132\":1,\"136\":1,\"144\":1,\"177\":1,\"182\":1,\"274\":1,\"279\":1,\"282\":1,\"284\":1}}],[\"disable\",{\"1\":{\"54\":1,\"72\":1,\"93\":1,\"110\":1,\"128\":2,\"186\":1,\"188\":1,\"213\":1,\"255\":1,\"262\":1},\"2\":{\"190\":1}}],[\"disk\",{\"1\":{\"135\":2,\"136\":1,\"332\":2}}],[\"discovered\",{\"1\":{\"130\":1}}],[\"discoverability\",{\"1\":{\"117\":1,\"118\":1}}],[\"discovery\",{\"1\":{\"21\":1,\"128\":1}}],[\"discuses\",{\"1\":{\"71\":1}}],[\"discussion\",{\"1\":{\"105\":1,\"182\":1}}],[\"discuss\",{\"1\":{\"66\":1}}],[\"displayed\",{\"1\":{\"158\":1,\"177\":1,\"283\":1}}],[\"displaying\",{\"1\":{\"123\":1,\"283\":1}}],[\"display\",{\"1\":{\"21\":1}}],[\"displays\",{\"1\":{\"21\":1,\"123\":1,\"135\":1,\"137\":1}}],[\"denotes\",{\"1\":{\"331\":2}}],[\"denoting\",{\"1\":{\"136\":1}}],[\"determined\",{\"1\":{\"328\":1}}],[\"determine\",{\"1\":{\"266\":1}}],[\"detailed\",{\"1\":{\"298\":1,\"332\":1}}],[\"detail\",{\"0\":{\"304\":1},\"1\":{\"197\":1,\"198\":1,\"199\":1,\"200\":1,\"201\":1,\"202\":1,\"203\":1,\"204\":1,\"205\":1,\"206\":1,\"207\":1,\"208\":1,\"209\":1,\"210\":1,\"211\":1,\"212\":1,\"213\":1,\"214\":1,\"215\":1,\"216\":1,\"286\":1}}],[\"details\",{\"0\":{\"369\":1,\"373\":1},\"1\":{\"9\":1,\"97\":1,\"98\":1,\"103\":1,\"112\":1,\"197\":1,\"264\":1,\"280\":1,\"370\":1,\"374\":1}}],[\"detailing\",{\"1\":{\"5\":1}}],[\"dedup\",{\"1\":{\"144\":1}}],[\"dedicated\",{\"1\":{\"5\":1}}],[\"deadlock\",{\"1\":{\"136\":1,\"178\":1}}],[\"dealing\",{\"1\":{\"54\":1,\"72\":1}}],[\"debugging\",{\"1\":{\"134\":1,\"157\":1,\"166\":1,\"290\":1,\"342\":1}}],[\"debug\",{\"1\":{\"128\":1,\"136\":2,\"297\":1,\"301\":1}}],[\"de\",{\"1\":{\"118\":1}}],[\"deprecates\",{\"1\":{\"142\":1,\"157\":1}}],[\"deprecate\",{\"1\":{\"138\":1}}],[\"deprecated\",{\"1\":{\"111\":1,\"126\":1,\"127\":1,\"131\":1,\"136\":2,\"166\":1,\"329\":1,\"331\":1,\"340\":1}}],[\"deprecating\",{\"1\":{\"136\":1}}],[\"depends\",{\"1\":{\"253\":1,\"311\":1}}],[\"dependency\",{\"1\":{\"342\":1}}],[\"dependencies\",{\"0\":{\"255\":1},\"1\":{\"106\":1,\"115\":1,\"134\":1,\"245\":1,\"255\":1}}],[\"dependent\",{\"1\":{\"144\":1}}],[\"depending\",{\"1\":{\"8\":1,\"70\":1,\"265\":2,\"277\":1,\"329\":1,\"340\":1,\"351\":1}}],[\"demo\",{\"0\":{\"185\":1,\"214\":1},\"1\":{\"188\":1,\"192\":1,\"214\":2,\"274\":1}}],[\"demonstrated\",{\"1\":{\"64\":1,\"136\":1}}],[\"demand\",{\"1\":{\"144\":1}}],[\"demands\",{\"1\":{\"69\":1}}],[\"declared\",{\"1\":{\"314\":1,\"338\":1}}],[\"december\",{\"1\":{\"75\":4}}],[\"decades\",{\"1\":{\"63\":1}}],[\"decided\",{\"1\":{\"63\":1}}],[\"deeper\",{\"1\":{\"56\":1}}],[\"deep\",{\"1\":{\"56\":1}}],[\"desc\",{\"1\":{\"207\":1}}],[\"description\",{\"1\":{\"330\":1}}],[\"descriptions\",{\"1\":{\"158\":1}}],[\"descriptive\",{\"1\":{\"58\":1}}],[\"describes\",{\"1\":{\"58\":1,\"67\":1,\"299\":1}}],[\"described\",{\"1\":{\"57\":1,\"270\":1,\"289\":1,\"295\":1,\"300\":1}}],[\"describe\",{\"1\":{\"4\":1,\"104\":1,\"318\":1}}],[\"despite\",{\"1\":{\"168\":1,\"338\":1}}],[\"desperately\",{\"1\":{\"128\":1}}],[\"designed\",{\"1\":{\"62\":2,\"256\":1,\"274\":1}}],[\"design\",{\"1\":{\"55\":1,\"73\":1,\"134\":1}}],[\"deleted\",{\"1\":{\"299\":1}}],[\"delete\",{\"1\":{\"259\":1,\"363\":4}}],[\"deletes\",{\"1\":{\"28\":1}}],[\"del\",{\"1\":{\"259\":1}}],[\"delayed\",{\"1\":{\"144\":1}}],[\"delimitations\",{\"1\":{\"56\":1}}],[\"delimited\",{\"0\":{\"55\":1,\"73\":1},\"1\":{\"49\":1,\"52\":2,\"53\":1,\"56\":1,\"70\":1,\"76\":1,\"107\":1}}],[\"delve\",{\"1\":{\"56\":1}}],[\"delving\",{\"1\":{\"56\":1}}],[\"develop\",{\"1\":{\"283\":2}}],[\"development\",{\"1\":{\"118\":1,\"304\":1}}],[\"developer\",{\"1\":{\"53\":1,\"63\":1}}],[\"developers\",{\"1\":{\"18\":2,\"63\":1,\"66\":1,\"68\":1}}],[\"devopsbin\",{\"1\":{\"268\":1}}],[\"devops\",{\"1\":{\"53\":1,\"268\":2,\"289\":1}}],[\"dev\",{\"1\":{\"22\":2,\"268\":4,\"289\":1,\"291\":1,\"300\":1}}],[\"deferred\",{\"1\":{\"105\":1}}],[\"defining\",{\"1\":{\"130\":1,\"277\":1,\"324\":1}}],[\"definitely\",{\"1\":{\"66\":1}}],[\"definitions\",{\"1\":{\"58\":1,\"109\":1,\"111\":1,\"127\":1,\"128\":1,\"129\":1,\"132\":1,\"133\":1,\"135\":1,\"184\":1,\"285\":1,\"340\":1}}],[\"definition\",{\"1\":{\"24\":1}}],[\"defines\",{\"1\":{\"264\":1,\"311\":3}}],[\"define\",{\"1\":{\"41\":1,\"42\":1,\"102\":1,\"111\":2,\"120\":1,\"123\":1,\"125\":1,\"126\":1,\"127\":2,\"128\":1,\"129\":1,\"131\":2,\"132\":1,\"133\":1,\"134\":1,\"135\":3,\"136\":1,\"137\":1,\"145\":1,\"179\":2,\"184\":1,\"265\":2,\"277\":1,\"285\":2,\"297\":2,\"301\":1,\"308\":1,\"311\":1,\"312\":1,\"329\":4,\"340\":4,\"352\":2}}],[\"defined\",{\"1\":{\"14\":1,\"15\":1,\"17\":1,\"93\":1,\"118\":1,\"123\":1,\"125\":1,\"128\":2,\"266\":2,\"277\":1,\"283\":2,\"311\":1,\"331\":1,\"339\":1,\"349\":1}}],[\"defaults\",{\"1\":{\"105\":1,\"123\":1,\"177\":1,\"178\":1,\"253\":1,\"264\":1}}],[\"default\",{\"0\":{\"311\":1,\"349\":1},\"1\":{\"14\":1,\"19\":1,\"37\":1,\"54\":1,\"72\":1,\"92\":1,\"101\":3,\"105\":1,\"110\":1,\"118\":1,\"123\":1,\"126\":2,\"128\":2,\"130\":6,\"132\":3,\"134\":1,\"136\":5,\"138\":1,\"144\":2,\"177\":2,\"254\":2,\"262\":1,\"264\":3,\"282\":1,\"283\":2,\"284\":1,\"306\":1,\"311\":2,\"329\":1,\"330\":1,\"341\":1,\"342\":1,\"344\":1,\"346\":2,\"349\":1,\"357\":2}}],[\"dollar\",{\"1\":{\"331\":1}}],[\"douglas\",{\"1\":{\"304\":1}}],[\"doubt\",{\"1\":{\"253\":1,\"315\":1}}],[\"double\",{\"1\":{\"12\":1,\"244\":1}}],[\"doing\",{\"1\":{\"289\":1}}],[\"dozens\",{\"1\":{\"277\":1}}],[\"dot\",{\"1\":{\"142\":1}}],[\"docker\",{\"1\":{\"143\":1}}],[\"doc\",{\"1\":{\"128\":1,\"264\":1}}],[\"docs\",{\"1\":{\"110\":1,\"130\":1,\"132\":1,\"134\":1,\"135\":1,\"136\":1,\"137\":1,\"144\":1,\"157\":1,\"182\":1,\"244\":1,\"302\":1,\"342\":1}}],[\"documentation\",{\"1\":{\"119\":1,\"124\":1,\"126\":1,\"138\":1,\"178\":1,\"191\":1,\"259\":1,\"302\":1,\"351\":1}}],[\"documented\",{\"1\":{\"101\":1}}],[\"documents\",{\"1\":{\"8\":1,\"9\":1,\"47\":1,\"132\":1}}],[\"document\",{\"1\":{\"1\":1,\"5\":1,\"136\":1,\"195\":1,\"214\":1,\"253\":1,\"259\":1,\"283\":1,\"286\":1,\"305\":1,\"314\":1,\"342\":1}}],[\"downloads\",{\"1\":{\"128\":1}}],[\"download\",{\"0\":{\"231\":1,\"247\":1},\"1\":{\"128\":1,\"230\":1,\"231\":1,\"243\":2,\"245\":1,\"247\":2,\"289\":1}}],[\"down\",{\"1\":{\"66\":2,\"128\":1,\"253\":1,\"259\":1,\"305\":1}}],[\"donate\",{\"1\":{\"215\":1}}],[\"done\",{\"1\":{\"54\":2,\"56\":1,\"59\":1,\"72\":2,\"144\":1,\"270\":1,\"295\":1}}],[\"don\",{\"1\":{\"37\":1,\"42\":1,\"64\":1,\"124\":1,\"136\":2,\"192\":1,\"193\":1,\"281\":1,\"330\":1,\"348\":1}}],[\"dogs|cats\",{\"1\":{\"9\":2}}],[\"doesn\",{\"1\":{\"8\":1,\"25\":1,\"57\":1,\"63\":2,\"66\":1,\"75\":1,\"128\":1,\"130\":2,\"136\":1,\"178\":1,\"253\":1,\"261\":1,\"351\":1,\"360\":1}}],[\"does\",{\"1\":{\"4\":1,\"8\":1,\"14\":1,\"55\":1,\"58\":1,\"64\":1,\"66\":1,\"97\":1,\"112\":1,\"130\":2,\"136\":1,\"261\":1,\"311\":2,\"323\":1,\"338\":1}}],[\"do\",{\"1\":{\"4\":1,\"17\":1,\"25\":1,\"36\":2,\"42\":1,\"54\":2,\"55\":2,\"56\":1,\"63\":1,\"64\":1,\"66\":2,\"69\":2,\"72\":2,\"73\":1,\"110\":1,\"130\":4,\"241\":1,\"244\":1,\"305\":1,\"311\":1,\"330\":1,\"339\":2,\"357\":1}}],[\"l\",{\"1\":{\"363\":1}}],[\"lf\",{\"1\":{\"259\":1}}],[\"lmorg\",{\"1\":{\"123\":1,\"241\":1,\"253\":5,\"268\":2,\"289\":1,\"291\":1,\"325\":1}}],[\"ll\",{\"1\":{\"55\":1,\"58\":1,\"66\":2,\"105\":1,\"128\":1,\"302\":1,\"347\":2}}],[\"legitimately\",{\"1\":{\"347\":1}}],[\"legacy\",{\"1\":{\"66\":1}}],[\"len\",{\"1\":{\"123\":1,\"126\":3,\"130\":1}}],[\"lengths\",{\"1\":{\"105\":1}}],[\"length\",{\"1\":{\"92\":1,\"105\":1,\"110\":1,\"130\":3,\"178\":2}}],[\"lengthier\",{\"1\":{\"64\":1}}],[\"let\",{\"1\":{\"110\":1,\"111\":1,\"123\":1,\"126\":1,\"127\":1,\"329\":1,\"340\":1}}],[\"lets\",{\"1\":{\"53\":1,\"56\":2,\"57\":1,\"75\":2,\"338\":2}}],[\"level\",{\"1\":{\"109\":1,\"135\":1,\"243\":1,\"316\":1,\"332\":1,\"337\":1}}],[\"least\",{\"1\":{\"240\":1}}],[\"leaks\",{\"1\":{\"130\":1}}],[\"leaking\",{\"1\":{\"108\":1,\"142\":1}}],[\"lead\",{\"1\":{\"123\":1}}],[\"learner\",{\"1\":{\"192\":1}}],[\"learn\",{\"1\":{\"5\":1,\"75\":1,\"93\":1,\"128\":1,\"330\":1}}],[\"left\",{\"1\":{\"75\":1,\"120\":2,\"154\":1,\"261\":1,\"285\":2,\"306\":4,\"337\":4}}],[\"lesscurl\",{\"1\":{\"330\":1}}],[\"less\",{\"1\":{\"55\":1,\"73\":1,\"101\":1,\"170\":1,\"330\":2}}],[\"labs\",{\"1\":{\"304\":1}}],[\"laurence\",{\"1\":{\"286\":1}}],[\"launch\",{\"1\":{\"244\":1}}],[\"launching\",{\"1\":{\"62\":1,\"311\":1,\"334\":1}}],[\"launched\",{\"1\":{\"16\":1,\"162\":1}}],[\"lasts\",{\"1\":{\"299\":1}}],[\"last\",{\"1\":{\"266\":1,\"299\":1,\"334\":1,\"335\":1,\"336\":1,\"342\":1}}],[\"lack\",{\"1\":{\"244\":1}}],[\"layout\",{\"0\":{\"188\":1},\"1\":{\"188\":1}}],[\"layer\",{\"1\":{\"105\":1}}],[\"lazy\",{\"1\":{\"154\":1}}],[\"lazylogging\",{\"1\":{\"126\":1}}],[\"landing\",{\"1\":{\"136\":1}}],[\"language\",{\"0\":{\"351\":1},\"1\":{\"56\":2,\"63\":2,\"64\":2,\"66\":2,\"67\":1,\"330\":1,\"349\":1,\"351\":3}}],[\"languages\",{\"1\":{\"42\":1,\"64\":3,\"67\":1,\"76\":1}}],[\"latest\",{\"1\":{\"243\":1}}],[\"later\",{\"1\":{\"62\":2,\"63\":1,\"170\":1,\"254\":1}}],[\"latin\",{\"1\":{\"85\":1,\"140\":1}}],[\"lambda\",{\"1\":{\"77\":1,\"165\":3}}],[\"lambdas\",{\"0\":{\"77\":1},\"1\":{\"57\":1,\"77\":2,\"142\":1,\"157\":1}}],[\"larger\",{\"1\":{\"90\":1,\"134\":1}}],[\"largely\",{\"1\":{\"58\":1,\"299\":1}}],[\"large\",{\"1\":{\"54\":1,\"72\":1}}],[\"ls\",{\"1\":{\"18\":1,\"19\":1,\"330\":4}}],[\"long\",{\"1\":{\"138\":1,\"299\":2,\"314\":1,\"338\":1,\"347\":1}}],[\"longer\",{\"1\":{\"67\":1,\"84\":1,\"108\":1,\"114\":1,\"118\":1,\"122\":1,\"130\":1,\"136\":2,\"141\":1,\"144\":1,\"146\":1,\"169\":1,\"299\":1}}],[\"load\",{\"1\":{\"130\":1,\"270\":3,\"295\":3}}],[\"loading\",{\"1\":{\"123\":1,\"126\":1}}],[\"loaded\",{\"1\":{\"109\":2,\"111\":1,\"125\":2,\"126\":1,\"150\":1,\"178\":1,\"263\":1,\"268\":3,\"286\":1,\"293\":2,\"297\":1,\"307\":2,\"308\":2,\"352\":1}}],[\"lower\",{\"1\":{\"105\":1}}],[\"logo\",{\"1\":{\"207\":2}}],[\"logic\",{\"1\":{\"128\":2,\"130\":1}}],[\"logical\",{\"1\":{\"109\":2,\"131\":2,\"137\":1,\"264\":1,\"332\":2}}],[\"log\",{\"0\":{\"101\":1,\"103\":1,\"108\":1,\"110\":1,\"112\":1,\"117\":1,\"121\":1,\"126\":1,\"128\":1,\"130\":1,\"132\":1,\"134\":1,\"136\":1,\"138\":1,\"140\":1,\"146\":1,\"175\":1,\"180\":1}}],[\"lots\",{\"1\":{\"106\":1,\"108\":1,\"115\":2,\"124\":1,\"126\":1,\"130\":1,\"132\":1,\"134\":1,\"136\":1,\"138\":1}}],[\"lot\",{\"1\":{\"67\":1,\"69\":1,\"73\":1,\"252\":1,\"283\":1}}],[\"loyal\",{\"1\":{\"64\":1}}],[\"lousy\",{\"1\":{\"64\":1}}],[\"locations\",{\"1\":{\"308\":1}}],[\"located\",{\"1\":{\"34\":1,\"253\":1,\"287\":1}}],[\"locally\",{\"1\":{\"289\":1}}],[\"local\",{\"1\":{\"15\":1,\"16\":1,\"111\":1,\"127\":1,\"265\":1,\"289\":1,\"329\":1,\"330\":2,\"340\":1,\"352\":1}}],[\"looked\",{\"1\":{\"134\":1}}],[\"lookups\",{\"1\":{\"104\":1,\"126\":1}}],[\"looks\",{\"1\":{\"57\":1,\"58\":1,\"75\":1,\"77\":1,\"118\":1,\"283\":1}}],[\"look\",{\"1\":{\"28\":1,\"57\":1,\"63\":1,\"260\":1,\"266\":1,\"346\":1,\"357\":1}}],[\"looking\",{\"1\":{\"10\":1,\"17\":1,\"63\":1}}],[\"loops\",{\"0\":{\"38\":1,\"39\":1},\"1\":{\"3\":2,\"39\":1,\"41\":2}}],[\"loop\",{\"0\":{\"5\":1},\"1\":{\"3\":1,\"41\":1,\"54\":3,\"72\":3,\"110\":1,\"128\":1,\"129\":1,\"136\":1,\"177\":1,\"179\":1}}],[\"life\",{\"1\":{\"299\":1}}],[\"library\",{\"1\":{\"274\":3,\"275\":1}}],[\"libraries\",{\"1\":{\"268\":1}}],[\"ligatures\",{\"1\":{\"256\":2}}],[\"light\",{\"1\":{\"207\":1}}],[\"limitation\",{\"1\":{\"331\":1}}],[\"limitations\",{\"1\":{\"134\":1,\"246\":1}}],[\"limit\",{\"1\":{\"123\":1,\"328\":1}}],[\"lived\",{\"1\":{\"67\":1}}],[\"lisp\",{\"1\":{\"64\":1}}],[\"listed\",{\"1\":{\"243\":1}}],[\"list\",{\"1\":{\"38\":1,\"49\":3,\"52\":3,\"56\":1,\"60\":1,\"70\":4,\"108\":2,\"110\":2,\"118\":1,\"123\":1,\"125\":2,\"126\":2,\"127\":1,\"136\":2,\"137\":1,\"138\":1,\"139\":1,\"145\":2,\"179\":1,\"243\":1,\"274\":1,\"313\":1,\"330\":2,\"332\":1,\"346\":1,\"347\":2,\"353\":1,\"358\":1}}],[\"lists\",{\"0\":{\"49\":1,\"52\":1,\"351\":1},\"1\":{\"29\":2,\"49\":1,\"52\":1,\"53\":2,\"55\":1,\"70\":2,\"73\":1,\"107\":1,\"109\":1,\"110\":1,\"125\":1,\"126\":1,\"137\":1,\"330\":1}}],[\"literally\",{\"1\":{\"62\":1}}],[\"literals\",{\"1\":{\"12\":1,\"330\":1}}],[\"little\",{\"1\":{\"21\":1,\"25\":1,\"55\":1,\"58\":1,\"62\":1,\"63\":1,\"73\":1,\"132\":1,\"136\":1,\"260\":1,\"311\":1}}],[\"likely\",{\"1\":{\"136\":1,\"347\":1}}],[\"likeforeach\",{\"1\":{\"41\":1}}],[\"likewise\",{\"1\":{\"22\":1}}],[\"like\",{\"1\":{\"13\":1,\"16\":3,\"21\":1,\"28\":1,\"29\":1,\"33\":1,\"38\":1,\"53\":1,\"55\":3,\"56\":3,\"57\":3,\"58\":1,\"62\":1,\"63\":2,\"64\":1,\"66\":1,\"68\":1,\"69\":1,\"73\":3,\"75\":1,\"76\":1,\"77\":1,\"105\":1,\"110\":1,\"118\":2,\"123\":1,\"125\":1,\"126\":2,\"130\":1,\"141\":1,\"168\":1,\"177\":1,\"253\":1,\"260\":1,\"264\":1,\"266\":1,\"277\":1,\"278\":1,\"283\":2,\"299\":1,\"304\":1,\"311\":1,\"327\":1,\"328\":1,\"331\":1,\"334\":1,\"336\":1,\"346\":1,\"363\":2}}],[\"links\",{\"0\":{\"231\":1},\"1\":{\"222\":2,\"230\":1,\"305\":2}}],[\"link\",{\"1\":{\"101\":1,\"188\":2,\"197\":1,\"207\":1,\"244\":1,\"293\":1,\"314\":1}}],[\"linux\",{\"0\":{\"238\":1,\"243\":1},\"1\":{\"4\":1,\"54\":1,\"55\":1,\"58\":1,\"59\":1,\"66\":1,\"72\":1,\"73\":1,\"78\":1,\"136\":1,\"230\":2,\"238\":4,\"239\":2,\"243\":6,\"244\":3,\"246\":1,\"253\":1,\"299\":1,\"311\":1}}],[\"lineage\",{\"1\":{\"62\":1}}],[\"line=$\",{\"1\":{\"54\":1,\"72\":1}}],[\"lines\",{\"0\":{\"54\":1,\"72\":1},\"1\":{\"13\":1,\"52\":1,\"107\":1,\"136\":1,\"144\":1,\"177\":2,\"274\":1,\"330\":1,\"347\":1,\"358\":1}}],[\"line\",{\"0\":{\"49\":1,\"52\":1,\"55\":1,\"73\":1,\"359\":1},\"1\":{\"4\":2,\"7\":1,\"13\":3,\"18\":1,\"49\":3,\"52\":4,\"53\":1,\"54\":16,\"58\":2,\"59\":2,\"63\":1,\"66\":1,\"67\":1,\"70\":4,\"72\":16,\"73\":1,\"75\":1,\"76\":1,\"105\":1,\"109\":1,\"111\":1,\"127\":1,\"128\":1,\"129\":1,\"131\":1,\"133\":1,\"134\":1,\"135\":1,\"157\":2,\"177\":3,\"184\":1,\"209\":2,\"222\":1,\"260\":1,\"263\":3,\"268\":2,\"274\":1,\"281\":1,\"285\":1,\"330\":3,\"340\":1,\"345\":1,\"347\":3,\"359\":1,\"362\":1,\"363\":5}}],[\"w\",{\"1\":{\"363\":2}}],[\"wget\",{\"1\":{\"243\":1}}],[\"wsl\",{\"1\":{\"128\":3,\"136\":1,\"239\":1,\"244\":3}}],[\"wc\",{\"1\":{\"123\":1}}],[\"wrong\",{\"1\":{\"123\":1}}],[\"wrote\",{\"1\":{\"66\":1,\"274\":1}}],[\"wrapped\",{\"1\":{\"108\":1}}],[\"wrappers\",{\"1\":{\"73\":1}}],[\"writing\",{\"1\":{\"63\":2,\"126\":1,\"130\":1,\"142\":1,\"195\":1,\"196\":1,\"221\":1,\"283\":1}}],[\"writes\",{\"1\":{\"135\":2,\"136\":2,\"332\":2}}],[\"writer\",{\"1\":{\"128\":1}}],[\"write\",{\"0\":{\"347\":1},\"1\":{\"50\":2,\"57\":1,\"58\":1,\"61\":2,\"63\":4,\"64\":2,\"66\":3,\"67\":2,\"69\":2,\"105\":1,\"108\":1,\"136\":1,\"191\":1,\"192\":1,\"222\":1,\"263\":1,\"290\":2,\"330\":4,\"347\":2}}],[\"written\",{\"1\":{\"4\":1,\"66\":1,\"87\":1,\"110\":1,\"114\":2,\"119\":1,\"130\":1,\"136\":1,\"168\":1,\"330\":1,\"335\":1,\"336\":1}}],[\"wonky\",{\"1\":{\"244\":1}}],[\"word3\",{\"1\":{\"348\":1}}],[\"word2\",{\"1\":{\"348\":1}}],[\"word1\",{\"1\":{\"348\":1}}],[\"word\",{\"0\":{\"351\":1},\"1\":{\"142\":1,\"177\":2,\"202\":1,\"363\":3,\"365\":3}}],[\"words\",{\"0\":{\"365\":1},\"1\":{\"63\":1,\"68\":1,\"108\":1,\"136\":1,\"204\":1,\"347\":2,\"348\":1,\"349\":6,\"357\":1}}],[\"worse\",{\"1\":{\"64\":1}}],[\"worth\",{\"1\":{\"57\":1,\"87\":1,\"134\":1,\"136\":1,\"282\":1}}],[\"world\",{\"1\":{\"55\":1,\"73\":1,\"330\":3}}],[\"working\",{\"1\":{\"55\":1,\"56\":1,\"73\":1,\"85\":1,\"111\":1,\"130\":1,\"138\":1,\"140\":1,\"277\":1}}],[\"works\",{\"1\":{\"21\":1,\"27\":1,\"77\":1,\"105\":1,\"114\":2,\"134\":1,\"329\":1,\"338\":1}}],[\"work\",{\"1\":{\"4\":2,\"49\":1,\"52\":1,\"59\":2,\"66\":1,\"70\":1,\"75\":1,\"110\":1,\"134\":1,\"136\":1,\"154\":1,\"162\":1,\"178\":1,\"253\":2,\"308\":1,\"347\":1}}],[\"wouldn\",{\"1\":{\"136\":1}}],[\"would\",{\"1\":{\"18\":1,\"22\":2,\"56\":1,\"57\":1,\"62\":1,\"63\":1,\"77\":1,\"105\":2,\"110\":1,\"136\":1,\"153\":1,\"166\":1,\"168\":1,\"256\":1,\"266\":2,\"339\":1,\"363\":1}}],[\"why\",{\"0\":{\"71\":1},\"1\":{\"62\":1,\"64\":1,\"134\":1,\"286\":1}}],[\"whatever\",{\"1\":{\"63\":1}}],[\"what\",{\"0\":{\"55\":1,\"73\":1,\"82\":1,\"83\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"89\":1,\"90\":1,\"91\":1,\"92\":1,\"93\":1,\"94\":1,\"95\":1,\"96\":1,\"97\":1,\"98\":1,\"99\":1,\"101\":1,\"103\":1,\"108\":1,\"110\":1,\"112\":1,\"117\":1,\"121\":1,\"126\":1,\"128\":1,\"130\":1,\"132\":1,\"134\":1,\"136\":1,\"138\":1,\"140\":1,\"146\":1,\"175\":1,\"180\":1,\"287\":1,\"339\":1},\"1\":{\"49\":1,\"52\":2,\"54\":1,\"56\":1,\"57\":1,\"63\":1,\"70\":2,\"72\":1,\"75\":2,\"76\":1,\"102\":1,\"109\":1,\"118\":2,\"125\":1,\"127\":1,\"145\":1,\"179\":1,\"243\":1,\"256\":1,\"264\":1,\"265\":1,\"266\":1,\"267\":1,\"268\":2,\"273\":1,\"277\":1,\"279\":1,\"286\":4,\"293\":1,\"297\":1,\"302\":1,\"329\":1,\"331\":1,\"337\":1,\"338\":1,\"351\":1,\"352\":1,\"366\":1}}],[\"whole\",{\"1\":{\"43\":1}}],[\"who\",{\"1\":{\"37\":1,\"59\":2,\"64\":3,\"67\":1,\"311\":2}}],[\"white\",{\"1\":{\"259\":4}}],[\"whitespace\",{\"1\":{\"56\":1,\"110\":1,\"331\":1,\"363\":3}}],[\"while\",{\"1\":{\"28\":1,\"41\":1,\"42\":1,\"54\":4,\"56\":2,\"62\":2,\"63\":1,\"64\":2,\"72\":4,\"87\":1,\"105\":1,\"118\":1,\"128\":3,\"129\":1,\"136\":1,\"138\":1,\"177\":1,\"179\":1,\"253\":1,\"281\":1,\"299\":1,\"311\":1,\"331\":1,\"362\":1}}],[\"whichever\",{\"1\":{\"364\":1}}],[\"which\",{\"1\":{\"13\":1,\"21\":2,\"45\":1,\"54\":1,\"55\":2,\"58\":1,\"62\":4,\"64\":1,\"66\":1,\"72\":1,\"73\":1,\"86\":1,\"94\":1,\"101\":1,\"105\":2,\"110\":1,\"118\":1,\"119\":1,\"126\":2,\"128\":1,\"130\":3,\"132\":1,\"134\":1,\"138\":1,\"142\":1,\"194\":1,\"231\":1,\"254\":1,\"264\":1,\"268\":1,\"277\":1,\"283\":1,\"287\":1,\"289\":1,\"290\":1,\"293\":1,\"304\":1,\"307\":1,\"313\":1,\"314\":1,\"319\":1,\"333\":1,\"338\":1,\"339\":1,\"341\":1,\"342\":1,\"344\":1,\"348\":1}}],[\"whereby\",{\"1\":{\"56\":1}}],[\"where\",{\"1\":{\"18\":1,\"21\":2,\"55\":1,\"58\":3,\"66\":3,\"68\":1,\"73\":1,\"76\":1,\"93\":1,\"105\":2,\"109\":1,\"110\":1,\"114\":2,\"118\":1,\"123\":3,\"125\":1,\"126\":3,\"128\":4,\"130\":2,\"136\":2,\"138\":1,\"153\":1,\"162\":1,\"166\":1,\"207\":1,\"264\":3,\"268\":1,\"270\":1,\"274\":1,\"280\":1,\"286\":1,\"293\":1,\"295\":1,\"297\":1,\"299\":1,\"304\":1,\"305\":1,\"309\":1,\"311\":1,\"331\":1,\"334\":1,\"335\":1,\"341\":1}}],[\"whereas\",{\"1\":{\"4\":1,\"7\":1,\"8\":1,\"12\":1,\"58\":1,\"69\":1}}],[\"when\",{\"1\":{\"17\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"63\":1,\"64\":1,\"66\":1,\"68\":1,\"72\":1,\"73\":1,\"108\":1,\"110\":1,\"118\":3,\"126\":2,\"128\":5,\"130\":2,\"132\":4,\"134\":1,\"136\":7,\"142\":1,\"144\":1,\"149\":1,\"150\":1,\"154\":2,\"157\":1,\"162\":2,\"166\":1,\"177\":1,\"178\":1,\"182\":1,\"266\":4,\"268\":1,\"270\":1,\"274\":3,\"277\":1,\"281\":1,\"295\":1,\"331\":1,\"334\":1,\"357\":2,\"364\":1}}],[\"whether\",{\"1\":{\"8\":1,\"59\":1,\"255\":1,\"264\":1,\"265\":2,\"277\":1,\"317\":1,\"318\":1,\"319\":1,\"320\":1,\"336\":1}}],[\"warning\",{\"1\":{\"197\":1,\"274\":2,\"308\":1}}],[\"warnings\",{\"1\":{\"154\":1}}],[\"warn\",{\"1\":{\"128\":1}}],[\"warts\",{\"1\":{\"68\":1}}],[\"wasn\",{\"1\":{\"62\":1,\"128\":1,\"136\":3}}],[\"was\",{\"1\":{\"13\":1,\"17\":1,\"53\":2,\"58\":1,\"62\":4,\"63\":2,\"66\":1,\"68\":1,\"101\":1,\"105\":1,\"109\":1,\"118\":1,\"123\":1,\"124\":1,\"125\":1,\"126\":2,\"128\":1,\"134\":1,\"136\":4,\"162\":1,\"166\":1,\"177\":1,\"256\":2,\"268\":4,\"274\":1,\"286\":1,\"293\":1,\"297\":1,\"304\":1,\"319\":1}}],[\"ways\",{\"1\":{\"12\":1,\"36\":1,\"59\":1,\"66\":1,\"78\":1}}],[\"way\",{\"1\":{\"8\":1,\"18\":1,\"54\":1,\"60\":1,\"64\":1,\"67\":1,\"72\":1,\"77\":1,\"125\":3,\"128\":1,\"132\":1,\"137\":2,\"169\":1,\"277\":2,\"281\":1,\"286\":5,\"287\":1,\"289\":1,\"318\":1,\"333\":1}}],[\"wanted\",{\"1\":{\"75\":1}}],[\"want\",{\"1\":{\"5\":1,\"9\":1,\"66\":1,\"68\":1,\"128\":1,\"266\":1,\"281\":2,\"330\":1,\"346\":1,\"347\":2}}],[\"wikipedia\",{\"1\":{\"299\":1,\"304\":1}}],[\"win10\",{\"1\":{\"244\":1}}],[\"window\",{\"1\":{\"130\":1}}],[\"windows\",{\"0\":{\"239\":1,\"244\":1},\"1\":{\"58\":1,\"59\":1,\"82\":1,\"94\":1,\"114\":1,\"126\":1,\"128\":6,\"130\":1,\"134\":1,\"136\":3,\"180\":1,\"183\":1,\"230\":2,\"239\":5,\"240\":1,\"244\":3,\"252\":1,\"253\":2,\"299\":1}}],[\"width\",{\"1\":{\"174\":1}}],[\"wide\",{\"1\":{\"142\":1,\"144\":1,\"331\":1}}],[\"wider\",{\"1\":{\"29\":1}}],[\"wishing\",{\"1\":{\"286\":1}}],[\"wish\",{\"1\":{\"66\":1,\"138\":1,\"231\":1,\"247\":1,\"254\":1,\"311\":1}}],[\"withdynamicdesc\",{\"1\":{\"105\":1}}],[\"without\",{\"1\":{\"56\":1,\"60\":1,\"66\":1,\"79\":1,\"118\":1,\"126\":1,\"127\":1,\"128\":1,\"132\":1,\"177\":1,\"263\":1,\"281\":1,\"352\":1}}],[\"within\",{\"1\":{\"8\":1,\"33\":1,\"41\":1,\"54\":1,\"56\":1,\"72\":1,\"107\":1,\"125\":1,\"127\":1,\"137\":2,\"157\":1,\"244\":1,\"260\":2,\"266\":1,\"299\":1,\"314\":1,\"322\":1,\"323\":1,\"329\":1,\"333\":1,\"338\":2,\"352\":1}}],[\"with\",{\"0\":{\"350\":1},\"1\":{\"4\":3,\"6\":1,\"9\":1,\"13\":3,\"16\":2,\"21\":2,\"29\":1,\"49\":1,\"52\":1,\"53\":1,\"54\":4,\"55\":3,\"56\":4,\"58\":2,\"59\":2,\"62\":3,\"63\":3,\"64\":3,\"66\":3,\"67\":1,\"68\":2,\"70\":1,\"72\":4,\"73\":1,\"75\":2,\"76\":1,\"77\":3,\"85\":2,\"91\":2,\"98\":1,\"99\":1,\"101\":1,\"102\":1,\"103\":1,\"105\":2,\"110\":1,\"113\":1,\"118\":2,\"123\":3,\"125\":1,\"126\":1,\"128\":4,\"132\":2,\"134\":1,\"136\":3,\"140\":2,\"149\":1,\"150\":1,\"166\":1,\"177\":2,\"178\":1,\"179\":1,\"181\":1,\"197\":1,\"222\":2,\"241\":1,\"243\":1,\"246\":1,\"252\":2,\"253\":2,\"256\":1,\"258\":1,\"260\":1,\"263\":1,\"264\":2,\"266\":3,\"268\":1,\"274\":1,\"277\":3,\"278\":1,\"286\":2,\"287\":1,\"293\":1,\"305\":2,\"311\":2,\"319\":1,\"330\":1,\"331\":1,\"336\":2,\"338\":1,\"342\":3,\"347\":1,\"351\":1,\"358\":1}}],[\"will\",{\"1\":{\"4\":2,\"8\":1,\"9\":1,\"10\":1,\"14\":1,\"17\":1,\"21\":1,\"41\":1,\"42\":1,\"43\":1,\"45\":1,\"49\":1,\"52\":1,\"54\":1,\"57\":1,\"64\":2,\"66\":1,\"70\":1,\"72\":1,\"74\":1,\"75\":1,\"84\":2,\"92\":1,\"93\":1,\"105\":1,\"110\":1,\"114\":2,\"118\":5,\"123\":4,\"126\":3,\"128\":6,\"130\":2,\"132\":1,\"134\":4,\"136\":2,\"138\":2,\"141\":1,\"146\":2,\"154\":1,\"157\":1,\"178\":1,\"194\":1,\"232\":1,\"244\":1,\"252\":1,\"253\":2,\"254\":2,\"255\":2,\"256\":1,\"259\":1,\"260\":2,\"262\":1,\"264\":3,\"266\":1,\"270\":4,\"271\":1,\"277\":3,\"278\":1,\"282\":2,\"295\":4,\"296\":1,\"308\":1,\"310\":1,\"314\":1,\"315\":1,\"321\":1,\"328\":2,\"338\":1,\"341\":1,\"342\":1,\"345\":1,\"346\":2,\"347\":1,\"351\":1,\"355\":1,\"356\":1,\"357\":5,\"360\":1,\"362\":1,\"364\":1}}],[\"wildcards\",{\"0\":{\"28\":1},\"1\":{\"3\":1,\"62\":1,\"330\":1}}],[\"wed\",{\"1\":{\"209\":1}}],[\"wednesday\",{\"1\":{\"56\":2,\"57\":1,\"58\":1}}],[\"weird\",{\"1\":{\"118\":1}}],[\"weights\",{\"1\":{\"69\":1}}],[\"website\",{\"1\":{\"105\":1,\"110\":1,\"128\":1,\"130\":1,\"134\":2,\"136\":1}}],[\"weeks\",{\"1\":{\"83\":1,\"175\":1}}],[\"were\",{\"1\":{\"62\":3,\"63\":2,\"77\":1,\"105\":1,\"123\":1,\"166\":1,\"277\":1}}],[\"well\",{\"1\":{\"4\":1,\"16\":1,\"42\":1,\"55\":1,\"63\":2,\"64\":1,\"67\":1,\"75\":1,\"85\":1,\"104\":1,\"123\":1,\"140\":1,\"142\":1,\"252\":1,\"256\":1,\"339\":1}}],[\"we\",{\"1\":{\"4\":1,\"6\":1,\"53\":1,\"56\":4,\"57\":1,\"58\":2,\"68\":1,\"76\":1,\"168\":1,\"243\":1,\"274\":1,\"277\":1,\"317\":1,\"368\":1,\"372\":1}}],[\"irrespective\",{\"1\":{\"336\":1}}],[\"ipc\",{\"1\":{\"299\":2}}],[\"idiom\",{\"1\":{\"270\":1,\"295\":1}}],[\"id=\",{\"1\":{\"214\":1}}],[\"id\",{\"1\":{\"202\":1,\"274\":1,\"315\":1,\"316\":1}}],[\"ides\",{\"1\":{\"278\":1}}],[\"identify\",{\"1\":{\"268\":1,\"320\":1}}],[\"idea\",{\"1\":{\"118\":2,\"281\":1}}],[\"ideas\",{\"1\":{\"69\":1}}],[\"ide\",{\"1\":{\"63\":1,\"279\":1}}],[\"ie\",{\"1\":{\"123\":1,\"128\":1,\"134\":1,\"165\":1,\"261\":1,\"287\":1,\"317\":1,\"318\":1}}],[\"immutable\",{\"1\":{\"126\":1,\"330\":3}}],[\"image\",{\"0\":{\"206\":1},\"1\":{\"102\":2,\"123\":1}}],[\"images\",{\"1\":{\"99\":1,\"101\":2,\"138\":2,\"178\":1,\"222\":2}}],[\"implemented\",{\"1\":{\"299\":1}}],[\"implementation\",{\"1\":{\"259\":1}}],[\"implicit\",{\"1\":{\"58\":1}}],[\"impact\",{\"1\":{\"114\":2,\"170\":1}}],[\"import\",{\"1\":{\"253\":3,\"254\":2,\"272\":1,\"289\":3,\"291\":1,\"297\":1,\"340\":1}}],[\"imports\",{\"1\":{\"105\":2}}],[\"imported\",{\"1\":{\"105\":1,\"126\":1,\"177\":1,\"289\":1}}],[\"importing\",{\"1\":{\"105\":1,\"253\":1}}],[\"important\",{\"1\":{\"12\":1,\"193\":1,\"204\":1,\"277\":1}}],[\"improves\",{\"1\":{\"130\":1}}],[\"improvement\",{\"1\":{\"110\":1}}],[\"improvements\",{\"1\":{\"63\":1,\"85\":1,\"87\":1,\"89\":1,\"90\":1,\"95\":1,\"105\":2,\"108\":2,\"110\":1,\"117\":1,\"121\":1,\"124\":1,\"130\":1,\"132\":1,\"134\":2,\"136\":1,\"138\":1,\"140\":1,\"178\":2}}],[\"improve\",{\"1\":{\"105\":1,\"110\":1,\"118\":1,\"123\":1}}],[\"improved\",{\"1\":{\"67\":1,\"82\":1,\"123\":1,\"136\":1,\"142\":1,\"158\":1,\"170\":1,\"180\":1,\"183\":1}}],[\"illustrative\",{\"1\":{\"63\":1}}],[\"i\",{\"1\":{\"37\":1,\"38\":1,\"41\":1,\"42\":1,\"55\":1,\"62\":1,\"63\":7,\"64\":6,\"66\":6,\"67\":1,\"68\":1,\"69\":2,\"75\":1,\"94\":1,\"105\":1,\"108\":2,\"124\":1,\"126\":1,\"142\":1,\"157\":1,\"201\":2,\"222\":2,\"256\":1,\"286\":1,\"289\":1,\"362\":1,\"363\":2}}],[\"ignoreprefix\",{\"1\":{\"182\":1}}],[\"ignored\",{\"0\":{\"349\":1},\"1\":{\"77\":1,\"114\":2,\"134\":1,\"136\":1,\"144\":1,\"178\":1,\"349\":1}}],[\"ignore\",{\"1\":{\"22\":2,\"58\":1,\"126\":1,\"253\":1,\"305\":1}}],[\"ignoring\",{\"1\":{\"15\":1}}],[\"italic\",{\"1\":{\"259\":1}}],[\"item\",{\"1\":{\"330\":2,\"357\":1}}],[\"items\",{\"1\":{\"108\":2,\"123\":1,\"127\":1,\"145\":1,\"158\":1}}],[\"iterm2\",{\"1\":{\"123\":1,\"178\":1}}],[\"iterator\",{\"1\":{\"76\":1}}],[\"iterating\",{\"1\":{\"53\":2,\"59\":2,\"330\":2}}],[\"iterations\",{\"1\":{\"177\":1}}],[\"iteration\",{\"0\":{\"56\":1,\"57\":1,\"74\":1},\"1\":{\"41\":3,\"52\":2,\"77\":3,\"128\":2,\"136\":3}}],[\"iterates\",{\"1\":{\"57\":1}}],[\"iterate\",{\"1\":{\"38\":1,\"41\":1,\"60\":2,\"78\":1,\"79\":2,\"107\":1,\"137\":1,\"179\":2,\"329\":1,\"340\":1}}],[\"itself\",{\"1\":{\"62\":1,\"67\":1,\"274\":1}}],[\"its\",{\"1\":{\"54\":1,\"55\":1,\"56\":2,\"68\":1,\"72\":1,\"135\":1,\"136\":1,\"299\":1,\"304\":1,\"310\":1,\"311\":1,\"313\":1,\"332\":1,\"338\":1,\"351\":1}}],[\"it\",{\"1\":{\"4\":1,\"7\":5,\"12\":1,\"13\":1,\"17\":1,\"21\":2,\"25\":1,\"26\":1,\"27\":2,\"28\":1,\"34\":1,\"42\":1,\"43\":1,\"49\":2,\"52\":2,\"54\":4,\"55\":1,\"56\":3,\"57\":3,\"58\":3,\"59\":1,\"60\":1,\"62\":5,\"63\":12,\"64\":1,\"66\":2,\"67\":2,\"68\":3,\"69\":2,\"70\":2,\"72\":4,\"73\":3,\"75\":3,\"79\":1,\"85\":1,\"87\":1,\"97\":1,\"105\":1,\"108\":2,\"110\":3,\"111\":1,\"112\":1,\"113\":1,\"118\":1,\"122\":1,\"123\":2,\"124\":2,\"126\":2,\"127\":1,\"128\":2,\"130\":2,\"132\":2,\"134\":2,\"136\":9,\"138\":1,\"140\":1,\"153\":1,\"157\":1,\"166\":1,\"177\":1,\"178\":1,\"191\":1,\"193\":1,\"194\":2,\"241\":1,\"244\":1,\"253\":1,\"256\":1,\"258\":1,\"261\":1,\"262\":1,\"263\":1,\"264\":1,\"265\":2,\"266\":1,\"268\":4,\"275\":1,\"277\":1,\"281\":3,\"282\":1,\"284\":1,\"286\":2,\"287\":2,\"293\":1,\"299\":3,\"304\":2,\"305\":1,\"308\":1,\"310\":1,\"312\":1,\"324\":1,\"329\":1,\"330\":2,\"340\":1,\"347\":3,\"348\":1,\"351\":2,\"352\":1,\"360\":1}}],[\"iso\",{\"1\":{\"259\":1}}],[\"issue\",{\"1\":{\"118\":3,\"123\":2,\"166\":1,\"178\":1,\"325\":1}}],[\"issues\",{\"1\":{\"106\":1,\"115\":1,\"123\":1,\"178\":1,\"240\":1,\"241\":2,\"253\":2,\"325\":1,\"342\":1}}],[\"ismethod\",{\"1\":{\"126\":1}}],[\"ism\",{\"1\":{\"68\":1}}],[\"isn\",{\"1\":{\"28\":1,\"34\":1,\"55\":2,\"56\":1,\"68\":1,\"73\":2,\"75\":2,\"126\":1,\"130\":1,\"134\":1,\"136\":1,\"266\":1,\"274\":1,\"304\":1,\"365\":1}}],[\"is\",{\"1\":{\"4\":3,\"5\":1,\"6\":1,\"7\":5,\"8\":2,\"12\":1,\"13\":5,\"22\":5,\"25\":1,\"27\":2,\"28\":3,\"29\":1,\"34\":1,\"39\":1,\"43\":2,\"45\":1,\"49\":2,\"50\":2,\"52\":2,\"53\":2,\"54\":6,\"55\":4,\"56\":5,\"57\":4,\"58\":7,\"61\":2,\"62\":5,\"63\":5,\"64\":6,\"66\":5,\"67\":3,\"68\":2,\"69\":2,\"70\":2,\"72\":6,\"73\":5,\"75\":3,\"77\":6,\"87\":3,\"91\":1,\"93\":1,\"97\":1,\"104\":1,\"108\":1,\"110\":3,\"112\":1,\"113\":1,\"118\":6,\"119\":2,\"123\":7,\"126\":5,\"127\":1,\"128\":6,\"130\":10,\"132\":6,\"134\":3,\"136\":14,\"138\":1,\"141\":2,\"142\":2,\"153\":1,\"154\":3,\"157\":3,\"162\":1,\"166\":1,\"169\":1,\"177\":3,\"178\":1,\"182\":1,\"188\":1,\"193\":1,\"207\":2,\"217\":1,\"220\":1,\"221\":3,\"232\":1,\"240\":1,\"241\":2,\"244\":2,\"252\":2,\"253\":5,\"255\":1,\"256\":2,\"258\":1,\"260\":2,\"261\":1,\"264\":3,\"265\":2,\"266\":12,\"267\":1,\"268\":1,\"270\":2,\"274\":4,\"275\":1,\"276\":1,\"277\":3,\"279\":1,\"281\":3,\"282\":4,\"283\":3,\"284\":1,\"286\":3,\"287\":3,\"289\":3,\"292\":1,\"293\":2,\"295\":2,\"299\":6,\"302\":1,\"303\":1,\"304\":8,\"305\":2,\"308\":2,\"309\":1,\"310\":3,\"311\":1,\"313\":1,\"314\":1,\"315\":1,\"317\":1,\"318\":1,\"320\":1,\"324\":2,\"325\":1,\"326\":1,\"328\":2,\"329\":1,\"330\":3,\"331\":6,\"334\":3,\"335\":3,\"336\":4,\"337\":1,\"338\":4,\"339\":1,\"342\":2,\"344\":1,\"345\":1,\"347\":2,\"348\":1,\"351\":2,\"356\":1,\"357\":2,\"360\":1,\"364\":1}}],[\"if\",{\"0\":{\"36\":1,\"55\":1,\"73\":1},\"1\":{\"3\":1,\"5\":1,\"7\":2,\"10\":1,\"14\":1,\"34\":1,\"36\":3,\"37\":2,\"41\":1,\"42\":3,\"43\":1,\"45\":1,\"49\":2,\"52\":3,\"62\":2,\"64\":1,\"66\":1,\"68\":3,\"70\":3,\"75\":1,\"77\":2,\"91\":1,\"92\":1,\"109\":2,\"118\":3,\"122\":1,\"123\":1,\"126\":2,\"128\":5,\"130\":3,\"131\":2,\"132\":1,\"134\":1,\"135\":2,\"136\":5,\"141\":1,\"154\":1,\"166\":1,\"168\":1,\"177\":1,\"192\":1,\"193\":1,\"231\":1,\"241\":1,\"244\":1,\"247\":1,\"252\":1,\"253\":2,\"256\":1,\"261\":1,\"264\":1,\"266\":6,\"274\":1,\"277\":1,\"281\":1,\"282\":2,\"283\":1,\"284\":1,\"299\":1,\"305\":1,\"308\":1,\"314\":1,\"315\":1,\"328\":2,\"329\":1,\"330\":1,\"332\":4,\"335\":1,\"336\":1,\"338\":3,\"339\":1,\"340\":1,\"342\":2,\"345\":1,\"346\":1,\"347\":2,\"351\":1,\"356\":1,\"357\":1}}],[\"in$path\",{\"1\":{\"308\":1}}],[\"inbuilt\",{\"1\":{\"290\":1}}],[\"initiates\",{\"1\":{\"267\":1,\"285\":1,\"352\":1}}],[\"initial\",{\"1\":{\"253\":1}}],[\"initialized\",{\"1\":{\"123\":1}}],[\"invert\",{\"1\":{\"259\":1}}],[\"inverted\",{\"1\":{\"130\":1}}],[\"invoking\",{\"1\":{\"126\":1}}],[\"invokes\",{\"1\":{\"34\":1}}],[\"invoked\",{\"1\":{\"34\":1,\"44\":1,\"45\":1,\"46\":1,\"126\":1,\"333\":1}}],[\"individuals\",{\"1\":{\"311\":1}}],[\"individually\",{\"1\":{\"86\":1,\"138\":1}}],[\"indexes\",{\"1\":{\"165\":1,\"177\":1}}],[\"index\",{\"1\":{\"110\":1,\"118\":1,\"126\":1,\"130\":1,\"132\":2,\"133\":1,\"136\":1,\"137\":1,\"142\":1,\"149\":1,\"332\":1}}],[\"inherited\",{\"1\":{\"304\":1}}],[\"inherit\",{\"1\":{\"66\":1,\"134\":1,\"150\":1}}],[\"inline\",{\"1\":{\"102\":1,\"105\":1,\"109\":1,\"113\":1,\"128\":1,\"134\":1,\"136\":1,\"280\":1,\"285\":1,\"341\":2}}],[\"inlined\",{\"1\":{\"13\":1,\"99\":1,\"101\":2}}],[\"inlining\",{\"1\":{\"64\":1,\"98\":1,\"101\":1,\"103\":1,\"107\":1,\"126\":1,\"127\":1,\"129\":1,\"178\":1}}],[\"inner\",{\"1\":{\"41\":1}}],[\"incompatible\",{\"1\":{\"174\":1}}],[\"incorrectly\",{\"1\":{\"261\":1}}],[\"incorrect\",{\"1\":{\"136\":1}}],[\"inclusive\",{\"1\":{\"328\":1}}],[\"inclusion\",{\"1\":{\"128\":1}}],[\"includes\",{\"1\":{\"86\":1,\"90\":1,\"96\":1,\"105\":1,\"117\":1,\"126\":1,\"134\":1,\"138\":1,\"153\":1,\"157\":1,\"274\":1,\"282\":1,\"322\":1,\"357\":1}}],[\"included\",{\"1\":{\"43\":1,\"64\":1,\"93\":1,\"101\":1,\"128\":2,\"157\":1,\"254\":1,\"342\":1}}],[\"include\",{\"0\":{\"213\":1},\"1\":{\"34\":1,\"94\":1,\"97\":1,\"105\":1,\"112\":1,\"118\":1,\"126\":3,\"130\":1,\"157\":1,\"254\":2,\"323\":1}}],[\"including\",{\"0\":{\"254\":1},\"1\":{\"34\":1,\"55\":1,\"73\":1,\"87\":1,\"136\":1,\"223\":1,\"245\":1,\"308\":1,\"360\":1}}],[\"incmanpage\",{\"1\":{\"126\":1}}],[\"incexepath\",{\"1\":{\"126\":1}}],[\"incexeall\",{\"1\":{\"126\":1}}],[\"incdirs\",{\"1\":{\"126\":1}}],[\"incfiles\",{\"1\":{\"126\":1}}],[\"incarnation\",{\"1\":{\"36\":1}}],[\"input\",{\"1\":{\"22\":1,\"57\":1,\"74\":1,\"75\":1,\"127\":1,\"131\":1,\"153\":1,\"304\":1,\"352\":1}}],[\"insensitive\",{\"1\":{\"357\":1}}],[\"insert\",{\"1\":{\"259\":1,\"363\":4}}],[\"ins\",{\"1\":{\"259\":1}}],[\"inspiration\",{\"1\":{\"62\":1}}],[\"inspired\",{\"1\":{\"62\":2,\"63\":2}}],[\"inside\",{\"1\":{\"18\":1,\"22\":1,\"27\":2,\"56\":1,\"92\":2,\"109\":1,\"128\":1,\"130\":3,\"134\":2,\"135\":1,\"144\":1,\"157\":1,\"266\":1,\"300\":1,\"314\":2,\"332\":1,\"337\":1,\"338\":4,\"339\":2,\"365\":1}}],[\"instantiates\",{\"0\":{\"339\":1}}],[\"instantiated\",{\"1\":{\"128\":1,\"339\":1}}],[\"instance\",{\"1\":{\"311\":1}}],[\"instances\",{\"1\":{\"54\":1,\"72\":1,\"136\":1,\"141\":1,\"311\":1,\"315\":1}}],[\"installation\",{\"0\":{\"253\":1},\"1\":{\"245\":1,\"253\":1}}],[\"installing\",{\"0\":{\"248\":1},\"1\":{\"244\":1,\"245\":1}}],[\"installed\",{\"1\":{\"56\":1,\"101\":1,\"252\":1,\"308\":1,\"309\":1,\"342\":3,\"345\":1,\"351\":1}}],[\"install\",{\"0\":{\"1\":1,\"242\":1,\"245\":1},\"1\":{\"1\":2,\"101\":1,\"128\":1,\"230\":1,\"231\":2,\"244\":2,\"250\":1,\"251\":1,\"252\":4,\"291\":1,\"342\":2,\"351\":2}}],[\"instead\",{\"1\":{\"9\":1,\"13\":1,\"22\":1,\"28\":1,\"63\":1,\"64\":1,\"122\":1,\"126\":1,\"136\":1,\"158\":1,\"253\":2,\"308\":1,\"311\":1,\"315\":1,\"357\":1}}],[\"instructions\",{\"0\":{\"242\":1,\"243\":1,\"244\":1},\"1\":{\"6\":1,\"63\":2,\"230\":3,\"231\":2,\"244\":2,\"253\":3,\"281\":1,\"346\":1}}],[\"info\",{\"1\":{\"193\":1}}],[\"information\",{\"0\":{\"221\":1},\"1\":{\"25\":1,\"120\":1,\"125\":1,\"177\":1,\"188\":1,\"197\":1,\"221\":1,\"223\":2,\"272\":1,\"285\":1,\"293\":1,\"304\":1,\"314\":2}}],[\"infix\",{\"1\":{\"261\":1}}],[\"infixed\",{\"1\":{\"125\":1,\"132\":1,\"142\":1,\"258\":1,\"260\":1,\"267\":1,\"285\":1,\"352\":1}}],[\"infixing\",{\"1\":{\"12\":1,\"141\":1,\"266\":1,\"330\":1}}],[\"infer\",{\"1\":{\"17\":1}}],[\"inferred\",{\"1\":{\"14\":1}}],[\"inference\",{\"0\":{\"17\":1},\"1\":{\"3\":1}}],[\"intro\",{\"1\":{\"192\":1}}],[\"introduce\",{\"1\":{\"193\":1}}],[\"introduces\",{\"1\":{\"85\":1,\"94\":1,\"95\":1,\"121\":1,\"126\":1,\"140\":1,\"277\":1}}],[\"introduced\",{\"1\":{\"77\":1,\"92\":1,\"93\":1,\"105\":1,\"128\":1,\"130\":1,\"254\":1}}],[\"introducing\",{\"1\":{\"56\":1,\"88\":1,\"110\":1}}],[\"introduction\",{\"0\":{\"4\":1,\"192\":1,\"368\":1,\"372\":1},\"1\":{\"3\":1,\"102\":1,\"109\":1,\"125\":1,\"193\":1,\"272\":1,\"286\":1,\"312\":1,\"329\":1}}],[\"int\",{\"1\":{\"105\":1}}],[\"intelligent\",{\"1\":{\"277\":1}}],[\"integers\",{\"1\":{\"136\":1}}],[\"integer\",{\"1\":{\"118\":1,\"136\":1,\"330\":2}}],[\"integrated\",{\"1\":{\"66\":1}}],[\"intention\",{\"1\":{\"169\":1}}],[\"intentionally\",{\"1\":{\"56\":1}}],[\"intended\",{\"1\":{\"62\":1,\"108\":1}}],[\"inter\",{\"1\":{\"299\":1,\"304\":1}}],[\"interpreting\",{\"1\":{\"266\":1}}],[\"interpretation\",{\"1\":{\"54\":1,\"72\":1}}],[\"internals\",{\"1\":{\"304\":1}}],[\"internal\",{\"1\":{\"106\":1,\"115\":1,\"120\":1,\"125\":1,\"126\":1,\"128\":1,\"134\":1,\"170\":1,\"272\":1,\"285\":1}}],[\"interchangeably\",{\"1\":{\"7\":1,\"21\":1}}],[\"interface\",{\"1\":{\"6\":1,\"54\":1,\"72\":1}}],[\"interactive\",{\"0\":{\"273\":1},\"1\":{\"5\":1,\"6\":1,\"21\":1,\"28\":1,\"62\":1,\"63\":3,\"64\":1,\"69\":1,\"70\":2,\"85\":1,\"96\":1,\"102\":2,\"117\":2,\"118\":1,\"123\":3,\"128\":1,\"134\":1,\"140\":1,\"145\":2,\"177\":2,\"179\":2,\"182\":1,\"184\":1,\"271\":1,\"273\":1,\"274\":1,\"279\":1,\"296\":1,\"330\":1,\"352\":2,\"366\":2}}],[\"interesting\",{\"1\":{\"4\":1,\"58\":1,\"67\":1}}],[\"intuitively\",{\"1\":{\"18\":1}}],[\"into\",{\"1\":{\"10\":1,\"18\":1,\"19\":1,\"26\":1,\"54\":1,\"56\":3,\"63\":3,\"64\":1,\"66\":2,\"69\":1,\"72\":1,\"86\":1,\"94\":1,\"105\":1,\"107\":2,\"108\":1,\"116\":1,\"118\":1,\"123\":2,\"126\":1,\"127\":1,\"128\":1,\"129\":1,\"136\":1,\"138\":1,\"142\":1,\"150\":1,\"157\":1,\"177\":1,\"253\":4,\"258\":1,\"266\":3,\"274\":1,\"281\":1,\"283\":1,\"286\":1,\"305\":1,\"349\":1,\"352\":1,\"362\":1}}],[\"in\",{\"0\":{\"54\":1,\"56\":1,\"57\":1,\"58\":1,\"74\":1,\"82\":1,\"83\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"89\":1,\"90\":1,\"91\":1,\"92\":1,\"93\":1,\"94\":1,\"95\":1,\"96\":1,\"97\":1,\"98\":1,\"99\":1,\"101\":1,\"103\":1,\"108\":1,\"110\":1,\"112\":1,\"117\":1,\"121\":1,\"126\":1,\"128\":1,\"130\":1,\"132\":1,\"134\":1,\"136\":1,\"138\":1,\"140\":1,\"146\":1,\"175\":1,\"180\":1,\"300\":1,\"357\":1},\"1\":{\"1\":1,\"4\":2,\"6\":1,\"7\":2,\"8\":2,\"9\":1,\"10\":1,\"12\":3,\"14\":1,\"17\":1,\"18\":5,\"21\":3,\"22\":2,\"28\":4,\"29\":2,\"32\":1,\"34\":1,\"36\":1,\"41\":1,\"42\":1,\"43\":1,\"45\":1,\"49\":1,\"50\":1,\"52\":5,\"53\":1,\"54\":6,\"55\":4,\"56\":3,\"57\":6,\"58\":3,\"59\":2,\"61\":1,\"62\":6,\"63\":3,\"64\":2,\"66\":9,\"67\":4,\"68\":2,\"70\":1,\"72\":6,\"73\":5,\"75\":2,\"77\":2,\"83\":1,\"85\":1,\"88\":1,\"90\":1,\"91\":1,\"93\":1,\"94\":1,\"101\":1,\"105\":9,\"106\":1,\"107\":1,\"108\":2,\"109\":3,\"110\":7,\"111\":2,\"114\":3,\"115\":1,\"117\":1,\"118\":5,\"119\":1,\"121\":1,\"123\":7,\"124\":1,\"126\":4,\"127\":2,\"128\":10,\"129\":1,\"130\":8,\"132\":4,\"133\":1,\"134\":6,\"135\":3,\"136\":8,\"138\":4,\"140\":1,\"141\":1,\"142\":3,\"144\":5,\"145\":1,\"154\":1,\"157\":3,\"166\":1,\"170\":2,\"174\":1,\"175\":1,\"177\":2,\"178\":2,\"184\":2,\"193\":1,\"194\":1,\"195\":1,\"197\":1,\"221\":1,\"222\":1,\"223\":1,\"231\":1,\"239\":1,\"244\":2,\"253\":5,\"254\":1,\"255\":1,\"258\":1,\"259\":11,\"260\":1,\"261\":1,\"264\":1,\"266\":1,\"267\":1,\"268\":1,\"270\":1,\"271\":1,\"274\":7,\"275\":1,\"277\":5,\"279\":1,\"285\":1,\"286\":2,\"289\":1,\"293\":2,\"295\":1,\"296\":1,\"298\":1,\"299\":2,\"300\":2,\"302\":1,\"303\":2,\"304\":3,\"305\":1,\"306\":2,\"307\":1,\"308\":2,\"310\":2,\"311\":6,\"314\":2,\"315\":2,\"316\":1,\"320\":1,\"324\":1,\"330\":5,\"331\":1,\"332\":2,\"333\":2,\"334\":3,\"335\":3,\"336\":1,\"337\":1,\"338\":3,\"339\":1,\"340\":1,\"342\":1,\"344\":1,\"345\":1,\"346\":1,\"347\":1,\"348\":1,\"349\":2,\"351\":2,\"357\":2,\"361\":1,\"363\":1,\"364\":2}}],[\"bs\",{\"1\":{\"259\":2}}],[\"bsd\",{\"0\":{\"233\":1},\"1\":{\"230\":1,\"246\":1,\"253\":1}}],[\"bson\",{\"1\":{\"119\":1,\"136\":1}}],[\"b1\",{\"1\":{\"211\":1}}],[\"black\",{\"1\":{\"259\":4}}],[\"blink\",{\"1\":{\"259\":1}}],[\"blinking\",{\"1\":{\"153\":1}}],[\"blue\",{\"1\":{\"123\":1,\"222\":1,\"259\":4,\"274\":1,\"281\":1,\"282\":2}}],[\"blog\",{\"0\":{\"47\":1,\"52\":1,\"61\":1,\"71\":1},\"1\":{\"101\":1,\"191\":1}}],[\"blocks\",{\"1\":{\"70\":1,\"123\":1,\"130\":1,\"134\":1,\"136\":1,\"139\":1,\"150\":1,\"266\":3,\"285\":1,\"314\":2,\"329\":2,\"338\":2,\"339\":1,\"340\":2,\"352\":1}}],[\"block\",{\"0\":{\"266\":1},\"1\":{\"27\":1,\"41\":2,\"42\":2,\"77\":1,\"92\":1,\"109\":2,\"113\":1,\"130\":2,\"131\":1,\"133\":1,\"135\":4,\"136\":2,\"137\":2,\"145\":1,\"150\":1,\"177\":4,\"265\":1,\"266\":4,\"267\":1,\"272\":1,\"285\":2,\"297\":2,\"301\":1,\"314\":1,\"329\":2,\"331\":1,\"332\":2,\"335\":1,\"336\":1,\"337\":2,\"338\":3,\"340\":3,\"352\":2}}],[\"bg\",{\"1\":{\"105\":1,\"107\":1,\"123\":1,\"259\":16,\"305\":1,\"306\":1,\"330\":3}}],[\"bit\",{\"1\":{\"286\":1}}],[\"bitmap\",{\"1\":{\"102\":1}}],[\"big\",{\"1\":{\"89\":1,\"108\":1}}],[\"binaries\",{\"0\":{\"247\":1},\"1\":{\"134\":1,\"245\":1}}],[\"binary\",{\"1\":{\"128\":1,\"231\":1,\"247\":1,\"253\":1}}],[\"bin\",{\"1\":{\"62\":1,\"72\":2,\"243\":1}}],[\"bool\",{\"0\":{\"317\":1,\"318\":1,\"319\":1,\"320\":1}}],[\"boolean5\",{\"1\":{\"330\":1}}],[\"boolean\",{\"1\":{\"118\":1,\"136\":1,\"144\":1,\"182\":1,\"317\":1,\"318\":1,\"319\":1,\"320\":1}}],[\"bold\",{\"1\":{\"259\":1}}],[\"bounds\",{\"1\":{\"138\":1,\"162\":1}}],[\"bourne\",{\"1\":{\"62\":1,\"64\":1}}],[\"both\",{\"1\":{\"64\":1,\"68\":1,\"85\":1,\"140\":1,\"243\":1,\"274\":1,\"357\":1}}],[\"boilerplate\",{\"1\":{\"58\":1}}],[\"bob\",{\"1\":{\"14\":1,\"39\":1,\"330\":3}}],[\"b\",{\"1\":{\"29\":2,\"75\":1,\"76\":1,\"77\":3,\"126\":1,\"205\":1,\"283\":1,\"330\":1,\"363\":2}}],[\"buffered\",{\"1\":{\"142\":1}}],[\"buffer\",{\"1\":{\"138\":2,\"144\":1,\"162\":1,\"274\":1}}],[\"buffering\",{\"1\":{\"128\":1}}],[\"buggy\",{\"1\":{\"268\":1}}],[\"bug\",{\"0\":{\"144\":1,\"150\":1,\"154\":1,\"158\":1,\"162\":1,\"166\":1,\"170\":1,\"174\":1,\"178\":1,\"183\":1},\"1\":{\"84\":1,\"86\":1,\"89\":1,\"97\":1,\"98\":1,\"101\":1,\"103\":2,\"105\":1,\"108\":2,\"110\":7,\"112\":2,\"114\":1,\"118\":2,\"123\":2,\"126\":3,\"128\":2,\"130\":1,\"132\":1,\"134\":2,\"136\":1,\"138\":3,\"144\":1,\"146\":1,\"162\":1}}],[\"bugs\",{\"1\":{\"18\":1,\"83\":1,\"94\":1,\"110\":1,\"123\":1,\"126\":2,\"130\":1,\"134\":1,\"175\":1,\"241\":1,\"268\":1}}],[\"builds\",{\"1\":{\"136\":1,\"231\":1,\"232\":1,\"239\":2,\"240\":1,\"243\":3}}],[\"building\",{\"1\":{\"128\":1}}],[\"build\",{\"1\":{\"60\":1,\"93\":1,\"105\":2,\"125\":3,\"128\":2,\"137\":2,\"240\":1,\"244\":1,\"253\":1,\"254\":2}}],[\"built\",{\"1\":{\"58\":1,\"119\":1,\"128\":1,\"274\":1}}],[\"builtin\",{\"0\":{\"75\":1,\"76\":1},\"1\":{\"9\":1,\"34\":2,\"57\":1,\"62\":1,\"94\":1,\"95\":1,\"105\":2,\"108\":1,\"118\":1,\"121\":1,\"123\":2,\"126\":3,\"128\":1,\"130\":2,\"134\":2,\"136\":6,\"138\":1,\"166\":1,\"177\":5,\"266\":2,\"309\":1,\"333\":1}}],[\"builtins\",{\"0\":{\"254\":1},\"1\":{\"8\":1,\"9\":2,\"62\":1,\"64\":1,\"94\":2,\"105\":2,\"118\":2,\"126\":4,\"135\":1,\"137\":1,\"245\":1,\"253\":1,\"254\":2,\"264\":1,\"277\":1,\"349\":1}}],[\"button\",{\"1\":{\"188\":1,\"223\":1}}],[\"but\",{\"0\":{\"55\":1,\"73\":1},\"1\":{\"4\":1,\"9\":1,\"39\":1,\"50\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":2,\"56\":1,\"57\":1,\"58\":1,\"61\":1,\"62\":1,\"63\":1,\"66\":2,\"68\":3,\"69\":1,\"72\":1,\"73\":3,\"75\":2,\"84\":2,\"90\":1,\"91\":2,\"97\":1,\"106\":1,\"110\":1,\"112\":1,\"114\":2,\"115\":1,\"118\":1,\"125\":1,\"126\":4,\"130\":1,\"132\":3,\"134\":3,\"136\":1,\"146\":2,\"170\":1,\"174\":1,\"177\":1,\"178\":1,\"222\":1,\"252\":1,\"256\":1,\"264\":1,\"266\":2,\"270\":1,\"281\":1,\"284\":1,\"286\":1,\"295\":1,\"299\":1,\"302\":1,\"304\":1,\"305\":1,\"311\":1,\"338\":2,\"346\":2,\"351\":1}}],[\"beyond\",{\"1\":{\"299\":1}}],[\"bespoke\",{\"1\":{\"274\":1}}],[\"besides\",{\"1\":{\"222\":1}}],[\"best\",{\"1\":{\"75\":1,\"275\":1}}],[\"beginning\",{\"1\":{\"177\":1,\"363\":2}}],[\"benchmarks\",{\"1\":{\"124\":1}}],[\"benefit\",{\"1\":{\"55\":1,\"66\":2}}],[\"ber\",{\"1\":{\"75\":4}}],[\"better\",{\"1\":{\"67\":1,\"95\":1,\"104\":1,\"108\":1,\"121\":1,\"123\":3,\"130\":2,\"144\":2}}],[\"between\",{\"1\":{\"6\":1,\"50\":1,\"61\":1,\"67\":1,\"68\":1,\"84\":1,\"110\":1,\"118\":1,\"126\":1,\"146\":1,\"258\":1,\"266\":1}}],[\"belongs\",{\"1\":{\"308\":1}}],[\"belonging\",{\"1\":{\"301\":1}}],[\"below\",{\"1\":{\"63\":1,\"101\":1,\"231\":1,\"252\":1,\"253\":2,\"259\":1,\"274\":2,\"281\":1,\"293\":1,\"305\":1,\"314\":1,\"330\":1}}],[\"bell\",{\"1\":{\"259\":1,\"304\":1}}],[\"believe\",{\"1\":{\"62\":1}}],[\"behind\",{\"1\":{\"62\":1,\"71\":1,\"118\":1,\"244\":1,\"281\":1}}],[\"behavioural\",{\"1\":{\"124\":2,\"253\":1}}],[\"behaviour\",{\"1\":{\"109\":1,\"135\":1,\"178\":1,\"332\":1,\"337\":1}}],[\"behavior\",{\"1\":{\"9\":1,\"14\":1,\"42\":1,\"119\":1,\"132\":1,\"244\":1,\"264\":2,\"283\":1,\"299\":1,\"357\":1}}],[\"behaves\",{\"1\":{\"31\":1,\"132\":1}}],[\"behave\",{\"1\":{\"8\":1,\"277\":1}}],[\"been\",{\"1\":{\"57\":1,\"58\":1,\"63\":1,\"64\":1,\"105\":3,\"106\":1,\"114\":1,\"115\":1,\"123\":4,\"124\":1,\"128\":5,\"134\":2,\"136\":3,\"138\":1,\"177\":2,\"178\":1,\"181\":1,\"342\":1}}],[\"became\",{\"1\":{\"62\":1,\"162\":1}}],[\"because\",{\"1\":{\"13\":1,\"27\":1,\"37\":1,\"63\":4,\"66\":1,\"76\":1,\"110\":1,\"118\":1,\"136\":1,\"243\":1,\"275\":1,\"331\":1,\"336\":1,\"338\":1,\"360\":1}}],[\"become\",{\"1\":{\"55\":1,\"56\":1,\"68\":1,\"73\":1,\"91\":1,\"132\":1}}],[\"beforehand\",{\"1\":{\"123\":1}}],[\"before\",{\"1\":{\"54\":1,\"63\":1,\"64\":1,\"72\":1,\"85\":1,\"93\":1,\"118\":1,\"128\":1,\"130\":1,\"134\":1,\"140\":1,\"162\":1,\"177\":2,\"178\":1,\"220\":1,\"270\":1,\"274\":1,\"286\":1,\"295\":1,\"308\":2,\"363\":1}}],[\"be\",{\"0\":{\"351\":1},\"1\":{\"7\":2,\"9\":1,\"12\":1,\"13\":2,\"14\":1,\"15\":1,\"16\":1,\"18\":2,\"21\":1,\"25\":1,\"29\":1,\"36\":1,\"42\":1,\"44\":1,\"45\":1,\"46\":1,\"49\":2,\"52\":2,\"54\":2,\"55\":1,\"56\":2,\"59\":1,\"62\":3,\"63\":6,\"66\":1,\"67\":2,\"69\":2,\"70\":2,\"72\":2,\"73\":1,\"75\":2,\"76\":1,\"77\":1,\"84\":2,\"93\":1,\"105\":2,\"108\":1,\"114\":1,\"118\":2,\"119\":1,\"123\":1,\"126\":3,\"128\":4,\"130\":4,\"132\":1,\"134\":4,\"136\":7,\"138\":3,\"142\":2,\"143\":1,\"144\":2,\"146\":2,\"150\":1,\"153\":1,\"157\":1,\"168\":2,\"177\":1,\"178\":2,\"194\":1,\"239\":1,\"240\":1,\"244\":2,\"252\":1,\"253\":1,\"254\":3,\"255\":1,\"256\":1,\"264\":2,\"266\":3,\"270\":2,\"274\":1,\"279\":1,\"281\":1,\"282\":1,\"283\":1,\"284\":1,\"286\":1,\"287\":2,\"291\":1,\"295\":2,\"299\":1,\"302\":2,\"308\":2,\"310\":2,\"313\":1,\"314\":1,\"315\":1,\"321\":1,\"324\":1,\"328\":2,\"330\":3,\"331\":2,\"334\":1,\"338\":1,\"339\":1,\"341\":2,\"342\":2,\"344\":1,\"345\":3,\"346\":1,\"347\":2,\"357\":2,\"364\":1}}],[\"being\",{\"1\":{\"4\":1,\"19\":1,\"21\":1,\"36\":1,\"58\":1,\"66\":2,\"69\":1,\"87\":1,\"108\":2,\"123\":1,\"126\":2,\"128\":1,\"134\":1,\"136\":1,\"157\":1,\"162\":2,\"168\":1,\"253\":1,\"266\":1,\"270\":1,\"274\":1,\"286\":1,\"295\":1,\"318\":1}}],[\"bypassing\",{\"1\":{\"16\":1,\"179\":1}}],[\"bytes\",{\"1\":{\"55\":1,\"66\":1,\"73\":1,\"260\":1,\"335\":1,\"336\":1}}],[\"byte\",{\"1\":{\"4\":1,\"55\":2,\"57\":1,\"58\":1,\"66\":2,\"73\":2,\"75\":1,\"259\":2,\"260\":1,\"304\":1,\"331\":1}}],[\"by\",{\"0\":{\"349\":1},\"1\":{\"4\":1,\"9\":1,\"16\":1,\"17\":1,\"19\":1,\"22\":1,\"44\":1,\"45\":1,\"46\":1,\"54\":3,\"55\":1,\"58\":1,\"63\":2,\"64\":1,\"66\":1,\"72\":3,\"92\":1,\"101\":2,\"110\":2,\"114\":2,\"123\":1,\"126\":1,\"128\":4,\"130\":5,\"131\":1,\"132\":1,\"133\":1,\"134\":2,\"135\":1,\"136\":6,\"144\":1,\"150\":1,\"157\":1,\"166\":1,\"177\":1,\"183\":1,\"188\":1,\"194\":1,\"196\":1,\"253\":1,\"254\":1,\"262\":1,\"265\":1,\"274\":4,\"277\":1,\"279\":1,\"282\":2,\"284\":1,\"304\":3,\"309\":1,\"311\":1,\"313\":1,\"328\":1,\"331\":1,\"333\":1,\"339\":1,\"340\":1,\"341\":1,\"342\":2,\"344\":1,\"349\":1,\"357\":2,\"360\":1}}],[\"brought\",{\"1\":{\"84\":1,\"124\":1,\"146\":1}}],[\"breadcrumb\",{\"1\":{\"188\":1,\"223\":1}}],[\"breakdown\",{\"1\":{\"109\":1,\"111\":1,\"125\":1,\"263\":1,\"276\":1,\"298\":1,\"307\":1,\"332\":1,\"352\":1}}],[\"breaking\",{\"0\":{\"104\":1,\"113\":1,\"122\":1,\"141\":1,\"148\":1,\"152\":1,\"156\":1,\"160\":1,\"164\":1,\"168\":1,\"172\":1,\"176\":1,\"181\":1},\"1\":{\"80\":1,\"82\":1,\"92\":1,\"93\":1,\"95\":1,\"97\":1,\"98\":1,\"103\":1,\"108\":1,\"110\":2,\"112\":1,\"121\":1,\"126\":1,\"128\":3,\"130\":2,\"132\":1,\"134\":1,\"136\":1,\"138\":1,\"180\":1}}],[\"breaks\",{\"1\":{\"27\":1,\"105\":1,\"126\":1,\"305\":1}}],[\"break\",{\"0\":{\"42\":1},\"1\":{\"3\":1,\"42\":7,\"68\":1,\"104\":1,\"113\":1,\"136\":2,\"137\":1,\"141\":1,\"253\":1}}],[\"brew\",{\"1\":{\"134\":1,\"250\":1}}],[\"brevity\",{\"1\":{\"63\":1}}],[\"bright\",{\"1\":{\"259\":16}}],[\"bring\",{\"1\":{\"87\":1,\"105\":1,\"113\":1,\"118\":1,\"134\":1,\"136\":1,\"177\":1,\"360\":1,\"364\":1}}],[\"brings\",{\"1\":{\"82\":1,\"87\":1,\"89\":1,\"108\":1,\"117\":1,\"136\":2,\"180\":1,\"358\":1}}],[\"bringing\",{\"1\":{\"62\":1}}],[\"bridging\",{\"1\":{\"67\":1}}],[\"brief\",{\"0\":{\"62\":1}}],[\"bracket\",{\"1\":{\"27\":1,\"363\":1}}],[\"brackets\",{\"1\":{\"22\":1,\"278\":1,\"300\":1,\"365\":1}}],[\"braces\",{\"1\":{\"63\":1,\"68\":2,\"258\":1}}],[\"brace\",{\"0\":{\"29\":1},\"1\":{\"3\":1,\"12\":1,\"29\":1,\"178\":1,\"263\":1,\"266\":1,\"267\":1,\"285\":1,\"352\":1,\"363\":2}}],[\"baz\",{\"0\":{\"370\":1},\"1\":{\"228\":1,\"369\":1}}],[\"badge\",{\"1\":{\"222\":3}}],[\"bad\",{\"1\":{\"68\":1}}],[\"background\",{\"0\":{\"299\":1,\"320\":1},\"1\":{\"105\":3,\"107\":2,\"116\":1,\"118\":1,\"134\":1,\"259\":1,\"286\":1,\"305\":1,\"306\":1,\"314\":1,\"320\":1,\"330\":1,\"360\":1,\"361\":1}}],[\"backend\",{\"1\":{\"101\":1,\"143\":1}}],[\"backwards\",{\"1\":{\"87\":1,\"126\":2,\"136\":1,\"177\":1,\"259\":1}}],[\"backslashes\",{\"1\":{\"54\":1,\"72\":1}}],[\"backslash\",{\"1\":{\"54\":1,\"72\":1}}],[\"back\",{\"1\":{\"41\":1,\"63\":1,\"68\":1,\"105\":1,\"118\":1,\"188\":1,\"223\":1,\"360\":1}}],[\"backticks\",{\"1\":{\"27\":1}}],[\"bars\",{\"1\":{\"178\":1}}],[\"bar\",{\"0\":{\"228\":1,\"367\":1},\"1\":{\"15\":1,\"16\":1,\"54\":3,\"72\":3,\"128\":1,\"134\":1,\"136\":3,\"142\":1,\"308\":1,\"330\":11,\"331\":1,\"338\":1,\"368\":1}}],[\"bareword\",{\"1\":{\"7\":1,\"141\":1,\"144\":1}}],[\"barewords\",{\"0\":{\"6\":1},\"1\":{\"3\":1,\"6\":3,\"12\":1,\"136\":1,\"142\":1,\"144\":1}}],[\"base64\",{\"1\":{\"66\":1}}],[\"based\",{\"1\":{\"62\":2,\"118\":1,\"232\":1,\"255\":1,\"256\":1,\"299\":1,\"352\":1}}],[\"base\",{\"1\":{\"56\":1,\"66\":1,\"101\":1,\"103\":1,\"112\":1,\"126\":1,\"128\":1,\"311\":1}}],[\"bashrc\",{\"1\":{\"310\":1}}],[\"bashism\",{\"1\":{\"70\":1,\"139\":1,\"330\":1}}],[\"bash\",{\"0\":{\"54\":1,\"56\":1},\"1\":{\"10\":2,\"29\":1,\"31\":1,\"52\":2,\"54\":3,\"55\":3,\"56\":2,\"57\":1,\"58\":1,\"59\":1,\"62\":1,\"64\":2,\"66\":2,\"67\":3,\"68\":2,\"72\":5,\"73\":3,\"75\":1,\"123\":1,\"136\":1,\"177\":3,\"286\":2,\"303\":1,\"310\":2,\"330\":8,\"331\":3}}],[\"basically\",{\"1\":{\"63\":1,\"191\":1}}],[\"basic\",{\"0\":{\"11\":1},\"1\":{\"3\":1,\"54\":1,\"62\":1,\"72\":1}}],[\"bananas\",{\"1\":{\"7\":1,\"14\":1,\"38\":1}}],[\"bang\",{\"0\":{\"9\":1,\"264\":1},\"1\":{\"3\":1,\"9\":2,\"22\":1,\"138\":1,\"264\":3,\"306\":2,\"319\":1,\"329\":2}}],[\"balance\",{\"1\":{\"6\":1}}],[\"cmd3\",{\"1\":{\"334\":1}}],[\"cmd2\",{\"1\":{\"334\":1}}],[\"cmd1\",{\"1\":{\"334\":1}}],[\"cmd\",{\"1\":{\"303\":2}}],[\"cyan\",{\"1\":{\"259\":4}}],[\"cgit\",{\"1\":{\"249\":1}}],[\"cpu\",{\"1\":{\"243\":1,\"244\":1}}],[\"c2\",{\"1\":{\"211\":1}}],[\"c1\",{\"1\":{\"211\":2}}],[\"center\",{\"1\":{\"201\":1}}],[\"cell\",{\"1\":{\"162\":1}}],[\"certain\",{\"1\":{\"68\":1}}],[\"crlf\",{\"1\":{\"259\":1}}],[\"cr\",{\"1\":{\"259\":1}}],[\"criteria\",{\"1\":{\"157\":1}}],[\"cropped\",{\"1\":{\"110\":1,\"174\":1}}],[\"cross\",{\"1\":{\"105\":1}}],[\"creative\",{\"1\":{\"311\":1}}],[\"creating\",{\"1\":{\"58\":1,\"68\":1,\"71\":1,\"136\":3,\"253\":1,\"330\":2}}],[\"created\",{\"1\":{\"108\":1,\"114\":1,\"126\":2,\"266\":1,\"271\":1,\"296\":1,\"308\":1,\"315\":1}}],[\"creates\",{\"1\":{\"27\":2,\"56\":1,\"57\":1,\"125\":1,\"131\":1,\"266\":1,\"340\":1}}],[\"create\",{\"0\":{\"71\":1},\"1\":{\"22\":1,\"31\":1,\"32\":1,\"56\":1,\"60\":1,\"68\":1,\"79\":1,\"111\":1,\"145\":2,\"179\":1,\"191\":1,\"253\":1,\"339\":2}}],[\"clarity\",{\"1\":{\"304\":1}}],[\"clone\",{\"1\":{\"253\":3}}],[\"close\",{\"1\":{\"126\":1,\"278\":1}}],[\"closing\",{\"1\":{\"110\":1,\"150\":1}}],[\"clears\",{\"1\":{\"359\":1}}],[\"clear\",{\"0\":{\"359\":1},\"1\":{\"177\":2}}],[\"cleaned\",{\"1\":{\"128\":1}}],[\"clean\",{\"1\":{\"66\":1,\"256\":2}}],[\"clicking\",{\"1\":{\"244\":1}}],[\"click\",{\"1\":{\"214\":1,\"244\":1}}],[\"client\",{\"1\":{\"128\":2}}],[\"cli\",{\"0\":{\"342\":1},\"1\":{\"66\":1,\"134\":1,\"342\":1}}],[\"clues\",{\"1\":{\"281\":1}}],[\"clue\",{\"1\":{\"21\":1}}],[\"css\",{\"1\":{\"128\":1}}],[\"csh\",{\"1\":{\"63\":1}}],[\"csv\",{\"1\":{\"57\":1,\"63\":2,\"75\":1,\"105\":1,\"107\":2,\"126\":1}}],[\"cd\",{\"1\":{\"56\":1,\"110\":1,\"111\":1,\"177\":3,\"253\":1,\"274\":2}}],[\"circleci\",{\"1\":{\"134\":1}}],[\"circumstances\",{\"1\":{\"110\":1,\"123\":1}}],[\"ci\",{\"1\":{\"56\":1,\"110\":1}}],[\"ctrl+g\",{\"1\":{\"177\":1}}],[\"ctrl+l\",{\"1\":{\"177\":1}}],[\"ctrl+k\",{\"1\":{\"177\":1}}],[\"ctrl+e\",{\"1\":{\"177\":1}}],[\"ctrl+a\",{\"1\":{\"177\":1,\"183\":1}}],[\"ctrl+r\",{\"1\":{\"138\":1,\"358\":1}}],[\"ctrl+c\",{\"1\":{\"130\":1}}],[\"ctrl+z\",{\"1\":{\"105\":1}}],[\"ctrl\",{\"0\":{\"355\":1,\"356\":1,\"357\":1,\"358\":1,\"359\":1,\"360\":1,\"361\":1},\"1\":{\"44\":1,\"45\":1,\"46\":1,\"142\":2,\"274\":1}}],[\"cup\",{\"1\":{\"215\":1}}],[\"curl\",{\"1\":{\"330\":2}}],[\"curly\",{\"1\":{\"27\":1,\"68\":1,\"258\":1,\"266\":1,\"267\":1,\"285\":1,\"352\":1}}],[\"cursor\",{\"1\":{\"142\":1,\"153\":1,\"177\":1,\"259\":8}}],[\"currectly\",{\"1\":{\"130\":1}}],[\"currently\",{\"1\":{\"123\":1,\"126\":1,\"365\":1}}],[\"current\",{\"1\":{\"28\":1,\"45\":1,\"69\":1,\"107\":1,\"123\":2,\"125\":1,\"318\":1,\"320\":1,\"321\":1,\"331\":1,\"359\":1,\"360\":1,\"361\":1,\"363\":1}}],[\"customizable\",{\"1\":{\"282\":1}}],[\"customize\",{\"1\":{\"223\":1}}],[\"custom\",{\"0\":{\"197\":1,\"283\":1},\"1\":{\"22\":1,\"32\":1,\"197\":10,\"222\":1,\"273\":1,\"275\":1,\"311\":1}}],[\"chmod\",{\"1\":{\"243\":1}}],[\"child\",{\"1\":{\"130\":1}}],[\"checked\",{\"1\":{\"130\":1,\"336\":1}}],[\"checks\",{\"1\":{\"109\":1,\"135\":1,\"166\":1,\"332\":1,\"337\":1}}],[\"check\",{\"1\":{\"105\":1,\"110\":1,\"130\":1,\"138\":1,\"178\":1,\"252\":1,\"336\":1,\"342\":1,\"347\":1}}],[\"checking\",{\"1\":{\"17\":1}}],[\"championed\",{\"1\":{\"304\":1}}],[\"chart\",{\"0\":{\"208\":1},\"1\":{\"209\":1}}],[\"character\",{\"1\":{\"107\":1,\"141\":1,\"144\":1,\"263\":1,\"331\":2,\"363\":5}}],[\"characters\",{\"1\":{\"85\":1,\"108\":1,\"140\":1,\"142\":1,\"363\":3}}],[\"changed\",{\"1\":{\"104\":1,\"113\":1,\"130\":1,\"134\":2,\"136\":1,\"178\":1,\"357\":1}}],[\"change\",{\"0\":{\"101\":1,\"103\":1,\"108\":1,\"110\":1,\"112\":1,\"117\":1,\"121\":1,\"126\":1,\"128\":1,\"130\":1,\"132\":1,\"134\":1,\"136\":1,\"138\":1,\"140\":1,\"146\":1,\"175\":1,\"180\":1},\"1\":{\"82\":1,\"92\":1,\"93\":1,\"95\":1,\"97\":1,\"98\":1,\"103\":1,\"104\":1,\"110\":1,\"111\":1,\"112\":1,\"113\":1,\"121\":1,\"123\":2,\"127\":2,\"128\":2,\"130\":2,\"136\":1,\"138\":1,\"153\":1,\"180\":1,\"345\":1,\"351\":1,\"352\":2}}],[\"changelog\",{\"0\":{\"80\":1},\"1\":{\"84\":1,\"146\":1}}],[\"changes\",{\"0\":{\"104\":1,\"105\":1,\"106\":1,\"113\":1,\"114\":1,\"115\":1,\"118\":1,\"119\":1,\"122\":1,\"123\":1,\"124\":1,\"141\":1,\"143\":1,\"148\":1,\"152\":1,\"156\":1,\"160\":1,\"164\":1,\"168\":1,\"172\":1,\"176\":1,\"181\":1},\"1\":{\"25\":1,\"80\":1,\"87\":1,\"96\":1,\"106\":1,\"108\":2,\"110\":1,\"115\":1,\"117\":1,\"126\":3,\"128\":2,\"130\":2,\"132\":2,\"134\":2,\"136\":3,\"138\":2,\"184\":1,\"348\":1}}],[\"chained\",{\"1\":{\"174\":1,\"266\":1,\"304\":1}}],[\"chaining\",{\"1\":{\"130\":2,\"330\":1}}],[\"chains\",{\"1\":{\"37\":1}}],[\"chain\",{\"1\":{\"28\":1}}],[\"chose\",{\"1\":{\"64\":1}}],[\"chosen\",{\"1\":{\"13\":1,\"50\":1,\"61\":1}}],[\"choose\",{\"1\":{\"59\":1}}],[\"choice\",{\"1\":{\"6\":1}}],[\"c\",{\"0\":{\"355\":1},\"1\":{\"13\":1,\"44\":1,\"63\":4,\"68\":1,\"76\":1,\"77\":2,\"105\":1,\"123\":1,\"126\":2,\"136\":1,\"252\":1,\"253\":1,\"330\":1}}],[\"carefully\",{\"1\":{\"274\":1}}],[\"card\",{\"0\":{\"207\":1}}],[\"captured\",{\"1\":{\"266\":1}}],[\"capturing\",{\"1\":{\"138\":1}}],[\"caught\",{\"1\":{\"166\":1}}],[\"causing\",{\"1\":{\"136\":1,\"178\":1}}],[\"caused\",{\"1\":{\"110\":1}}],[\"cause\",{\"1\":{\"92\":1,\"123\":1,\"130\":1}}],[\"calculating\",{\"1\":{\"162\":1}}],[\"calls\",{\"1\":{\"266\":1}}],[\"calling\",{\"1\":{\"66\":1}}],[\"call\",{\"1\":{\"62\":1,\"114\":2,\"300\":1}}],[\"caller\",{\"1\":{\"137\":1}}],[\"callers\",{\"1\":{\"42\":1}}],[\"calledfoo\",{\"1\":{\"338\":1}}],[\"calledxdg\",{\"1\":{\"311\":1}}],[\"called\",{\"1\":{\"28\":1,\"126\":2,\"293\":1,\"318\":1,\"319\":1,\"330\":1}}],[\"caveat\",{\"1\":{\"126\":1}}],[\"cachettl\",{\"1\":{\"134\":1}}],[\"caches\",{\"1\":{\"123\":1}}],[\"cache\",{\"1\":{\"110\":2,\"130\":1,\"134\":1,\"136\":1}}],[\"cached\",{\"1\":{\"110\":1,\"123\":1,\"134\":1}}],[\"caching\",{\"1\":{\"110\":1,\"123\":1,\"144\":1}}],[\"cake\",{\"1\":{\"73\":1}}],[\"camp\",{\"1\":{\"64\":2}}],[\"came\",{\"1\":{\"62\":1,\"63\":1}}],[\"catalog\",{\"0\":{\"186\":1}}],[\"catch\",{\"1\":{\"105\":1,\"126\":1,\"138\":2,\"283\":1,\"330\":1}}],[\"cat\",{\"1\":{\"63\":3,\"303\":1}}],[\"category\",{\"1\":{\"63\":1,\"209\":1,\"221\":1}}],[\"categories\",{\"1\":{\"63\":1,\"349\":1}}],[\"cancel\",{\"1\":{\"357\":1,\"358\":1}}],[\"cannot\",{\"1\":{\"42\":1,\"126\":1,\"244\":1,\"313\":1,\"324\":1}}],[\"can\",{\"0\":{\"351\":1},\"1\":{\"6\":1,\"12\":1,\"13\":3,\"14\":1,\"15\":2,\"16\":2,\"17\":1,\"21\":3,\"22\":2,\"24\":1,\"28\":1,\"29\":2,\"31\":1,\"32\":1,\"36\":1,\"41\":1,\"42\":1,\"44\":1,\"45\":1,\"46\":1,\"49\":1,\"52\":1,\"54\":4,\"56\":2,\"57\":1,\"58\":2,\"59\":2,\"66\":4,\"67\":2,\"68\":1,\"70\":1,\"72\":4,\"73\":1,\"86\":1,\"105\":2,\"110\":1,\"114\":1,\"118\":1,\"123\":2,\"126\":3,\"128\":2,\"130\":3,\"132\":2,\"134\":2,\"136\":3,\"138\":5,\"141\":1,\"142\":2,\"149\":2,\"182\":1,\"188\":1,\"191\":2,\"204\":1,\"221\":1,\"222\":1,\"223\":1,\"244\":1,\"253\":1,\"255\":1,\"274\":1,\"277\":1,\"279\":1,\"283\":1,\"284\":1,\"287\":2,\"289\":2,\"291\":2,\"299\":2,\"300\":1,\"302\":1,\"304\":1,\"305\":1,\"311\":2,\"330\":1,\"331\":2,\"333\":1,\"342\":1,\"345\":1,\"347\":2,\"348\":1,\"357\":1,\"358\":1,\"361\":1}}],[\"cascading\",{\"1\":{\"139\":1,\"329\":1,\"340\":1}}],[\"cases\",{\"1\":{\"50\":1,\"61\":1,\"105\":1,\"253\":1}}],[\"case\",{\"1\":{\"6\":1,\"37\":3,\"128\":1,\"130\":1,\"136\":1,\"253\":1,\"264\":1,\"357\":2}}],[\"casting\",{\"1\":{\"25\":1}}],[\"cast\",{\"0\":{\"25\":1},\"1\":{\"3\":1,\"25\":1,\"60\":1,\"76\":1,\"79\":1,\"166\":1,\"169\":1}}],[\"coffee\",{\"1\":{\"215\":1}}],[\"coverage\",{\"1\":{\"134\":1}}],[\"copy\",{\"1\":{\"124\":1,\"126\":1,\"254\":1,\"363\":1}}],[\"copying\",{\"1\":{\"124\":1}}],[\"copies\",{\"1\":{\"101\":1}}],[\"copied\",{\"1\":{\"16\":1,\"105\":1,\"170\":1}}],[\"corresponding\",{\"1\":{\"351\":1}}],[\"correlates\",{\"1\":{\"130\":1}}],[\"correction\",{\"1\":{\"144\":1}}],[\"correctly\",{\"1\":{\"128\":1,\"130\":1,\"150\":1,\"162\":1,\"183\":1,\"253\":1,\"261\":1}}],[\"correct\",{\"1\":{\"128\":3}}],[\"corrected\",{\"1\":{\"123\":1}}],[\"coreutils\",{\"1\":{\"114\":1,\"136\":3,\"244\":1}}],[\"core\",{\"1\":{\"55\":1,\"73\":1,\"94\":1,\"126\":1}}],[\"cost\",{\"1\":{\"84\":1,\"146\":1}}],[\"column\",{\"1\":{\"126\":1,\"136\":1,\"268\":2}}],[\"columns\",{\"1\":{\"114\":1,\"118\":1,\"138\":1}}],[\"colorized\",{\"1\":{\"283\":1}}],[\"color\",{\"1\":{\"206\":1,\"207\":1,\"214\":1,\"262\":1,\"282\":1,\"344\":2}}],[\"coloured\",{\"1\":{\"282\":1}}],[\"colours\",{\"1\":{\"259\":2,\"274\":1}}],[\"colour\",{\"0\":{\"282\":1},\"1\":{\"118\":2,\"273\":1,\"274\":1,\"282\":2}}],[\"colon\",{\"1\":{\"110\":1,\"154\":1}}],[\"colons\",{\"1\":{\"63\":1}}],[\"collection\",{\"1\":{\"47\":1,\"60\":1,\"79\":1,\"179\":1,\"314\":1,\"338\":1}}],[\"counts\",{\"1\":{\"130\":1}}],[\"count\",{\"1\":{\"126\":1,\"127\":2,\"130\":2,\"144\":1,\"145\":2,\"149\":1}}],[\"course\",{\"1\":{\"54\":1,\"72\":1}}],[\"couldn\",{\"1\":{\"56\":1}}],[\"could\",{\"1\":{\"9\":1,\"28\":1,\"54\":1,\"66\":1,\"72\":1,\"75\":2,\"110\":1,\"124\":1,\"286\":1,\"330\":1,\"334\":1}}],[\"coming\",{\"1\":{\"177\":1}}],[\"com\",{\"1\":{\"106\":1,\"115\":1,\"123\":1,\"241\":1,\"244\":1,\"253\":5,\"289\":1,\"291\":1,\"325\":1}}],[\"comes\",{\"1\":{\"91\":1,\"98\":1,\"99\":1,\"101\":1,\"103\":1,\"132\":1,\"286\":1,\"287\":1}}],[\"come\",{\"1\":{\"55\":1,\"67\":1,\"305\":1}}],[\"computer\",{\"1\":{\"304\":1}}],[\"computing\",{\"1\":{\"299\":1}}],[\"compiler\",{\"1\":{\"252\":2}}],[\"compiles\",{\"1\":{\"241\":1}}],[\"compile\",{\"1\":{\"134\":1,\"253\":1}}],[\"compiled\",{\"0\":{\"247\":1},\"1\":{\"63\":1,\"105\":1,\"123\":1,\"126\":2,\"128\":1,\"231\":1,\"245\":1,\"247\":1,\"253\":1}}],[\"compiling\",{\"0\":{\"252\":1},\"1\":{\"105\":2,\"245\":1,\"253\":4}}],[\"comparison\",{\"1\":{\"330\":2}}],[\"comparisons\",{\"1\":{\"137\":1}}],[\"comparable\",{\"1\":{\"310\":1}}],[\"compared\",{\"1\":{\"56\":1,\"77\":1}}],[\"compatible\",{\"1\":{\"62\":1,\"67\":1,\"118\":2,\"241\":1,\"253\":1,\"304\":1}}],[\"compatibility\",{\"1\":{\"55\":1,\"68\":1,\"87\":2,\"126\":2,\"136\":2,\"138\":1,\"331\":1}}],[\"compliant\",{\"1\":{\"240\":1}}],[\"complications\",{\"1\":{\"56\":1,\"128\":1}}],[\"completions\",{\"1\":{\"105\":1,\"110\":2,\"119\":1,\"126\":3,\"162\":1,\"271\":1,\"296\":1}}],[\"completion\",{\"0\":{\"278\":1},\"1\":{\"63\":1,\"99\":1,\"101\":2,\"109\":1,\"111\":1,\"126\":2,\"127\":1,\"129\":1,\"133\":1,\"134\":1,\"135\":1,\"144\":1,\"157\":1,\"184\":1,\"273\":1,\"274\":3,\"285\":1,\"340\":1,\"357\":2,\"358\":1}}],[\"completely\",{\"1\":{\"136\":1}}],[\"completer\",{\"1\":{\"118\":1}}],[\"complete\",{\"1\":{\"55\":1,\"73\":1,\"87\":1,\"108\":1,\"110\":1,\"126\":1,\"136\":1}}],[\"complexity\",{\"1\":{\"170\":1}}],[\"complex\",{\"1\":{\"50\":1,\"61\":1,\"64\":1,\"126\":1,\"357\":1}}],[\"communication\",{\"1\":{\"299\":1,\"304\":1}}],[\"commas\",{\"1\":{\"63\":2}}],[\"commandtry\",{\"1\":{\"330\":2}}],[\"commandline\",{\"1\":{\"21\":1,\"93\":1,\"128\":1,\"134\":1}}],[\"commands\",{\"1\":{\"4\":1,\"7\":1,\"21\":2,\"31\":1,\"58\":1,\"62\":2,\"63\":1,\"117\":1,\"118\":9,\"130\":2,\"136\":1,\"182\":1,\"253\":1,\"264\":1,\"266\":2,\"277\":2,\"302\":1,\"330\":6,\"333\":2,\"334\":2,\"335\":1,\"336\":1,\"349\":2}}],[\"command\",{\"0\":{\"49\":1,\"52\":1},\"1\":{\"4\":2,\"6\":2,\"7\":2,\"8\":3,\"13\":1,\"18\":2,\"21\":2,\"22\":2,\"27\":2,\"34\":1,\"49\":2,\"52\":2,\"54\":5,\"59\":2,\"66\":1,\"67\":1,\"70\":3,\"72\":5,\"73\":1,\"92\":1,\"93\":1,\"105\":1,\"109\":1,\"110\":1,\"111\":2,\"114\":1,\"118\":1,\"120\":4,\"123\":1,\"126\":2,\"127\":1,\"128\":3,\"129\":1,\"130\":2,\"131\":1,\"133\":1,\"134\":1,\"135\":1,\"136\":1,\"154\":2,\"157\":2,\"177\":2,\"179\":2,\"184\":1,\"266\":3,\"285\":5,\"289\":1,\"300\":3,\"302\":1,\"303\":1,\"305\":1,\"306\":8,\"322\":1,\"330\":14,\"331\":1,\"334\":2,\"335\":1,\"336\":4,\"337\":8,\"340\":1,\"347\":1,\"357\":1,\"358\":1,\"360\":1,\"364\":1}}],[\"commits\",{\"1\":{\"101\":1}}],[\"commit`\",{\"1\":{\"32\":1}}],[\"commit\",{\"1\":{\"31\":1,\"32\":1}}],[\"comment\",{\"1\":{\"13\":4,\"123\":1,\"136\":4,\"144\":1,\"188\":1,\"220\":1,\"330\":3}}],[\"comments\",{\"0\":{\"13\":1},\"1\":{\"3\":1,\"13\":2,\"136\":2,\"223\":1,\"330\":1}}],[\"commonly\",{\"1\":{\"53\":1,\"118\":1,\"259\":11}}],[\"common\",{\"0\":{\"350\":1},\"1\":{\"6\":1,\"31\":1,\"36\":1,\"53\":2,\"77\":1,\"110\":1,\"136\":1,\"270\":1,\"295\":1,\"330\":1}}],[\"cond\",{\"1\":{\"210\":2}}],[\"cond=>condition\",{\"1\":{\"210\":1}}],[\"conditions\",{\"1\":{\"124\":1,\"265\":1}}],[\"condition\",{\"1\":{\"70\":1,\"110\":1,\"129\":1,\"179\":1,\"265\":1,\"329\":1,\"340\":1}}],[\"conditional\",{\"1\":{\"70\":1,\"128\":1,\"266\":2,\"329\":1,\"340\":1}}],[\"conditionals\",{\"1\":{\"56\":1,\"139\":1,\"329\":1,\"340\":1}}],[\"conforming\",{\"1\":{\"311\":1}}],[\"configured\",{\"1\":{\"300\":1}}],[\"configuring\",{\"0\":{\"282\":1},\"1\":{\"273\":1}}],[\"configuration\",{\"1\":{\"193\":1,\"264\":2}}],[\"configurable\",{\"1\":{\"123\":1,\"132\":1,\"274\":1}}],[\"configshellmax\",{\"1\":{\"105\":1}}],[\"configshell\",{\"1\":{\"104\":1,\"113\":1}}],[\"config\",{\"0\":{\"193\":1,\"220\":1,\"338\":1,\"343\":1},\"1\":{\"97\":1,\"98\":1,\"101\":1,\"102\":1,\"103\":1,\"104\":1,\"110\":1,\"111\":1,\"112\":1,\"113\":1,\"123\":5,\"125\":1,\"126\":2,\"127\":1,\"128\":2,\"129\":1,\"130\":4,\"131\":1,\"134\":1,\"135\":1,\"136\":3,\"137\":1,\"138\":4,\"177\":4,\"179\":1,\"184\":1,\"186\":1,\"213\":1,\"221\":1,\"262\":1,\"264\":3,\"265\":1,\"279\":1,\"282\":4,\"283\":1,\"284\":1,\"285\":1,\"308\":1,\"310\":1,\"311\":4,\"314\":1,\"329\":2,\"338\":1,\"339\":1,\"340\":1,\"344\":2,\"345\":2,\"346\":1,\"348\":3,\"349\":1,\"352\":1},\"2\":{\"225\":1}}],[\"conflicting\",{\"1\":{\"69\":1}}],[\"conflict\",{\"1\":{\"6\":1,\"67\":1}}],[\"convention\",{\"1\":{\"134\":1,\"258\":1}}],[\"converted\",{\"1\":{\"144\":1,\"266\":1}}],[\"converts\",{\"1\":{\"136\":1}}],[\"convertfrom\",{\"1\":{\"58\":2}}],[\"convert\",{\"1\":{\"58\":1,\"66\":1,\"123\":1,\"191\":1}}],[\"converting\",{\"1\":{\"56\":1,\"170\":1}}],[\"conversion\",{\"0\":{\"24\":1},\"1\":{\"3\":1,\"58\":1,\"125\":1}}],[\"convinced\",{\"1\":{\"69\":1}}],[\"concatenated\",{\"1\":{\"132\":1,\"133\":1}}],[\"concurrency\",{\"1\":{\"119\":1}}],[\"concurrently\",{\"1\":{\"110\":1,\"304\":1}}],[\"concurrent\",{\"1\":{\"108\":1}}],[\"concept\",{\"1\":{\"118\":1,\"193\":1,\"299\":2,\"304\":1,\"305\":2}}],[\"conceptual\",{\"1\":{\"9\":1}}],[\"concerns\",{\"1\":{\"65\":1,\"69\":1}}],[\"conceded\",{\"1\":{\"64\":1}}],[\"conclusion\",{\"0\":{\"59\":1,\"69\":1,\"78\":1},\"1\":{\"52\":1}}],[\"consult\",{\"1\":{\"342\":1,\"351\":1}}],[\"constant\",{\"1\":{\"258\":1,\"260\":1,\"261\":2}}],[\"constants\",{\"0\":{\"258\":1,\"259\":1,\"261\":1},\"1\":{\"125\":2,\"258\":2,\"259\":2,\"267\":2,\"282\":1,\"285\":2,\"352\":2}}],[\"const\",{\"1\":{\"197\":1}}],[\"constructs\",{\"1\":{\"76\":1}}],[\"constructor\",{\"1\":{\"60\":1,\"79\":1,\"145\":1}}],[\"construct\",{\"1\":{\"19\":1,\"299\":1,\"304\":1}}],[\"constructed\",{\"1\":{\"17\":1}}],[\"consistent\",{\"1\":{\"286\":1}}],[\"consistency\",{\"0\":{\"289\":1},\"1\":{\"87\":1,\"136\":1,\"286\":1}}],[\"considerably\",{\"1\":{\"83\":1,\"175\":1}}],[\"consider\",{\"1\":{\"64\":1}}],[\"considered\",{\"1\":{\"27\":1,\"42\":1,\"244\":1,\"246\":1,\"331\":1}}],[\"consolidate\",{\"1\":{\"69\":1}}],[\"consoles\",{\"1\":{\"244\":1}}],[\"console\",{\"1\":{\"54\":2,\"72\":2,\"244\":2}}],[\"connections\",{\"1\":{\"22\":1}}],[\"context\",{\"1\":{\"105\":1,\"126\":1,\"136\":2}}],[\"content\",{\"0\":{\"222\":1},\"1\":{\"17\":1,\"128\":3,\"194\":1,\"217\":1,\"220\":1}}],[\"contents\",{\"1\":{\"3\":1,\"52\":1,\"54\":3,\"72\":3,\"107\":1,\"135\":3,\"137\":1,\"223\":1,\"230\":1,\"245\":1,\"266\":1,\"273\":1,\"332\":3}}],[\"contributors\",{\"1\":{\"188\":1,\"223\":1}}],[\"contrived\",{\"1\":{\"54\":1,\"72\":1}}],[\"contradicting\",{\"1\":{\"66\":1}}],[\"contradictory\",{\"1\":{\"63\":1}}],[\"control\",{\"0\":{\"35\":1},\"1\":{\"3\":1,\"62\":1,\"259\":1,\"330\":1,\"361\":1}}],[\"containing\",{\"1\":{\"347\":1}}],[\"container\",{\"0\":{\"197\":1},\"1\":{\"197\":5}}],[\"contains\",{\"1\":{\"130\":1,\"222\":1,\"287\":1}}],[\"contain\",{\"1\":{\"54\":1,\"72\":1,\"113\":1,\"141\":1,\"223\":1,\"308\":1}}],[\"continuing\",{\"1\":{\"41\":1}}],[\"continues\",{\"1\":{\"109\":2,\"131\":2,\"332\":2}}],[\"continue\",{\"0\":{\"41\":1},\"1\":{\"3\":1,\"41\":4,\"136\":2,\"137\":1}}],[\"codes\",{\"1\":{\"259\":1,\"282\":1}}],[\"code><\",{\"1\":{\"114\":1,\"118\":1,\"123\":2}}],[\"code\",{\"0\":{\"13\":1,\"199\":1,\"214\":1,\"260\":1,\"266\":1,\"269\":1,\"291\":1,\"293\":1,\"294\":1,\"346\":1},\"1\":{\"3\":1,\"10\":2,\"27\":1,\"41\":1,\"45\":1,\"57\":1,\"58\":1,\"70\":1,\"77\":1,\"87\":1,\"91\":1,\"103\":1,\"106\":1,\"109\":2,\"110\":1,\"112\":1,\"113\":1,\"114\":3,\"115\":2,\"119\":1,\"123\":1,\"124\":2,\"125\":1,\"126\":1,\"128\":1,\"132\":2,\"135\":1,\"136\":3,\"141\":1,\"143\":1,\"150\":1,\"158\":1,\"168\":3,\"170\":2,\"174\":1,\"177\":1,\"197\":1,\"241\":1,\"253\":2,\"256\":1,\"261\":1,\"265\":1,\"266\":7,\"267\":1,\"268\":2,\"272\":2,\"285\":3,\"286\":1,\"293\":1,\"297\":3,\"300\":1,\"301\":1,\"314\":1,\"329\":1,\"330\":1,\"331\":1,\"332\":1,\"337\":1,\"338\":1,\"339\":3,\"340\":3,\"346\":1,\"351\":1,\"352\":3,\"365\":1}}],[\"gz\",{\"1\":{\"232\":2,\"234\":1,\"235\":4,\"236\":4,\"237\":4,\"238\":4,\"240\":1,\"241\":3,\"243\":3}}],[\"gping\",{\"1\":{\"182\":1}}],[\"gnu\",{\"1\":{\"136\":1}}],[\"guess\",{\"1\":{\"128\":1}}],[\"guessing\",{\"1\":{\"128\":1}}],[\"gunzip\",{\"1\":{\"126\":1,\"243\":1}}],[\"guide\",{\"0\":{\"226\":1,\"258\":1,\"264\":1,\"266\":1,\"268\":1,\"273\":1,\"286\":1,\"298\":1,\"302\":1,\"307\":1,\"313\":1,\"330\":1,\"333\":1,\"338\":1,\"341\":1,\"353\":1,\"375\":1},\"1\":{\"221\":2,\"244\":1,\"280\":1},\"2\":{\"51\":1,\"100\":1,\"187\":1,\"189\":1,\"218\":1,\"224\":1,\"225\":1,\"257\":1}}],[\"garbled\",{\"1\":{\"123\":1}}],[\"gaps\",{\"1\":{\"84\":1,\"146\":1}}],[\"gist\",{\"1\":{\"289\":1}}],[\"given\",{\"1\":{\"134\":1,\"243\":1,\"322\":1,\"323\":1}}],[\"give\",{\"1\":{\"105\":1}}],[\"gitstatus\",{\"1\":{\"283\":1}}],[\"githubusercontent\",{\"1\":{\"289\":1}}],[\"github\",{\"1\":{\"83\":1,\"84\":1,\"123\":1,\"146\":1,\"175\":1,\"241\":1,\"253\":5,\"291\":1,\"325\":2}}],[\"git\",{\"1\":{\"32\":1,\"101\":1,\"108\":1,\"143\":1,\"153\":2,\"249\":1,\"252\":2,\"253\":2,\"283\":2,\"291\":2}}],[\"gopath\",{\"1\":{\"252\":1}}],[\"golang\",{\"1\":{\"252\":1}}],[\"golfing\",{\"1\":{\"68\":1}}],[\"goto\",{\"1\":{\"132\":1}}],[\"goreportcard\",{\"1\":{\"106\":1,\"115\":1}}],[\"go\",{\"1\":{\"105\":1,\"110\":1,\"134\":2,\"136\":1,\"252\":3,\"253\":4,\"347\":1}}],[\"good\",{\"1\":{\"58\":1,\"64\":1,\"69\":1,\"346\":1}}],[\"going\",{\"1\":{\"56\":1,\"63\":3,\"75\":1,\"76\":1}}],[\"graceful\",{\"1\":{\"360\":1}}],[\"grammar\",{\"1\":{\"64\":2,\"67\":1,\"68\":2}}],[\"grouped\",{\"1\":{\"287\":1}}],[\"grokking\",{\"1\":{\"76\":1}}],[\"grok\",{\"1\":{\"56\":1}}],[\"gridded\",{\"1\":{\"274\":1}}],[\"greedy\",{\"1\":{\"357\":1}}],[\"greeeen\",{\"1\":{\"261\":2}}],[\"green\",{\"1\":{\"258\":1,\"259\":4,\"260\":2,\"261\":3}}],[\"greater\",{\"1\":{\"87\":1,\"128\":1,\"136\":1,\"335\":1,\"336\":1}}],[\"great\",{\"1\":{\"64\":1,\"66\":1}}],[\"greatly\",{\"1\":{\"59\":1}}],[\"grep\",{\"1\":{\"7\":1,\"8\":1,\"9\":1,\"63\":2,\"75\":4,\"114\":1,\"136\":2,\"303\":1,\"330\":2}}],[\"gcc\",{\"1\":{\"252\":3}}],[\"gc\",{\"1\":{\"32\":1}}],[\"gc=git\",{\"1\":{\"31\":1}}],[\"g\",{\"1\":{\"28\":4,\"54\":2,\"72\":2,\"108\":1,\"109\":1,\"130\":2,\"131\":1,\"136\":1,\"253\":1,\"330\":4,\"357\":1}}],[\"generically\",{\"1\":{\"347\":1}}],[\"generic\",{\"1\":{\"107\":2,\"114\":1,\"116\":2,\"118\":2,\"149\":1,\"306\":1,\"337\":1}}],[\"generated\",{\"1\":{\"124\":1,\"266\":1}}],[\"generate\",{\"1\":{\"21\":1,\"57\":1,\"60\":1,\"79\":1,\"145\":1,\"191\":2,\"266\":1}}],[\"generally\",{\"1\":{\"58\":1,\"299\":1}}],[\"general\",{\"1\":{\"17\":1,\"347\":1}}],[\"getvalue\",{\"1\":{\"136\":1}}],[\"getfile\",{\"1\":{\"128\":3,\"136\":1,\"137\":1}}],[\"getbytes\",{\"1\":{\"66\":1}}],[\"get\",{\"1\":{\"58\":1,\"126\":1,\"128\":2,\"130\":1,\"134\":2,\"252\":1,\"253\":2,\"282\":1,\"311\":2,\"346\":1,\"348\":1}}],[\"getting\",{\"0\":{\"2\":1},\"1\":{\"110\":1,\"130\":1,\"150\":1,\"166\":1,\"170\":1,\"338\":1}}],[\"globs\",{\"1\":{\"134\":1,\"136\":1}}],[\"glob\",{\"1\":{\"13\":1,\"28\":1,\"109\":1,\"134\":2,\"136\":5,\"138\":1,\"142\":1,\"157\":1,\"357\":1}}],[\"globbing\",{\"0\":{\"28\":1},\"1\":{\"3\":1,\"28\":4,\"29\":1,\"131\":1,\"134\":1,\"136\":1,\"330\":1}}],[\"globals\",{\"1\":{\"268\":1}}],[\"global\",{\"0\":{\"15\":1},\"1\":{\"3\":1,\"15\":2,\"16\":3,\"123\":1,\"134\":1,\"142\":1,\"268\":2,\"330\":2,\"331\":1,\"349\":2}}],[\"square\",{\"1\":{\"365\":1}}],[\"sqlite3\",{\"1\":{\"105\":2,\"128\":1}}],[\"sql\",{\"1\":{\"98\":1,\"103\":1,\"105\":1,\"107\":1,\"127\":1,\"128\":2,\"129\":1}}],[\"sgr\",{\"1\":{\"259\":1}}],[\"skip\",{\"1\":{\"136\":1}}],[\"skills\",{\"1\":{\"59\":1}}],[\"ssh\",{\"1\":{\"128\":2,\"142\":1,\"157\":1}}],[\"slower\",{\"1\":{\"110\":2}}],[\"slides\",{\"1\":{\"66\":1}}],[\"slightly\",{\"1\":{\"31\":1,\"105\":1,\"170\":2,\"277\":1}}],[\"src\",{\"1\":{\"105\":1,\"253\":2,\"254\":1}}],[\"svg\",{\"1\":{\"101\":2,\"207\":1}}],[\"smaller\",{\"1\":{\"290\":2}}],[\"smarter\",{\"1\":{\"99\":1,\"101\":1}}],[\"smoother\",{\"1\":{\"85\":1,\"140\":1}}],[\"swear\",{\"1\":{\"64\":1}}],[\"switched\",{\"1\":{\"130\":1}}],[\"switch\",{\"0\":{\"37\":1},\"1\":{\"3\":1,\"37\":3,\"138\":1,\"139\":1,\"329\":1,\"339\":1,\"340\":1,\"360\":1,\"362\":1}}],[\"sparingly\",{\"1\":{\"360\":1}}],[\"span\",{\"1\":{\"214\":1}}],[\"span>\",{\"1\":{\"214\":1}}],[\"spawns\",{\"1\":{\"138\":1}}],[\"space\",{\"1\":{\"56\":1}}],[\"spaces\",{\"1\":{\"18\":2,\"118\":1}}],[\"spelt\",{\"1\":{\"261\":2}}],[\"spellcheckers\",{\"1\":{\"346\":1,\"347\":1}}],[\"spellchecker\",{\"0\":{\"280\":1,\"342\":1},\"1\":{\"108\":1,\"114\":1,\"273\":1,\"342\":1,\"346\":1,\"347\":2}}],[\"spellcheck\",{\"0\":{\"341\":1,\"345\":1,\"346\":1,\"347\":1},\"1\":{\"101\":1,\"102\":1,\"109\":1,\"113\":3,\"136\":1,\"280\":1,\"285\":1,\"345\":3,\"346\":1,\"347\":1,\"348\":3}}],[\"spellchecking\",{\"1\":{\"99\":1,\"101\":2,\"102\":1,\"109\":1,\"255\":2,\"280\":1,\"285\":1,\"341\":2}}],[\"speed\",{\"1\":{\"126\":1}}],[\"special\",{\"1\":{\"131\":1,\"133\":1,\"135\":1,\"183\":1,\"265\":1,\"299\":1,\"311\":1,\"313\":2,\"340\":1}}],[\"specifically\",{\"1\":{\"136\":1,\"266\":1,\"277\":1}}],[\"specification\",{\"1\":{\"66\":1,\"311\":2}}],[\"specific\",{\"1\":{\"86\":1,\"138\":1,\"166\":1,\"178\":1,\"253\":2,\"303\":1,\"304\":1,\"305\":2,\"310\":1,\"351\":1,\"357\":1}}],[\"specified\",{\"1\":{\"54\":1,\"72\":1,\"136\":1}}],[\"spectrum\",{\"1\":{\"66\":1}}],[\"splits\",{\"1\":{\"352\":1}}],[\"splitting\",{\"1\":{\"76\":1}}],[\"split\",{\"0\":{\"50\":1,\"61\":1},\"1\":{\"50\":1,\"61\":1,\"65\":1,\"132\":1}}],[\"sake\",{\"1\":{\"302\":1}}],[\"said\",{\"1\":{\"266\":1}}],[\"sample\",{\"1\":{\"266\":1}}],[\"same\",{\"1\":{\"8\":2,\"15\":1,\"16\":1,\"21\":1,\"25\":1,\"34\":1,\"57\":1,\"58\":1,\"63\":1,\"64\":1,\"66\":1,\"105\":1,\"122\":1,\"128\":1,\"132\":2,\"136\":1,\"142\":1,\"177\":1,\"264\":1,\"270\":2,\"295\":2,\"299\":1,\"314\":1,\"315\":1,\"338\":2,\"363\":1}}],[\"satisfied\",{\"1\":{\"341\":1}}],[\"sat\",{\"1\":{\"209\":1,\"356\":1}}],[\"saturday\",{\"1\":{\"56\":2,\"57\":1,\"58\":1}}],[\"safely\",{\"1\":{\"197\":1}}],[\"safer\",{\"1\":{\"141\":1}}],[\"safe\",{\"1\":{\"124\":1}}],[\"safety\",{\"1\":{\"92\":1,\"130\":1}}],[\"say\",{\"1\":{\"75\":2}}],[\"sane\",{\"1\":{\"67\":1,\"253\":1}}],[\"salute\",{\"1\":{\"64\":1}}],[\"sally\",{\"1\":{\"15\":2,\"37\":1,\"39\":1,\"330\":2}}],[\"saved\",{\"1\":{\"63\":1}}],[\"save\",{\"1\":{\"31\":1,\"63\":1,\"68\":1}}],[\"saves\",{\"1\":{\"27\":1}}],[\"shaping\",{\"1\":{\"304\":1}}],[\"sharing\",{\"0\":{\"291\":1}}],[\"shared\",{\"1\":{\"266\":1}}],[\"share\",{\"1\":{\"62\":1,\"270\":1,\"286\":1,\"295\":1}}],[\"ship\",{\"1\":{\"253\":1}}],[\"shipped\",{\"1\":{\"123\":1}}],[\"shebang\",{\"1\":{\"126\":1}}],[\"shell\",{\"0\":{\"50\":1,\"61\":1,\"71\":1,\"273\":1,\"358\":1},\"1\":{\"4\":1,\"5\":1,\"7\":2,\"16\":1,\"21\":2,\"27\":3,\"28\":3,\"43\":1,\"45\":1,\"50\":1,\"53\":1,\"54\":1,\"58\":1,\"59\":1,\"61\":1,\"62\":11,\"63\":3,\"66\":2,\"67\":4,\"70\":2,\"71\":1,\"72\":1,\"85\":1,\"87\":1,\"102\":2,\"105\":1,\"107\":1,\"110\":2,\"118\":1,\"123\":3,\"127\":1,\"129\":1,\"130\":3,\"131\":1,\"134\":2,\"136\":4,\"138\":5,\"140\":1,\"145\":2,\"177\":2,\"178\":2,\"179\":2,\"184\":2,\"253\":1,\"262\":1,\"266\":1,\"270\":2,\"271\":1,\"273\":1,\"274\":1,\"275\":1,\"277\":1,\"279\":1,\"282\":2,\"283\":1,\"284\":1,\"286\":2,\"295\":2,\"296\":1,\"297\":1,\"299\":1,\"301\":1,\"324\":2,\"330\":3,\"333\":1,\"334\":1,\"340\":1,\"344\":2,\"345\":1,\"346\":1,\"348\":3,\"352\":2,\"356\":1,\"357\":1,\"358\":1,\"366\":2}}],[\"shells\",{\"0\":{\"27\":1,\"54\":1},\"1\":{\"3\":1,\"4\":2,\"6\":1,\"16\":1,\"18\":1,\"27\":3,\"28\":1,\"52\":1,\"55\":1,\"56\":1,\"59\":1,\"62\":3,\"64\":4,\"65\":1,\"66\":2,\"67\":1,\"68\":1,\"69\":1,\"73\":1,\"136\":1,\"275\":1,\"311\":1,\"330\":1,\"331\":1}}],[\"shown\",{\"1\":{\"362\":1}}],[\"showing\",{\"1\":{\"118\":1}}],[\"show\",{\"1\":{\"118\":1,\"130\":1,\"357\":3}}],[\"shortcut\",{\"1\":{\"264\":2}}],[\"shortcuts\",{\"1\":{\"77\":1}}],[\"shorter\",{\"1\":{\"84\":1,\"146\":1}}],[\"short\",{\"1\":{\"63\":1,\"123\":2}}],[\"shorthand\",{\"1\":{\"32\":1,\"264\":1}}],[\"shortlist\",{\"1\":{\"21\":1}}],[\"shouldn\",{\"1\":{\"34\":1,\"110\":1,\"130\":1,\"136\":1,\"168\":1,\"346\":1}}],[\"should\",{\"1\":{\"15\":1,\"25\":1,\"49\":1,\"52\":1,\"56\":1,\"63\":1,\"67\":1,\"68\":1,\"70\":1,\"105\":1,\"119\":1,\"126\":4,\"130\":6,\"134\":2,\"136\":1,\"141\":1,\"144\":2,\"150\":3,\"154\":1,\"177\":1,\"178\":1,\"191\":1,\"222\":1,\"223\":1,\"239\":1,\"240\":1,\"252\":1,\"253\":1,\"286\":1,\"308\":2,\"310\":1,\"346\":2}}],[\"six\",{\"1\":{\"365\":2}}],[\"side\",{\"1\":{\"331\":1}}],[\"sidebar\",{\"1\":{\"188\":1,\"223\":1}}],[\"site\",{\"1\":{\"207\":2,\"244\":1}}],[\"sites\",{\"1\":{\"191\":1}}],[\"sits\",{\"1\":{\"68\":1}}],[\"size\",{\"1\":{\"110\":1,\"206\":1,\"231\":1}}],[\"since\",{\"1\":{\"57\":1,\"58\":1,\"63\":1,\"68\":1,\"134\":1,\"136\":1}}],[\"single\",{\"1\":{\"12\":1,\"13\":1,\"27\":1,\"132\":1,\"287\":1,\"303\":1,\"311\":1,\"330\":1,\"334\":1}}],[\"simplicity\",{\"1\":{\"304\":1}}],[\"simple\",{\"1\":{\"56\":1,\"60\":1,\"75\":1,\"125\":2,\"137\":1,\"347\":1}}],[\"simply\",{\"1\":{\"25\":1,\"125\":1,\"137\":1}}],[\"similarly\",{\"1\":{\"347\":1}}],[\"similar\",{\"0\":{\"54\":1},\"1\":{\"13\":1,\"52\":1,\"58\":1,\"118\":1,\"144\":1,\"150\":1,\"279\":1,\"310\":1,\"324\":1,\"335\":1}}],[\"sigwinch\",{\"1\":{\"138\":1}}],[\"sigstop\",{\"1\":{\"130\":1}}],[\"sigterm\",{\"1\":{\"130\":2}}],[\"sigtstp\",{\"0\":{\"46\":1},\"1\":{\"3\":1,\"130\":1}}],[\"significantly\",{\"1\":{\"101\":1}}],[\"significant\",{\"1\":{\"64\":1,\"84\":1,\"85\":1,\"87\":1,\"96\":1,\"117\":1,\"136\":1,\"140\":1,\"146\":1}}],[\"signals\",{\"1\":{\"110\":2}}],[\"signal\",{\"0\":{\"44\":1,\"45\":1,\"46\":1},\"1\":{\"3\":3,\"138\":1}}],[\"sigquit\",{\"0\":{\"45\":1},\"1\":{\"3\":1,\"45\":1}}],[\"sigint\",{\"0\":{\"44\":1},\"1\":{\"3\":1,\"355\":1}}],[\"seven\",{\"1\":{\"365\":2}}],[\"several\",{\"1\":{\"90\":1,\"123\":1,\"134\":1,\"307\":1}}],[\"self\",{\"0\":{\"314\":1}}],[\"selected\",{\"1\":{\"274\":1}}],[\"selecting\",{\"1\":{\"274\":1}}],[\"select\",{\"1\":{\"93\":1,\"94\":1,\"105\":2,\"107\":1,\"126\":7,\"127\":1,\"128\":2,\"129\":1,\"247\":1}}],[\"sequentially\",{\"1\":{\"305\":1,\"336\":1}}],[\"sequenced\",{\"1\":{\"302\":1}}],[\"sequence\",{\"1\":{\"260\":1,\"266\":1}}],[\"sequences\",{\"0\":{\"262\":1,\"344\":1},\"1\":{\"125\":1,\"144\":1,\"258\":2,\"259\":1,\"262\":1,\"267\":1,\"285\":1,\"344\":1,\"352\":1}}],[\"semantics\",{\"1\":{\"299\":1}}],[\"semi\",{\"1\":{\"63\":1}}],[\"series\",{\"1\":{\"209\":1}}],[\"searching\",{\"1\":{\"274\":1}}],[\"search\",{\"0\":{\"358\":1},\"1\":{\"134\":1,\"357\":9,\"358\":1}}],[\"separator\",{\"1\":{\"110\":1,\"331\":2}}],[\"separate\",{\"1\":{\"63\":1,\"128\":1}}],[\"separately\",{\"1\":{\"56\":1}}],[\"september\",{\"1\":{\"75\":2}}],[\"security\",{\"1\":{\"110\":1}}],[\"seconds\",{\"1\":{\"134\":1}}],[\"secondly\",{\"1\":{\"64\":1}}],[\"second\",{\"1\":{\"58\":1,\"66\":1,\"77\":1,\"130\":1,\"304\":1,\"365\":1}}],[\"section\",{\"1\":{\"55\":1,\"64\":1,\"342\":1,\"346\":1}}],[\"se\",{\"1\":{\"55\":1,\"73\":1}}],[\"sed\",{\"1\":{\"54\":4,\"55\":1,\"56\":1,\"64\":1,\"72\":4,\"73\":1}}],[\"send\",{\"1\":{\"355\":1,\"356\":1}}],[\"sends\",{\"1\":{\"107\":1,\"116\":1,\"130\":1}}],[\"sending\",{\"1\":{\"45\":1,\"108\":1,\"304\":1}}],[\"sense\",{\"1\":{\"55\":1,\"63\":1,\"64\":1,\"68\":1,\"73\":1,\"331\":2}}],[\"sensitive\",{\"1\":{\"7\":1,\"357\":1}}],[\"session\",{\"1\":{\"16\":1,\"45\":1,\"107\":1,\"125\":1,\"244\":1,\"356\":1,\"360\":1}}],[\"sees\",{\"1\":{\"85\":1,\"103\":1,\"112\":1,\"140\":1}}],[\"seeing\",{\"1\":{\"69\":1}}],[\"seems\",{\"1\":{\"101\":1}}],[\"seem\",{\"1\":{\"69\":1}}],[\"seen\",{\"1\":{\"58\":1,\"62\":1,\"108\":1,\"244\":1,\"270\":1,\"274\":3,\"277\":1,\"295\":1}}],[\"see\",{\"0\":{\"60\":1,\"70\":1,\"79\":1,\"102\":1,\"107\":1,\"109\":1,\"111\":1,\"116\":1,\"120\":1,\"125\":1,\"127\":1,\"129\":1,\"131\":1,\"133\":1,\"135\":1,\"137\":1,\"139\":1,\"145\":1,\"179\":1,\"184\":1,\"263\":1,\"265\":1,\"267\":1,\"272\":1,\"285\":1,\"297\":1,\"301\":1,\"306\":1,\"312\":1,\"329\":1,\"332\":1,\"337\":1,\"340\":1,\"352\":1,\"366\":1},\"1\":{\"7\":1,\"56\":2,\"58\":1,\"101\":1,\"110\":1,\"118\":1,\"128\":1,\"252\":1,\"280\":1,\"293\":1,\"302\":1,\"303\":1,\"314\":1,\"338\":1,\"342\":1}}],[\"sets\",{\"1\":{\"338\":1}}],[\"setting\",{\"1\":{\"126\":1,\"136\":2,\"188\":1,\"206\":1,\"311\":1,\"338\":1}}],[\"settings\",{\"1\":{\"102\":1,\"111\":1,\"125\":1,\"127\":1,\"129\":1,\"131\":1,\"135\":1,\"137\":1,\"179\":1,\"184\":1,\"265\":1,\"285\":1,\"329\":1,\"340\":1,\"352\":1}}],[\"setdatatype\",{\"1\":{\"114\":2}}],[\"set\",{\"1\":{\"4\":1,\"86\":1,\"108\":1,\"109\":1,\"110\":2,\"111\":3,\"123\":7,\"126\":3,\"127\":3,\"128\":1,\"129\":1,\"130\":4,\"133\":1,\"134\":3,\"135\":1,\"136\":1,\"138\":5,\"154\":1,\"166\":1,\"177\":1,\"184\":1,\"221\":1,\"252\":2,\"262\":1,\"263\":1,\"264\":3,\"265\":2,\"279\":1,\"282\":1,\"283\":2,\"284\":1,\"285\":1,\"304\":1,\"308\":1,\"312\":1,\"313\":1,\"328\":3,\"329\":2,\"330\":2,\"331\":1,\"338\":5,\"340\":3,\"344\":1,\"345\":1,\"347\":2,\"352\":2}}],[\"solitary\",{\"1\":{\"302\":1}}],[\"solaris\",{\"0\":{\"240\":1},\"1\":{\"230\":1,\"240\":2}}],[\"solves\",{\"1\":{\"105\":1,\"136\":1}}],[\"solve\",{\"1\":{\"36\":1,\"37\":1}}],[\"solving\",{\"1\":{\"6\":1}}],[\"sort\",{\"1\":{\"303\":1}}],[\"sorted\",{\"1\":{\"130\":1}}],[\"sorting\",{\"1\":{\"118\":1}}],[\"software\",{\"0\":{\"342\":1},\"1\":{\"342\":1,\"351\":1}}],[\"soft\",{\"1\":{\"104\":2,\"105\":1}}],[\"sophisticated\",{\"1\":{\"60\":1,\"125\":3,\"137\":2}}],[\"sourced\",{\"1\":{\"268\":1,\"270\":2,\"295\":2}}],[\"source\",{\"0\":{\"252\":1,\"253\":1,\"270\":1,\"295\":1},\"1\":{\"26\":1,\"127\":1,\"128\":1,\"150\":1,\"231\":1,\"245\":2,\"253\":6,\"256\":1,\"259\":2,\"268\":2,\"270\":2,\"272\":1,\"295\":2,\"297\":1,\"339\":1,\"340\":1,\"352\":1}}],[\"so\",{\"1\":{\"6\":1,\"13\":1,\"18\":1,\"21\":1,\"22\":1,\"53\":1,\"55\":3,\"56\":4,\"63\":4,\"64\":1,\"65\":1,\"66\":2,\"68\":1,\"73\":3,\"75\":2,\"84\":1,\"87\":1,\"91\":1,\"105\":1,\"110\":1,\"119\":1,\"123\":2,\"126\":2,\"132\":1,\"136\":4,\"146\":1,\"168\":1,\"191\":2,\"240\":1,\"256\":1,\"260\":1,\"261\":1,\"266\":1,\"286\":1,\"289\":1,\"304\":1,\"324\":1,\"331\":1,\"347\":1}}],[\"someone\",{\"1\":{\"266\":1}}],[\"somewhere\",{\"1\":{\"68\":1}}],[\"something\",{\"1\":{\"28\":1,\"36\":2,\"42\":1,\"50\":2,\"61\":2,\"63\":1,\"68\":1,\"75\":1,\"130\":4,\"141\":1,\"260\":1,\"266\":1,\"283\":1,\"304\":1,\"346\":1,\"347\":1}}],[\"sometimes\",{\"1\":{\"8\":1,\"17\":1,\"110\":1,\"264\":2,\"349\":1}}],[\"some\",{\"1\":{\"4\":1,\"8\":1,\"9\":1,\"62\":1,\"63\":2,\"68\":1,\"94\":1,\"98\":1,\"101\":1,\"103\":1,\"104\":1,\"105\":2,\"106\":2,\"110\":4,\"113\":1,\"115\":2,\"117\":1,\"118\":2,\"123\":2,\"124\":1,\"126\":1,\"130\":1,\"134\":1,\"158\":1,\"188\":1,\"243\":1,\"244\":1,\"253\":2,\"254\":1,\"255\":1,\"264\":1,\"280\":1,\"311\":1,\"315\":1}}],[\"screen\",{\"0\":{\"364\":1},\"1\":{\"177\":1}}],[\"script\",{\"1\":{\"28\":1,\"67\":1,\"105\":1,\"270\":1,\"287\":1,\"295\":1,\"308\":1}}],[\"scripts\",{\"1\":{\"21\":1,\"28\":1,\"63\":2,\"64\":2,\"67\":1,\"90\":1,\"118\":1,\"123\":2,\"131\":1,\"134\":3,\"184\":1,\"287\":1,\"297\":1,\"301\":1,\"333\":1,\"340\":1}}],[\"scripting\",{\"1\":{\"6\":1,\"53\":1,\"62\":4,\"64\":2,\"69\":1,\"85\":1,\"87\":1,\"123\":1,\"130\":1,\"136\":1,\"140\":1,\"274\":1,\"330\":1}}],[\"scalar\",{\"1\":{\"154\":1}}],[\"scalars\",{\"0\":{\"18\":1},\"1\":{\"3\":1,\"142\":1,\"154\":1}}],[\"scheme\",{\"1\":{\"206\":1}}],[\"schemes\",{\"1\":{\"118\":1}}],[\"scheduler\",{\"1\":{\"109\":1,\"135\":1,\"332\":1,\"334\":1,\"335\":1,\"336\":1,\"337\":1}}],[\"schedulers\",{\"0\":{\"333\":1},\"1\":{\"109\":2,\"135\":2,\"267\":2,\"306\":2,\"333\":2}}],[\"scoping\",{\"0\":{\"338\":1},\"1\":{\"109\":1,\"134\":1,\"135\":1,\"314\":2,\"329\":2,\"332\":1,\"337\":1,\"338\":3,\"339\":1}}],[\"scopes\",{\"1\":{\"68\":1}}],[\"scope\",{\"0\":{\"316\":1,\"339\":1},\"1\":{\"42\":1,\"43\":1,\"130\":1,\"134\":1,\"137\":1,\"305\":1,\"314\":3,\"315\":3,\"316\":2,\"318\":1,\"320\":1,\"321\":1,\"322\":1,\"323\":1,\"338\":1,\"339\":2}}],[\"scenarios\",{\"1\":{\"66\":1}}],[\"s\",{\"0\":{\"82\":1,\"83\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"89\":1,\"90\":1,\"91\":1,\"92\":1,\"93\":1,\"94\":1,\"95\":1,\"96\":1,\"97\":1,\"98\":1,\"99\":1,\"101\":1,\"103\":1,\"108\":1,\"110\":1,\"112\":1,\"117\":1,\"121\":1,\"126\":1,\"128\":1,\"130\":1,\"132\":1,\"134\":1,\"136\":1,\"138\":1,\"140\":1,\"146\":1,\"175\":1,\"180\":1,\"233\":1,\"273\":1},\"1\":{\"5\":1,\"14\":1,\"21\":2,\"22\":1,\"42\":1,\"53\":1,\"54\":3,\"56\":1,\"57\":3,\"60\":1,\"63\":4,\"66\":1,\"67\":2,\"68\":2,\"70\":4,\"72\":3,\"75\":1,\"79\":1,\"84\":1,\"102\":4,\"105\":1,\"108\":1,\"109\":1,\"111\":1,\"113\":1,\"118\":1,\"123\":1,\"126\":1,\"127\":1,\"128\":1,\"130\":2,\"134\":1,\"135\":1,\"136\":2,\"139\":1,\"145\":3,\"146\":1,\"179\":3,\"221\":1,\"230\":1,\"243\":1,\"255\":1,\"256\":1,\"263\":1,\"265\":3,\"266\":3,\"272\":1,\"273\":2,\"274\":3,\"283\":2,\"286\":2,\"287\":2,\"289\":1,\"291\":1,\"297\":2,\"301\":1,\"304\":1,\"309\":1,\"312\":2,\"329\":1,\"330\":1,\"332\":1,\"337\":1,\"340\":1,\"347\":2,\"348\":1,\"352\":4,\"366\":3}}],[\"suspends\",{\"1\":{\"361\":1}}],[\"suspend\",{\"0\":{\"361\":1}}],[\"sudo\",{\"1\":{\"251\":1}}],[\"sun\",{\"1\":{\"209\":1}}],[\"sunday\",{\"1\":{\"56\":2,\"57\":3,\"58\":1}}],[\"suffix\",{\"1\":{\"128\":1}}],[\"sum\",{\"1\":{\"126\":1}}],[\"summaries\",{\"1\":{\"110\":3,\"136\":1}}],[\"surface\",{\"1\":{\"118\":1,\"178\":1}}],[\"sure\",{\"1\":{\"75\":1}}],[\"suppress\",{\"1\":{\"154\":1}}],[\"suppressed\",{\"1\":{\"126\":1,\"136\":1}}],[\"supplied\",{\"1\":{\"149\":1,\"265\":1}}],[\"supports\",{\"1\":{\"19\":1,\"21\":1,\"29\":1,\"36\":1,\"37\":2,\"57\":1,\"74\":1,\"108\":2,\"110\":1,\"123\":2,\"126\":4,\"128\":1,\"130\":2,\"132\":1,\"142\":2,\"194\":1,\"264\":1,\"280\":1,\"282\":1,\"341\":1}}],[\"supported\",{\"0\":{\"246\":1,\"363\":1},\"1\":{\"9\":1,\"21\":2,\"28\":1,\"62\":1,\"67\":1,\"118\":1,\"120\":1,\"123\":1,\"128\":1,\"136\":2,\"138\":1,\"157\":1,\"179\":1,\"245\":1,\"246\":1,\"253\":1,\"259\":11,\"276\":1,\"285\":1,\"330\":1,\"331\":1,\"347\":1,\"365\":1}}],[\"supporting\",{\"1\":{\"7\":1,\"62\":1}}],[\"support\",{\"1\":{\"4\":1,\"9\":1,\"21\":1,\"22\":1,\"67\":1,\"82\":1,\"98\":1,\"101\":1,\"103\":1,\"108\":2,\"110\":3,\"123\":1,\"130\":4,\"134\":2,\"136\":4,\"138\":1,\"142\":2,\"143\":1,\"144\":2,\"157\":1,\"165\":1,\"180\":1,\"183\":1,\"206\":1,\"232\":1,\"244\":1,\"264\":1,\"275\":1,\"304\":1,\"311\":1,\"347\":1,\"368\":1,\"372\":1}}],[\"superscript\",{\"0\":{\"200\":1}}],[\"supercharged\",{\"1\":{\"123\":1}}],[\"supercharges\",{\"1\":{\"94\":1,\"126\":1}}],[\"superfluous\",{\"1\":{\"68\":1}}],[\"success\",{\"1\":{\"157\":1}}],[\"successful\",{\"1\":{\"130\":1,\"265\":1}}],[\"succinct\",{\"1\":{\"63\":1,\"68\":1,\"277\":1}}],[\"such\",{\"1\":{\"7\":1,\"18\":1,\"56\":1,\"64\":1,\"76\":1,\"177\":1,\"254\":1,\"264\":1}}],[\"suite\",{\"1\":{\"256\":1}}],[\"suit\",{\"1\":{\"59\":1}}],[\"suggest\",{\"1\":{\"136\":1}}],[\"suggesting\",{\"1\":{\"118\":1}}],[\"suggestions\",{\"0\":{\"357\":1},\"1\":{\"21\":1,\"105\":1,\"110\":1,\"118\":2,\"123\":1,\"126\":2,\"128\":2,\"130\":4,\"132\":1,\"134\":1,\"144\":3,\"274\":1,\"277\":1,\"354\":2,\"357\":4,\"362\":1}}],[\"sugar\",{\"1\":{\"25\":1,\"134\":1,\"136\":3,\"299\":1}}],[\"subtle\",{\"1\":{\"256\":1}}],[\"subgraph\",{\"1\":{\"211\":3}}],[\"subjective\",{\"1\":{\"256\":1}}],[\"subject\",{\"1\":{\"128\":1,\"130\":1}}],[\"subshell\",{\"1\":{\"331\":1}}],[\"subshells\",{\"1\":{\"92\":1,\"130\":3,\"331\":1,\"339\":1}}],[\"substantially\",{\"1\":{\"299\":1}}],[\"substituted\",{\"1\":{\"13\":1,\"274\":1}}],[\"subsystem\",{\"1\":{\"239\":1}}],[\"subscript\",{\"0\":{\"200\":1}}],[\"subsequent\",{\"1\":{\"110\":1,\"136\":1}}],[\"subset\",{\"1\":{\"109\":1,\"135\":1,\"137\":1,\"332\":1}}],[\"sub\",{\"0\":{\"27\":1},\"1\":{\"3\":1,\"27\":5,\"28\":1,\"330\":3,\"357\":1}}],[\"syscall\",{\"1\":{\"241\":1}}],[\"system\",{\"1\":{\"66\":1,\"109\":3,\"177\":1,\"253\":1,\"286\":2,\"299\":1,\"304\":1}}],[\"systems\",{\"1\":{\"4\":1,\"54\":1,\"56\":1,\"72\":1,\"78\":1,\"126\":2,\"128\":1,\"241\":1,\"252\":2,\"299\":1,\"304\":1,\"331\":1,\"351\":1}}],[\"synonyms\",{\"1\":{\"128\":1}}],[\"syntactic\",{\"1\":{\"25\":1,\"134\":1,\"299\":1}}],[\"syntaxes\",{\"1\":{\"59\":1}}],[\"syntax\",{\"0\":{\"11\":1,\"278\":1,\"279\":1},\"1\":{\"3\":1,\"6\":1,\"10\":1,\"15\":1,\"29\":1,\"56\":2,\"58\":1,\"62\":2,\"63\":6,\"66\":1,\"67\":1,\"68\":2,\"70\":1,\"75\":1,\"84\":1,\"85\":1,\"87\":2,\"99\":1,\"101\":2,\"110\":1,\"118\":1,\"123\":1,\"126\":2,\"136\":7,\"139\":1,\"140\":1,\"141\":1,\"146\":1,\"150\":1,\"194\":1,\"195\":1,\"196\":1,\"273\":2,\"274\":2,\"279\":3,\"282\":1,\"330\":1}}],[\"symlink\",{\"1\":{\"254\":1}}],[\"symlinked\",{\"1\":{\"105\":1}}],[\"symlinks\",{\"1\":{\"28\":1,\"330\":1}}],[\"symbol\",{\"1\":{\"13\":1,\"54\":1,\"72\":1,\"166\":1}}],[\"stuck\",{\"1\":{\"252\":1}}],[\"stylize\",{\"0\":{\"215\":1}}],[\"style\",{\"1\":{\"13\":1,\"68\":2,\"136\":1,\"154\":1}}],[\"stick\",{\"1\":{\"126\":1}}],[\"still\",{\"1\":{\"4\":1,\"41\":1,\"43\":1,\"57\":1,\"63\":1,\"64\":1,\"118\":3,\"126\":1,\"130\":1,\"136\":1,\"138\":1,\"169\":1,\"178\":1,\"299\":1,\"304\":1,\"311\":1,\"314\":1,\"334\":1,\"338\":1}}],[\"steal\",{\"1\":{\"110\":1}}],[\"steps\",{\"0\":{\"253\":1},\"1\":{\"245\":1,\"253\":1,\"280\":1}}],[\"step\",{\"1\":{\"105\":1,\"177\":1}}],[\"stem\",{\"1\":{\"64\":1}}],[\"stdio\",{\"1\":{\"128\":1}}],[\"stdin\",{\"1\":{\"8\":2,\"76\":1,\"109\":1,\"120\":2,\"135\":3,\"137\":1,\"265\":1,\"277\":1,\"285\":2,\"300\":1,\"301\":1,\"304\":1,\"306\":4,\"332\":3,\"337\":4,\"347\":2,\"352\":1}}],[\"stdstream\",{\"1\":{\"114\":2}}],[\"stderr\",{\"1\":{\"22\":8,\"130\":1,\"263\":1,\"300\":1,\"306\":2,\"330\":2,\"335\":2,\"336\":2,\"337\":2}}],[\"stdout\",{\"1\":{\"22\":7,\"120\":2,\"128\":5,\"135\":1,\"136\":2,\"138\":1,\"157\":1,\"263\":3,\"266\":1,\"277\":1,\"285\":2,\"300\":1,\"304\":1,\"306\":3,\"317\":1,\"330\":2,\"332\":1,\"335\":1,\"336\":1,\"337\":3,\"347\":1}}],[\"store\",{\"1\":{\"131\":1}}],[\"stored\",{\"1\":{\"54\":1,\"72\":1,\"266\":1,\"268\":1,\"289\":1,\"293\":1,\"331\":1,\"364\":1}}],[\"stores\",{\"1\":{\"54\":2,\"72\":2}}],[\"stopping\",{\"0\":{\"40\":1},\"1\":{\"3\":1,\"105\":1}}],[\"stone\",{\"0\":{\"10\":1,\"330\":1},\"1\":{\"3\":1,\"10\":1,\"70\":1,\"139\":1}}],[\"strong\",{\"1\":{\"253\":1}}],[\"stronger\",{\"1\":{\"114\":1}}],[\"strokes\",{\"1\":{\"68\":1}}],[\"struct\",{\"1\":{\"110\":1,\"111\":1,\"123\":1}}],[\"structure\",{\"0\":{\"223\":1},\"1\":{\"77\":1,\"111\":1,\"132\":1,\"133\":1,\"191\":1,\"253\":2,\"266\":1,\"272\":1,\"332\":1}}],[\"structured\",{\"0\":{\"74\":1},\"1\":{\"53\":1,\"55\":1,\"57\":1,\"73\":1,\"74\":1,\"77\":1,\"78\":1,\"85\":1,\"127\":1,\"140\":1,\"352\":1}}],[\"structures\",{\"0\":{\"35\":1},\"1\":{\"3\":1,\"62\":1,\"126\":2,\"270\":1,\"277\":1,\"295\":1}}],[\"streaming\",{\"1\":{\"136\":1}}],[\"stream\",{\"1\":{\"66\":1,\"76\":1,\"114\":2,\"128\":2,\"132\":1,\"305\":1,\"306\":1,\"337\":1}}],[\"streams\",{\"1\":{\"4\":1,\"55\":2,\"57\":1,\"58\":1,\"66\":2,\"73\":2,\"75\":1,\"126\":1,\"304\":2,\"305\":1}}],[\"strict\",{\"1\":{\"95\":1,\"121\":1,\"123\":2,\"128\":2,\"130\":1,\"154\":1}}],[\"strictly\",{\"1\":{\"63\":1}}],[\"strip\",{\"1\":{\"56\":1,\"154\":1}}],[\"stringarray\",{\"1\":{\"126\":1}}],[\"string\",{\"1\":{\"12\":2,\"27\":1,\"58\":1,\"66\":1,\"108\":1,\"110\":1,\"118\":1,\"123\":1,\"130\":1,\"134\":1,\"136\":1,\"137\":1,\"141\":2,\"144\":1,\"145\":2,\"150\":1,\"154\":1,\"157\":1,\"169\":1,\"170\":1,\"178\":1,\"259\":2,\"260\":1,\"261\":1,\"263\":3,\"270\":2,\"271\":2,\"282\":1,\"295\":2,\"296\":2,\"321\":1,\"329\":2,\"330\":5,\"331\":1,\"332\":2}}],[\"strings\",{\"0\":{\"12\":1,\"269\":1,\"294\":1},\"1\":{\"3\":1,\"7\":1,\"12\":2,\"27\":1,\"63\":1,\"123\":2,\"136\":3,\"137\":1,\"154\":1,\"168\":1,\"258\":1,\"270\":1,\"295\":1,\"330\":3,\"331\":1}}],[\"straight\",{\"1\":{\"56\":1}}],[\"str\",{\"0\":{\"321\":1,\"324\":1,\"326\":1,\"327\":1,\"328\":1},\"1\":{\"32\":1,\"105\":1,\"141\":1}}],[\"stages\",{\"1\":{\"182\":1}}],[\"stage\",{\"1\":{\"170\":1,\"253\":1}}],[\"statuses\",{\"0\":{\"283\":1},\"1\":{\"273\":1}}],[\"status\",{\"1\":{\"118\":2,\"274\":1,\"281\":1,\"283\":4,\"335\":2,\"336\":2}}],[\"state\",{\"1\":{\"109\":1,\"120\":1,\"125\":1,\"128\":1,\"135\":1,\"162\":1,\"184\":1,\"272\":1,\"285\":1,\"332\":1,\"337\":1}}],[\"statement\",{\"0\":{\"41\":1,\"42\":1,\"43\":1},\"1\":{\"3\":3,\"7\":3,\"16\":1,\"58\":1,\"70\":1,\"110\":1,\"138\":2,\"329\":1,\"340\":1}}],[\"statements\",{\"0\":{\"7\":1,\"36\":1,\"37\":1},\"1\":{\"3\":3,\"7\":2,\"12\":1,\"34\":1,\"37\":1}}],[\"standard\",{\"1\":{\"91\":1,\"93\":1,\"128\":1,\"132\":1,\"137\":1,\"299\":1,\"304\":2,\"308\":2,\"310\":1,\"311\":3}}],[\"standards\",{\"1\":{\"4\":1}}],[\"stable\",{\"1\":{\"91\":1,\"132\":1,\"239\":1}}],[\"staple\",{\"1\":{\"56\":1}}],[\"starting\",{\"1\":{\"222\":2,\"244\":1}}],[\"start\",{\"1\":{\"56\":1,\"66\":1,\"109\":1,\"110\":1,\"111\":1,\"122\":1,\"123\":1,\"125\":1,\"126\":1,\"134\":1,\"137\":1,\"138\":3,\"144\":1,\"253\":1,\"263\":1,\"307\":1,\"336\":2,\"338\":1,\"352\":1}}],[\"starts\",{\"1\":{\"45\":1,\"123\":1}}],[\"started\",{\"0\":{\"2\":1},\"1\":{\"63\":3,\"244\":1,\"304\":1}}],[\"rgba\",{\"1\":{\"207\":1}}],[\"rules\",{\"1\":{\"128\":1}}],[\"rule\",{\"1\":{\"118\":1}}],[\"rungo\",{\"1\":{\"253\":1}}],[\"rune\",{\"1\":{\"178\":1}}],[\"runmode\",{\"1\":{\"108\":1,\"109\":1,\"134\":1,\"135\":1,\"330\":1,\"332\":1,\"337\":1}}],[\"runs\",{\"1\":{\"77\":1,\"177\":2,\"179\":1,\"305\":1,\"336\":1}}],[\"runtime\",{\"1\":{\"67\":1,\"102\":1,\"111\":1,\"118\":1,\"120\":2,\"123\":1,\"125\":3,\"127\":1,\"129\":1,\"131\":1,\"135\":1,\"137\":1,\"179\":1,\"184\":1,\"265\":1,\"268\":2,\"272\":2,\"277\":1,\"285\":3,\"299\":1,\"329\":1,\"340\":1,\"352\":1}}],[\"runcom\",{\"1\":{\"62\":3}}],[\"running\",{\"0\":{\"360\":1},\"1\":{\"45\":1,\"56\":1,\"62\":1,\"105\":1,\"107\":1,\"125\":1,\"128\":1,\"134\":1,\"157\":1,\"177\":1,\"178\":1,\"279\":1,\"286\":1,\"311\":1,\"314\":1,\"320\":1,\"324\":1,\"326\":1,\"342\":1,\"346\":1,\"356\":1}}],[\"run\",{\"1\":{\"42\":1,\"54\":1,\"56\":1,\"66\":2,\"67\":1,\"72\":1,\"90\":1,\"105\":2,\"107\":1,\"108\":2,\"109\":1,\"110\":1,\"134\":1,\"135\":1,\"136\":1,\"232\":1,\"244\":1,\"253\":4,\"262\":1,\"266\":1,\"267\":1,\"289\":1,\"297\":1,\"301\":1,\"306\":2,\"308\":1,\"333\":2,\"335\":1,\"345\":1,\"346\":1,\"347\":1}}],[\"ritchie\",{\"1\":{\"304\":1}}],[\"right\",{\"1\":{\"120\":2,\"136\":1,\"201\":1,\"285\":2,\"306\":4,\"331\":1,\"337\":4}}],[\"risk\",{\"1\":{\"91\":1,\"130\":1,\"132\":1,\"259\":1}}],[\"rich\",{\"1\":{\"66\":2}}],[\"richer\",{\"1\":{\"66\":1,\"196\":1}}],[\"richard\",{\"1\":{\"37\":1,\"39\":1,\"330\":2}}],[\"rc\",{\"1\":{\"62\":1}}],[\"rapidly\",{\"1\":{\"358\":1}}],[\"raw\",{\"1\":{\"289\":1}}],[\"raise\",{\"1\":{\"241\":1}}],[\"raised\",{\"1\":{\"66\":1,\"83\":2,\"134\":1,\"162\":1,\"175\":2}}],[\"ray\",{\"0\":{\"374\":1},\"1\":{\"229\":1,\"373\":1}}],[\"races\",{\"1\":{\"115\":1}}],[\"race\",{\"1\":{\"110\":1,\"124\":1}}],[\"ramifications\",{\"1\":{\"106\":1,\"115\":1}}],[\"ran\",{\"1\":{\"62\":1,\"92\":1,\"130\":1}}],[\"ranged\",{\"1\":{\"109\":1,\"135\":1,\"137\":1,\"332\":1}}],[\"ranges\",{\"1\":{\"108\":1,\"122\":1,\"136\":1}}],[\"range\",{\"1\":{\"29\":1,\"109\":1,\"123\":1,\"134\":1,\"135\":1,\"136\":1,\"137\":1,\"149\":1,\"330\":1,\"332\":1}}],[\"rather\",{\"1\":{\"58\":1,\"66\":2,\"88\":1,\"89\":1,\"105\":2,\"108\":1,\"110\":2,\"123\":2,\"130\":1,\"134\":2,\"136\":2,\"144\":1,\"157\":1,\"178\":2,\"259\":1,\"266\":2,\"299\":1,\"304\":1,\"311\":2,\"336\":1,\"347\":1,\"365\":1}}],[\"r\",{\"0\":{\"358\":1},\"1\":{\"54\":1,\"56\":4,\"72\":1,\"75\":1,\"363\":2}}],[\"rm\",{\"1\":{\"28\":1}}],[\"rx\",{\"1\":{\"28\":2,\"108\":1,\"109\":1,\"330\":2,\"357\":1}}],[\"robust\",{\"1\":{\"157\":1}}],[\"row\",{\"1\":{\"136\":1}}],[\"routines\",{\"1\":{\"126\":1}}],[\"rocks\",{\"1\":{\"84\":1,\"101\":1,\"146\":1,\"182\":1,\"243\":1,\"330\":3}}],[\"room\",{\"1\":{\"66\":1}}],[\"root\",{\"1\":{\"42\":2,\"56\":1,\"118\":1,\"128\":1}}],[\"role\",{\"1\":{\"9\":1}}],[\"rosetta\",{\"0\":{\"10\":1,\"330\":1},\"1\":{\"3\":1,\"10\":1,\"70\":1,\"139\":1}}],[\"rerun\",{\"1\":{\"358\":1}}],[\"renamed\",{\"1\":{\"136\":1}}],[\"renders\",{\"1\":{\"102\":1}}],[\"rewriting\",{\"1\":{\"136\":1}}],[\"rewritten\",{\"1\":{\"57\":1,\"62\":1,\"101\":1,\"105\":1,\"115\":1,\"136\":1}}],[\"reverse\",{\"1\":{\"264\":1,\"306\":1,\"329\":1,\"331\":1}}],[\"revert\",{\"1\":{\"123\":1}}],[\"revamped\",{\"1\":{\"128\":1,\"136\":1}}],[\"rebuilt\",{\"1\":{\"106\":1,\"115\":1}}],[\"request\",{\"1\":{\"137\":1,\"355\":1}}],[\"requesting\",{\"1\":{\"126\":1}}],[\"requested\",{\"1\":{\"123\":1}}],[\"requests\",{\"1\":{\"83\":1,\"175\":1,\"266\":1}}],[\"require\",{\"1\":{\"280\":1,\"346\":1}}],[\"required\",{\"1\":{\"63\":1,\"252\":1,\"308\":1}}],[\"requires\",{\"1\":{\"41\":1,\"42\":1,\"76\":1,\"101\":1,\"136\":1,\"244\":1}}],[\"requirements\",{\"0\":{\"63\":1},\"1\":{\"6\":1}}],[\"recalls\",{\"1\":{\"365\":3}}],[\"recalling\",{\"0\":{\"365\":1}}],[\"recalled\",{\"1\":{\"63\":1}}],[\"receiving\",{\"1\":{\"243\":1}}],[\"received\",{\"1\":{\"243\":1}}],[\"recent\",{\"1\":{\"83\":1,\"175\":1}}],[\"record\",{\"1\":{\"348\":1}}],[\"records\",{\"1\":{\"132\":1}}],[\"recommendation\",{\"1\":{\"244\":1,\"342\":1}}],[\"recommended\",{\"0\":{\"256\":1},\"1\":{\"128\":1,\"134\":1,\"245\":1,\"253\":1,\"330\":1}}],[\"recursive\",{\"1\":{\"104\":3}}],[\"retrieved\",{\"1\":{\"338\":1}}],[\"rethink\",{\"1\":{\"105\":1}}],[\"retain\",{\"1\":{\"68\":1}}],[\"returned\",{\"1\":{\"130\":1}}],[\"returns\",{\"1\":{\"114\":1,\"118\":1,\"120\":1,\"122\":2,\"125\":1,\"136\":1,\"265\":2,\"272\":1,\"285\":1,\"314\":1,\"316\":1,\"322\":1,\"323\":1,\"326\":1,\"327\":1,\"328\":1,\"330\":1,\"342\":1}}],[\"return\",{\"1\":{\"27\":1,\"42\":1,\"75\":1,\"107\":1,\"118\":2,\"125\":1,\"126\":1,\"128\":1,\"137\":1,\"144\":1,\"258\":1,\"267\":1,\"285\":1,\"330\":1,\"352\":1,\"362\":1}}],[\"reinvented\",{\"1\":{\"63\":1}}],[\"reduce\",{\"1\":{\"130\":1,\"136\":1,\"142\":1}}],[\"redundant\",{\"1\":{\"63\":1,\"126\":1}}],[\"red\",{\"1\":{\"130\":1,\"214\":1,\"259\":4}}],[\"redirects\",{\"1\":{\"135\":1,\"332\":1}}],[\"redirected\",{\"1\":{\"22\":2}}],[\"redirect\",{\"1\":{\"22\":3,\"54\":1,\"72\":1,\"134\":2,\"330\":2}}],[\"redirecting\",{\"0\":{\"23\":1},\"1\":{\"3\":1}}],[\"redirection\",{\"0\":{\"20\":1,\"22\":1},\"1\":{\"3\":2,\"22\":1}}],[\"removal\",{\"1\":{\"108\":1}}],[\"removed\",{\"1\":{\"63\":2,\"108\":1,\"134\":1,\"136\":4,\"158\":1}}],[\"remove\",{\"1\":{\"63\":1,\"130\":1,\"166\":1,\"253\":1}}],[\"remain\",{\"1\":{\"105\":1,\"138\":1,\"157\":1}}],[\"remains\",{\"1\":{\"87\":1,\"136\":1}}],[\"remember\",{\"1\":{\"18\":1,\"21\":1,\"118\":1}}],[\"reused\",{\"1\":{\"63\":1}}],[\"regex\",{\"1\":{\"352\":1}}],[\"regexp\",{\"1\":{\"9\":2,\"28\":2,\"109\":1,\"136\":1,\"137\":2,\"142\":1,\"144\":1,\"283\":2,\"330\":2,\"357\":1,\"358\":1}}],[\"regukarly\",{\"1\":{\"130\":1}}],[\"regular\",{\"1\":{\"75\":1,\"136\":1}}],[\"registered\",{\"1\":{\"110\":1}}],[\"regarded\",{\"1\":{\"220\":1}}],[\"regards\",{\"1\":{\"105\":1,\"252\":1}}],[\"regardless\",{\"1\":{\"59\":1,\"75\":1,\"132\":1,\"166\":1}}],[\"regressions\",{\"1\":{\"105\":1,\"114\":1}}],[\"regression\",{\"1\":{\"94\":1,\"105\":1,\"110\":1,\"114\":1,\"123\":1,\"126\":2,\"138\":1}}],[\"reliably\",{\"1\":{\"178\":1}}],[\"reliance\",{\"1\":{\"56\":1}}],[\"reloads\",{\"1\":{\"128\":1}}],[\"reload\",{\"1\":{\"128\":1}}],[\"relevant\",{\"1\":{\"118\":1}}],[\"releases\",{\"1\":{\"84\":4,\"146\":4}}],[\"release\",{\"1\":{\"80\":1,\"82\":1,\"83\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"89\":1,\"90\":1,\"91\":1,\"93\":1,\"94\":2,\"95\":1,\"96\":1,\"97\":1,\"98\":1,\"99\":1,\"101\":2,\"103\":2,\"108\":1,\"110\":1,\"112\":2,\"117\":2,\"121\":2,\"123\":2,\"126\":2,\"128\":1,\"130\":1,\"132\":1,\"134\":1,\"136\":1,\"138\":1,\"140\":1,\"146\":1,\"175\":1,\"180\":1}}],[\"relaxed\",{\"1\":{\"110\":1}}],[\"relative\",{\"1\":{\"222\":1}}],[\"relatively\",{\"1\":{\"58\":1}}],[\"related\",{\"1\":{\"47\":1}}],[\"rely\",{\"1\":{\"55\":1,\"73\":1}}],[\"re\",{\"1\":{\"55\":1,\"56\":1,\"59\":1,\"63\":1,\"64\":1,\"73\":1,\"75\":1,\"108\":1,\"110\":1,\"130\":1,\"136\":2,\"138\":1,\"253\":1,\"314\":1,\"338\":1,\"346\":1}}],[\"repeat\",{\"1\":{\"363\":1}}],[\"repetition\",{\"1\":{\"63\":1}}],[\"repetitive\",{\"1\":{\"54\":1,\"72\":1}}],[\"represent\",{\"1\":{\"365\":1}}],[\"represents\",{\"1\":{\"319\":1}}],[\"represented\",{\"1\":{\"287\":1}}],[\"representation\",{\"1\":{\"266\":1}}],[\"repository\",{\"1\":{\"249\":1,\"283\":1}}],[\"report\",{\"1\":{\"134\":1}}],[\"reporting\",{\"1\":{\"118\":1}}],[\"repls\",{\"1\":{\"64\":1}}],[\"replaced\",{\"1\":{\"128\":1,\"181\":1}}],[\"replaces\",{\"1\":{\"54\":1,\"72\":1}}],[\"replace\",{\"1\":{\"54\":1,\"72\":1,\"132\":1,\"260\":1,\"363\":3}}],[\"repl\",{\"0\":{\"271\":1,\"296\":1},\"1\":{\"5\":1,\"62\":1,\"63\":2,\"64\":1,\"66\":1,\"68\":2,\"90\":1,\"130\":2,\"134\":2,\"136\":1}}],[\"reformatted\",{\"1\":{\"306\":1,\"337\":1}}],[\"reformats\",{\"1\":{\"26\":1}}],[\"reflow\",{\"1\":{\"138\":1}}],[\"reflect\",{\"1\":{\"123\":1}}],[\"refactoring\",{\"1\":{\"136\":1,\"170\":1}}],[\"refactored\",{\"1\":{\"119\":1,\"124\":1}}],[\"refinements\",{\"1\":{\"88\":1,\"110\":1}}],[\"refers\",{\"1\":{\"302\":1}}],[\"referred\",{\"1\":{\"130\":1}}],[\"refer\",{\"1\":{\"76\":1,\"231\":1}}],[\"reference\",{\"1\":{\"10\":1,\"330\":1}}],[\"references\",{\"1\":{\"8\":1,\"136\":1,\"174\":1}}],[\"resume\",{\"1\":{\"361\":1}}],[\"result\",{\"1\":{\"55\":1,\"70\":1,\"73\":1,\"77\":2,\"264\":1,\"329\":1,\"340\":1}}],[\"results\",{\"1\":{\"18\":2,\"27\":2,\"105\":1,\"114\":2,\"118\":1,\"126\":1,\"130\":3,\"144\":2,\"170\":1,\"357\":2}}],[\"rescue\",{\"1\":{\"305\":1}}],[\"resized\",{\"1\":{\"138\":1}}],[\"resolved\",{\"1\":{\"134\":1}}],[\"resorting\",{\"1\":{\"132\":1}}],[\"resort\",{\"1\":{\"53\":1}}],[\"resembles\",{\"1\":{\"339\":1}}],[\"reserves\",{\"1\":{\"313\":1}}],[\"reserved\",{\"0\":{\"313\":1},\"1\":{\"130\":3,\"131\":2,\"133\":2,\"134\":1,\"135\":2,\"265\":2,\"313\":2,\"324\":1,\"340\":2}}],[\"resets\",{\"1\":{\"264\":1}}],[\"reset\",{\"1\":{\"110\":1,\"123\":2,\"259\":1,\"261\":2}}],[\"respecting\",{\"1\":{\"264\":1}}],[\"respectively\",{\"1\":{\"22\":1,\"123\":1}}],[\"respective\",{\"1\":{\"9\":1}}],[\"responsibilities\",{\"1\":{\"136\":1}}],[\"responsiveness\",{\"1\":{\"105\":1,\"123\":1}}],[\"realized\",{\"1\":{\"68\":1}}],[\"really\",{\"1\":{\"4\":1,\"69\":1,\"134\":1}}],[\"reasons\",{\"1\":{\"54\":1,\"62\":2,\"63\":1,\"72\":1,\"110\":1,\"136\":1}}],[\"reason\",{\"1\":{\"27\":1,\"136\":1,\"324\":1,\"331\":1}}],[\"ready\",{\"1\":{\"253\":1}}],[\"readme\",{\"1\":{\"136\":1}}],[\"readcloser\",{\"1\":{\"126\":1}}],[\"readarray\",{\"1\":{\"119\":1,\"136\":1}}],[\"readarraywithtype\",{\"1\":{\"105\":1,\"107\":1}}],[\"readable\",{\"1\":{\"41\":1,\"63\":2,\"64\":1,\"67\":1,\"68\":1,\"256\":2,\"259\":1,\"277\":1}}],[\"readability\",{\"1\":{\"6\":1,\"63\":1,\"68\":1,\"87\":1,\"136\":1}}],[\"readline\",{\"0\":{\"275\":1},\"1\":{\"101\":1,\"108\":1,\"110\":4,\"118\":1,\"123\":2,\"136\":1,\"142\":4,\"153\":1,\"158\":1,\"162\":3,\"273\":1,\"274\":3,\"275\":1}}],[\"reads\",{\"1\":{\"54\":3,\"72\":3,\"127\":1,\"265\":1,\"301\":1,\"347\":2}}],[\"reading\",{\"0\":{\"49\":1,\"52\":1,\"54\":1,\"58\":1,\"72\":1},\"1\":{\"14\":1,\"22\":1,\"52\":2,\"70\":1,\"75\":1,\"132\":1,\"252\":2}}],[\"read\",{\"0\":{\"5\":1,\"260\":1},\"1\":{\"3\":1,\"4\":1,\"12\":3,\"15\":1,\"16\":2,\"17\":1,\"21\":2,\"22\":1,\"25\":1,\"28\":3,\"29\":1,\"31\":1,\"32\":1,\"33\":1,\"34\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"41\":1,\"42\":1,\"43\":1,\"49\":1,\"52\":1,\"54\":7,\"55\":1,\"56\":2,\"57\":1,\"63\":3,\"64\":2,\"66\":1,\"67\":1,\"69\":2,\"70\":1,\"72\":7,\"73\":1,\"75\":1,\"93\":1,\"97\":1,\"98\":1,\"103\":1,\"107\":1,\"112\":1,\"127\":1,\"128\":1,\"130\":1,\"131\":2,\"142\":4,\"149\":1,\"157\":2,\"165\":1,\"182\":1,\"192\":1,\"193\":1,\"195\":1,\"264\":1,\"301\":2,\"305\":1,\"310\":2,\"330\":1,\"361\":1}}],[\"people\",{\"1\":{\"311\":1,\"346\":1}}],[\"perspective\",{\"1\":{\"286\":1}}],[\"persistent\",{\"1\":{\"262\":1,\"314\":2,\"338\":2,\"345\":1,\"348\":1}}],[\"personalities\",{\"0\":{\"50\":1,\"61\":1}}],[\"personal\",{\"1\":{\"47\":1,\"256\":1,\"286\":1}}],[\"person\",{\"1\":{\"39\":1,\"330\":1}}],[\"perhaps\",{\"1\":{\"64\":1}}],[\"perl\",{\"1\":{\"64\":1}}],[\"per\",{\"1\":{\"55\":1,\"73\":1,\"114\":1,\"128\":1,\"144\":1,\"243\":1,\"335\":1,\"336\":1,\"347\":1}}],[\"performance\",{\"1\":{\"62\":1,\"88\":1,\"95\":1,\"110\":4,\"121\":1,\"124\":1,\"136\":1}}],[\"performing\",{\"1\":{\"54\":1,\"72\":1}}],[\"perform\",{\"1\":{\"9\":1,\"54\":1,\"72\":1,\"357\":1}}],[\"physical\",{\"1\":{\"304\":1}}],[\"philosophy\",{\"1\":{\"304\":1}}],[\"philosophical\",{\"1\":{\"264\":1}}],[\"pkgbuild\",{\"1\":{\"249\":2}}],[\"p>\",{\"1\":{\"214\":1}}],[\"pty\",{\"1\":{\"138\":1}}],[\"p\",{\"1\":{\"123\":2,\"162\":1,\"253\":1,\"363\":2}}],[\"pwd\",{\"1\":{\"123\":2,\"141\":1,\"150\":1}}],[\"pwb\",{\"1\":{\"62\":1,\"67\":1}}],[\"pid\",{\"1\":{\"330\":2}}],[\"pinned\",{\"1\":{\"106\":1,\"115\":1}}],[\"pipefail\",{\"1\":{\"330\":1}}],[\"pipelining\",{\"1\":{\"266\":1}}],[\"pipelined\",{\"1\":{\"118\":1}}],[\"pipelines\",{\"1\":{\"66\":1,\"107\":1,\"123\":1,\"127\":1,\"129\":1,\"137\":1,\"279\":1,\"304\":2}}],[\"pipeline\",{\"0\":{\"302\":1},\"1\":{\"7\":1,\"24\":1,\"56\":1,\"63\":1,\"66\":1,\"109\":1,\"118\":1,\"123\":1,\"126\":2,\"127\":3,\"135\":1,\"265\":2,\"267\":2,\"277\":1,\"302\":4,\"303\":4,\"304\":5,\"318\":1,\"329\":2,\"332\":1,\"334\":3,\"335\":2,\"336\":2,\"337\":3,\"352\":1}}],[\"piped\",{\"1\":{\"165\":1}}],[\"pipe\",{\"0\":{\"336\":1},\"1\":{\"17\":1,\"21\":1,\"22\":1,\"119\":1,\"120\":2,\"127\":3,\"135\":1,\"136\":1,\"138\":1,\"277\":2,\"285\":2,\"299\":7,\"300\":1,\"301\":2,\"302\":1,\"306\":4,\"317\":1,\"330\":2,\"332\":1,\"337\":4}}],[\"pipes\",{\"0\":{\"21\":1,\"298\":1,\"305\":1},\"1\":{\"3\":1,\"4\":1,\"22\":2,\"55\":1,\"62\":1,\"73\":1,\"114\":2,\"118\":1,\"120\":2,\"126\":2,\"127\":1,\"285\":2,\"298\":1,\"299\":1,\"300\":2,\"304\":1,\"305\":3,\"306\":4,\"332\":2,\"337\":4}}],[\"piping\",{\"0\":{\"20\":1},\"1\":{\"3\":1,\"22\":1,\"166\":1}}],[\"ps\",{\"1\":{\"105\":1,\"330\":1}}],[\"python\",{\"1\":{\"64\":3,\"67\":1}}],[\"plugin\",{\"1\":{\"196\":1}}],[\"plugins\",{\"1\":{\"194\":1,\"287\":1}}],[\"plus\",{\"1\":{\"82\":1,\"95\":1,\"98\":1,\"101\":1,\"103\":2,\"112\":1,\"121\":1,\"180\":1}}],[\"please\",{\"1\":{\"63\":1,\"97\":1,\"98\":1,\"103\":1,\"112\":1,\"192\":1,\"195\":1,\"222\":1,\"231\":1,\"239\":1,\"241\":1,\"243\":1,\"244\":1,\"252\":1,\"253\":2,\"264\":1,\"266\":1,\"280\":1,\"282\":1,\"314\":1,\"315\":1,\"342\":2,\"345\":1,\"351\":1,\"365\":1}}],[\"plain\",{\"1\":{\"249\":1}}],[\"plan9\",{\"1\":{\"241\":6}}],[\"planned\",{\"1\":{\"123\":1}}],[\"plan\",{\"0\":{\"241\":1},\"1\":{\"94\":1,\"126\":1,\"205\":2,\"230\":1,\"231\":1,\"240\":1,\"253\":1}}],[\"playground\",{\"0\":{\"216\":1,\"217\":1},\"1\":{\"217\":2}}],[\"play\",{\"1\":{\"66\":1}}],[\"platforms\",{\"0\":{\"246\":1},\"1\":{\"240\":1,\"245\":1,\"246\":1,\"286\":1}}],[\"platform\",{\"1\":{\"56\":1,\"247\":1,\"253\":2}}],[\"placed\",{\"1\":{\"258\":1}}],[\"place\",{\"1\":{\"53\":1,\"105\":1,\"222\":1,\"310\":2}}],[\"places\",{\"1\":{\"6\":1,\"118\":1,\"136\":1}}],[\"porcelain\",{\"1\":{\"283\":1}}],[\"portion\",{\"1\":{\"351\":1}}],[\"portable\",{\"1\":{\"289\":1}}],[\"port\",{\"1\":{\"251\":1}}],[\"ported\",{\"1\":{\"58\":1}}],[\"potential\",{\"1\":{\"92\":1,\"93\":1,\"95\":1,\"110\":1,\"115\":1,\"119\":1,\"121\":1,\"128\":1,\"130\":1}}],[\"pointing\",{\"1\":{\"311\":1}}],[\"points\",{\"1\":{\"170\":1,\"286\":1}}],[\"pointer\",{\"1\":{\"126\":1}}],[\"point\",{\"1\":{\"66\":1,\"253\":1}}],[\"powerful\",{\"1\":{\"64\":1,\"66\":1,\"214\":2}}],[\"power\",{\"1\":{\"56\":1}}],[\"powershell\",{\"0\":{\"58\":1,\"66\":1},\"1\":{\"52\":1,\"55\":1,\"58\":5,\"59\":2,\"66\":10,\"73\":2}}],[\"popular\",{\"1\":{\"54\":1,\"72\":1}}],[\"position\",{\"1\":{\"177\":1}}],[\"positions\",{\"1\":{\"162\":1}}],[\"posix\",{\"1\":{\"4\":2,\"27\":1,\"66\":3,\"68\":2,\"120\":1,\"240\":2,\"253\":1,\"285\":1,\"306\":1,\"337\":1,\"347\":1}}],[\"possibly\",{\"1\":{\"132\":1}}],[\"possible\",{\"1\":{\"114\":2}}],[\"post\",{\"1\":{\"49\":1,\"52\":1,\"70\":1,\"128\":2,\"177\":1,\"181\":1}}],[\"push\",{\"1\":{\"134\":1}}],[\"putting\",{\"1\":{\"69\":1,\"128\":1}}],[\"put\",{\"1\":{\"66\":1,\"310\":1}}],[\"published\",{\"1\":{\"59\":1,\"69\":1,\"78\":1,\"101\":1,\"106\":1,\"108\":1,\"110\":1,\"115\":1,\"119\":1,\"124\":1,\"126\":1,\"128\":1,\"130\":1,\"132\":1,\"134\":1,\"136\":1,\"138\":1,\"144\":1,\"174\":1,\"178\":1,\"183\":1}}],[\"public\",{\"0\":{\"32\":1},\"1\":{\"3\":1,\"33\":1,\"222\":1,\"339\":1}}],[\"purely\",{\"1\":{\"21\":1,\"63\":1,\"118\":1}}],[\"pane\",{\"1\":{\"144\":1}}],[\"panics\",{\"1\":{\"166\":1}}],[\"panic\",{\"1\":{\"130\":2,\"162\":1,\"178\":1}}],[\"panicking\",{\"1\":{\"110\":1}}],[\"paste\",{\"1\":{\"363\":2}}],[\"pasting\",{\"1\":{\"274\":1}}],[\"past\",{\"1\":{\"136\":1,\"311\":1}}],[\"passing\",{\"1\":{\"66\":3,\"126\":1,\"136\":1,\"137\":1,\"258\":1,\"304\":1}}],[\"pass\",{\"1\":{\"63\":1,\"127\":1,\"136\":1,\"352\":1}}],[\"passed\",{\"1\":{\"8\":1,\"66\":1,\"123\":1,\"126\":1,\"130\":1,\"154\":1,\"157\":1,\"177\":1,\"261\":4,\"304\":1,\"328\":1}}],[\"passes\",{\"1\":{\"4\":1,\"55\":1,\"57\":1,\"58\":1,\"73\":1,\"75\":1,\"109\":1,\"126\":1,\"131\":1,\"332\":1}}],[\"pages\",{\"1\":{\"135\":1,\"137\":1,\"191\":2}}],[\"page\",{\"0\":{\"220\":1,\"221\":1,\"222\":1,\"223\":1},\"1\":{\"110\":1,\"126\":1,\"128\":1,\"134\":1,\"136\":1,\"144\":1,\"186\":1,\"188\":4,\"193\":1,\"213\":1,\"220\":1,\"221\":2,\"223\":2,\"231\":1,\"247\":1,\"304\":1},\"2\":{\"225\":1}}],[\"pattern\",{\"1\":{\"109\":2,\"128\":1,\"157\":1,\"168\":1,\"330\":3,\"357\":1}}],[\"path=\",{\"1\":{\"308\":1}}],[\"paths\",{\"0\":{\"311\":1},\"1\":{\"130\":1,\"142\":1,\"145\":1,\"311\":4,\"330\":2}}],[\"path\",{\"1\":{\"67\":1,\"111\":1,\"123\":1,\"130\":1,\"132\":1,\"136\":1,\"142\":1,\"145\":1,\"253\":1,\"270\":1,\"283\":1,\"287\":1,\"289\":1,\"295\":1,\"311\":5,\"324\":2,\"330\":3,\"331\":3}}],[\"pauses\",{\"1\":{\"334\":1}}],[\"paused\",{\"1\":{\"105\":1}}],[\"pause\",{\"1\":{\"105\":1,\"118\":1}}],[\"pairs\",{\"1\":{\"76\":2}}],[\"pain\",{\"1\":{\"63\":2}}],[\"parallel\",{\"1\":{\"334\":1,\"335\":1}}],[\"params\",{\"0\":{\"323\":1}}],[\"parameter3\",{\"1\":{\"300\":3}}],[\"parameter2\",{\"1\":{\"300\":3}}],[\"parameter1\",{\"1\":{\"300\":3}}],[\"parameter\",{\"1\":{\"22\":1,\"27\":1,\"41\":1,\"42\":1,\"128\":1,\"130\":2,\"150\":1,\"266\":3,\"300\":2,\"328\":2,\"352\":1}}],[\"parameters\",{\"1\":{\"6\":1,\"7\":1,\"8\":1,\"18\":1,\"27\":1,\"63\":1,\"117\":1,\"123\":1,\"124\":1,\"126\":2,\"130\":1,\"136\":1,\"144\":1,\"266\":5,\"322\":1,\"323\":1,\"328\":2,\"347\":1}}],[\"parsing\",{\"0\":{\"266\":1},\"1\":{\"110\":1,\"132\":1,\"144\":1,\"170\":1,\"178\":1,\"266\":1,\"285\":1,\"352\":1}}],[\"parse\",{\"1\":{\"56\":1,\"76\":1,\"141\":1}}],[\"parser\",{\"1\":{\"21\":1,\"87\":1,\"118\":1,\"119\":2,\"123\":1,\"126\":1,\"132\":1,\"134\":1,\"136\":2,\"138\":1,\"154\":1,\"266\":3}}],[\"parses\",{\"1\":{\"7\":2,\"18\":1}}],[\"parsed\",{\"1\":{\"7\":1,\"18\":1,\"150\":1,\"194\":1,\"266\":4,\"285\":1,\"352\":1}}],[\"parents\",{\"1\":{\"338\":1}}],[\"parenthesis\",{\"1\":{\"136\":1}}],[\"parentheses\",{\"1\":{\"27\":1}}],[\"parent\",{\"0\":{\"315\":1},\"1\":{\"92\":1,\"105\":1,\"130\":2,\"150\":1,\"301\":1,\"314\":1,\"315\":1}}],[\"partial\",{\"1\":{\"108\":1,\"157\":1,\"182\":1}}],[\"particular\",{\"1\":{\"77\":1}}],[\"particularly\",{\"1\":{\"63\":1,\"75\":1,\"277\":1,\"311\":1}}],[\"part\",{\"1\":{\"56\":1,\"62\":1,\"93\":1,\"128\":2,\"244\":2,\"254\":1,\"260\":2,\"270\":1,\"274\":1,\"295\":1}}],[\"party\",{\"0\":{\"342\":1},\"1\":{\"55\":1,\"56\":1,\"73\":1,\"268\":1}}],[\"packages\",{\"0\":{\"286\":1,\"287\":1,\"288\":1,\"292\":1},\"1\":{\"102\":2,\"109\":2,\"125\":2,\"128\":1,\"249\":1,\"253\":1,\"272\":2,\"286\":2,\"287\":3,\"289\":4,\"291\":2,\"292\":1,\"312\":2,\"329\":2}}],[\"package\",{\"0\":{\"248\":1},\"1\":{\"1\":1,\"102\":2,\"126\":1,\"128\":1,\"231\":1,\"245\":1,\"249\":2,\"252\":1,\"259\":1,\"272\":2,\"286\":2,\"287\":5,\"289\":3,\"291\":2,\"292\":1,\"293\":1,\"297\":2,\"309\":1,\"312\":2,\"351\":1}}],[\"practice\",{\"1\":{\"91\":1,\"132\":1}}],[\"practicalities\",{\"1\":{\"66\":1}}],[\"practical\",{\"1\":{\"8\":1,\"62\":1,\"64\":1}}],[\"precedents\",{\"1\":{\"311\":1}}],[\"precedence\",{\"1\":{\"179\":1}}],[\"prerequisites\",{\"1\":{\"252\":1,\"341\":1}}],[\"preload=\",{\"1\":{\"311\":1}}],[\"preload\",{\"0\":{\"308\":1},\"1\":{\"128\":1,\"178\":1,\"307\":1,\"311\":3}}],[\"presenting\",{\"1\":{\"138\":1}}],[\"present\",{\"1\":{\"128\":1,\"253\":1}}],[\"presses\",{\"1\":{\"365\":1}}],[\"press\",{\"1\":{\"105\":1,\"118\":1,\"277\":1,\"354\":1,\"357\":1,\"358\":1,\"362\":1,\"364\":1}}],[\"pressing\",{\"1\":{\"44\":1,\"45\":1,\"46\":1,\"274\":3,\"355\":1,\"362\":1}}],[\"prepend\",{\"1\":{\"126\":1,\"136\":1,\"137\":1}}],[\"predictable\",{\"1\":{\"114\":2}}],[\"pre>\",{\"1\":{\"114\":1,\"118\":1,\"123\":2}}],[\"prev\",{\"1\":{\"188\":1}}],[\"preview\",{\"1\":{\"138\":4,\"144\":1,\"274\":1}}],[\"previews\",{\"1\":{\"130\":1}}],[\"previously\",{\"1\":{\"101\":1,\"134\":1,\"158\":1,\"166\":1}}],[\"previous\",{\"0\":{\"365\":1},\"1\":{\"21\":2,\"60\":1,\"68\":1,\"79\":1,\"82\":1,\"84\":1,\"109\":2,\"124\":1,\"131\":2,\"146\":1,\"180\":1,\"265\":1,\"311\":1,\"332\":2,\"358\":1,\"363\":3}}],[\"prevent\",{\"1\":{\"108\":1,\"114\":1}}],[\"pre\",{\"0\":{\"247\":1},\"1\":{\"105\":1,\"110\":2,\"136\":1,\"154\":1,\"177\":1,\"181\":1,\"231\":1,\"245\":1,\"247\":1,\"253\":1,\"300\":1}}],[\"pretty\",{\"1\":{\"58\":1,\"126\":1,\"256\":1,\"347\":1}}],[\"prefer\",{\"1\":{\"284\":1,\"311\":1}}],[\"preferences\",{\"1\":{\"289\":1}}],[\"preference\",{\"1\":{\"256\":2,\"274\":1}}],[\"preferred\",{\"1\":{\"66\":1,\"102\":1,\"125\":1,\"136\":1,\"179\":1,\"231\":1,\"244\":2}}],[\"prefers\",{\"1\":{\"59\":2}}],[\"preface\",{\"0\":{\"53\":1},\"1\":{\"52\":1}}],[\"prefixing\",{\"1\":{\"264\":1,\"306\":1,\"329\":1}}],[\"prefixed\",{\"1\":{\"19\":1,\"22\":1,\"118\":2}}],[\"prefix\",{\"0\":{\"9\":1,\"264\":1},\"1\":{\"3\":1,\"9\":3,\"16\":1,\"108\":1,\"131\":1,\"177\":1,\"182\":1,\"264\":3,\"306\":1,\"319\":1,\"329\":1,\"331\":1}}],[\"pro\",{\"1\":{\"256\":1}}],[\"properly\",{\"1\":{\"142\":1}}],[\"properties\",{\"1\":{\"132\":1,\"142\":1}}],[\"projects\",{\"1\":{\"253\":1}}],[\"project\",{\"1\":{\"136\":1}}],[\"proxies\",{\"1\":{\"130\":1}}],[\"progressively\",{\"1\":{\"134\":1}}],[\"progress\",{\"1\":{\"128\":2}}],[\"program\",{\"1\":{\"62\":1,\"63\":1,\"66\":1}}],[\"programmatically\",{\"1\":{\"57\":1}}],[\"programming\",{\"1\":{\"21\":1,\"64\":1,\"66\":1,\"131\":1,\"184\":1,\"340\":1}}],[\"programs\",{\"1\":{\"16\":1,\"34\":1,\"66\":1,\"110\":1}}],[\"proc\",{\"1\":{\"123\":1,\"128\":1,\"130\":2}}],[\"processor\",{\"1\":{\"232\":1}}],[\"process=>operation\",{\"1\":{\"210\":1}}],[\"process\",{\"0\":{\"355\":1,\"361\":1},\"1\":{\"66\":1,\"105\":1,\"107\":1,\"110\":1,\"116\":1,\"123\":1,\"130\":1,\"137\":1,\"138\":1,\"210\":2,\"253\":1,\"265\":1,\"274\":2,\"299\":3,\"304\":4,\"330\":1,\"355\":1,\"361\":1}}],[\"processing\",{\"1\":{\"54\":2,\"72\":2}}],[\"processes\",{\"0\":{\"360\":1},\"1\":{\"22\":3,\"105\":1,\"107\":1,\"108\":1,\"114\":4,\"134\":1,\"136\":2,\"137\":1,\"299\":1,\"304\":1,\"305\":1,\"306\":1,\"360\":3}}],[\"proof\",{\"1\":{\"110\":1}}],[\"profiling\",{\"1\":{\"108\":1}}],[\"profile=\",{\"1\":{\"311\":1}}],[\"profile`\",{\"1\":{\"128\":1}}],[\"profile\",{\"0\":{\"307\":1,\"310\":1},\"1\":{\"104\":1,\"108\":1,\"109\":1,\"110\":1,\"111\":1,\"113\":1,\"123\":3,\"125\":1,\"126\":4,\"128\":1,\"178\":2,\"262\":2,\"263\":1,\"307\":2,\"308\":3,\"310\":3,\"311\":4,\"345\":2,\"348\":2,\"352\":1}}],[\"profiles\",{\"1\":{\"62\":1,\"108\":1,\"178\":1,\"268\":1,\"310\":1}}],[\"prompts\",{\"1\":{\"136\":1,\"142\":1}}],[\"prompted\",{\"1\":{\"134\":1}}],[\"prompt\",{\"1\":{\"85\":1,\"108\":2,\"110\":1,\"118\":1,\"123\":4,\"130\":1,\"134\":1,\"136\":1,\"140\":1,\"177\":4,\"181\":2,\"182\":1,\"274\":1,\"281\":2,\"284\":1,\"356\":1,\"360\":1}}],[\"provides\",{\"1\":{\"196\":1,\"264\":1,\"275\":1,\"286\":1,\"354\":1}}],[\"provide\",{\"1\":{\"110\":1,\"281\":1}}],[\"provided\",{\"1\":{\"66\":1}}],[\"proverbial\",{\"1\":{\"73\":1}}],[\"productivity\",{\"1\":{\"63\":1,\"274\":1}}],[\"productive\",{\"1\":{\"55\":1,\"73\":1}}],[\"produces\",{\"1\":{\"130\":1,\"132\":1,\"283\":1}}],[\"produced\",{\"1\":{\"69\":1,\"134\":1}}],[\"produce\",{\"1\":{\"14\":1,\"138\":1}}],[\"problem\",{\"1\":{\"53\":1,\"55\":1,\"63\":1,\"64\":1,\"69\":1,\"73\":1,\"136\":1,\"150\":1}}],[\"problems\",{\"0\":{\"350\":1},\"1\":{\"18\":2,\"36\":1,\"37\":1,\"64\":1,\"77\":1}}],[\"protect\",{\"1\":{\"28\":1}}],[\"primitive\",{\"1\":{\"107\":1,\"116\":1,\"168\":1,\"330\":1}}],[\"primary\",{\"1\":{\"9\":1}}],[\"priority\",{\"1\":{\"87\":1,\"136\":1}}],[\"prior\",{\"1\":{\"63\":1,\"311\":1}}],[\"principle\",{\"1\":{\"27\":1}}],[\"printing\",{\"1\":{\"317\":1,\"330\":5}}],[\"printf\",{\"1\":{\"123\":1,\"125\":1}}],[\"printable\",{\"1\":{\"108\":1}}],[\"printed\",{\"1\":{\"54\":1,\"72\":1}}],[\"prints\",{\"1\":{\"54\":1,\"72\":1,\"130\":1}}],[\"print\",{\"0\":{\"5\":1},\"1\":{\"3\":1,\"263\":3}}],[\"privates\",{\"1\":{\"134\":1}}],[\"private\",{\"0\":{\"33\":1},\"1\":{\"3\":1,\"33\":1,\"42\":1,\"135\":2,\"150\":1,\"290\":1,\"297\":2,\"329\":2,\"339\":1,\"340\":2}}],[\"eight\",{\"1\":{\"365\":2}}],[\"either\",{\"1\":{\"22\":1,\"28\":1,\"126\":1,\"300\":1,\"339\":1,\"361\":1,\"363\":1}}],[\"eot\",{\"1\":{\"259\":1}}],[\"eof\",{\"1\":{\"259\":1,\"356\":1}}],[\"e=>end\",{\"1\":{\"210\":1}}],[\"echarts\",{\"0\":{\"209\":1},\"1\":{\"209\":1}}],[\"echo\",{\"1\":{\"7\":1,\"8\":1,\"13\":2,\"14\":1,\"54\":4,\"56\":2,\"57\":2,\"68\":6,\"72\":4,\"76\":2,\"108\":1,\"130\":5,\"330\":19,\"365\":2}}],[\"esc\",{\"0\":{\"362\":1},\"1\":{\"162\":1,\"177\":1,\"259\":1,\"274\":2,\"354\":1,\"357\":1,\"358\":1,\"362\":1}}],[\"escaping\",{\"1\":{\"66\":1}}],[\"escaped\",{\"1\":{\"123\":1,\"126\":1}}],[\"escape\",{\"0\":{\"262\":1,\"344\":1},\"1\":{\"45\":1,\"123\":1,\"125\":1,\"144\":1,\"258\":2,\"259\":2,\"267\":1,\"285\":1,\"344\":1,\"352\":1}}],[\"editor\",{\"1\":{\"362\":1,\"363\":1,\"364\":2}}],[\"editing\",{\"0\":{\"364\":1},\"1\":{\"274\":1,\"362\":1}}],[\"edit\",{\"1\":{\"188\":1,\"270\":1,\"295\":1}}],[\"ed\",{\"1\":{\"144\":1,\"150\":1}}],[\"edge\",{\"1\":{\"105\":1,\"128\":1,\"130\":1}}],[\"et\",{\"1\":{\"110\":1,\"122\":1,\"123\":1,\"128\":1,\"136\":1,\"154\":1,\"177\":1,\"266\":1,\"278\":1,\"310\":1}}],[\"etc\",{\"1\":{\"42\":1,\"105\":1,\"126\":1,\"128\":2,\"130\":1,\"134\":1,\"136\":1,\"154\":1,\"271\":1,\"293\":1,\"296\":1,\"310\":2,\"311\":1}}],[\"effects\",{\"1\":{\"259\":1}}],[\"effect\",{\"1\":{\"118\":1}}],[\"effectively\",{\"1\":{\"360\":1}}],[\"effective\",{\"1\":{\"75\":1}}],[\"efficiently\",{\"1\":{\"59\":1}}],[\"efficient\",{\"1\":{\"6\":1}}],[\"e\",{\"1\":{\"75\":1,\"136\":1,\"222\":2,\"363\":2}}],[\"eq\",{\"1\":{\"68\":1,\"330\":1}}],[\"equal\",{\"1\":{\"264\":1}}],[\"equally\",{\"1\":{\"63\":1}}],[\"equivalent\",{\"1\":{\"10\":1,\"22\":1,\"39\":1,\"57\":1,\"66\":1,\"70\":1,\"139\":1,\"300\":1,\"330\":1,\"347\":1}}],[\"emergency\",{\"1\":{\"360\":1}}],[\"emendable\",{\"1\":{\"27\":1}}],[\"embed\",{\"1\":{\"259\":1}}],[\"empty\",{\"1\":{\"138\":1,\"162\":1,\"271\":1,\"296\":1,\"308\":1}}],[\"emphasis\",{\"1\":{\"68\":1}}],[\"emulators\",{\"1\":{\"244\":1,\"365\":1}}],[\"emulator\",{\"1\":{\"130\":1}}],[\"emitted\",{\"1\":{\"123\":1}}],[\"elfish\",{\"1\":{\"69\":1}}],[\"element\",{\"1\":{\"57\":1,\"77\":3,\"107\":1,\"118\":1,\"126\":1,\"132\":1,\"133\":3,\"137\":1,\"272\":2,\"330\":6,\"332\":3}}],[\"elements\",{\"1\":{\"56\":1,\"105\":2,\"107\":1,\"330\":4}}],[\"elses\",{\"1\":{\"291\":1}}],[\"elsewhere\",{\"1\":{\"266\":1}}],[\"else\",{\"1\":{\"36\":2,\"37\":1,\"68\":3,\"130\":2,\"336\":1}}],[\"evolution\",{\"1\":{\"64\":1}}],[\"ever\",{\"1\":{\"110\":1,\"124\":1}}],[\"everywhere\",{\"1\":{\"132\":1}}],[\"every\",{\"1\":{\"110\":1,\"123\":1,\"144\":1,\"268\":1,\"293\":1,\"336\":1}}],[\"everyone\",{\"1\":{\"63\":1,\"256\":1}}],[\"everything\",{\"1\":{\"27\":1,\"55\":2,\"66\":1,\"73\":2,\"134\":1,\"305\":1}}],[\"events\",{\"1\":{\"130\":1,\"181\":1,\"182\":1,\"271\":1,\"296\":1,\"339\":1}}],[\"event\",{\"1\":{\"130\":4,\"131\":2,\"138\":1,\"181\":1,\"184\":2,\"268\":1,\"293\":1,\"340\":2}}],[\"eventually\",{\"1\":{\"67\":1,\"91\":1,\"132\":2}}],[\"even\",{\"1\":{\"53\":1,\"63\":1,\"76\":1,\"85\":1,\"126\":1,\"132\":1,\"140\":1,\"154\":1,\"157\":1,\"268\":2,\"270\":1,\"282\":1,\"295\":1,\"302\":1,\"305\":1}}],[\"evaluate\",{\"1\":{\"111\":1,\"127\":1,\"329\":1,\"340\":1}}],[\"evaluation\",{\"1\":{\"7\":1}}],[\"eval\",{\"0\":{\"5\":1},\"1\":{\"3\":1,\"136\":1,\"348\":2}}],[\"err>\",{\"1\":{\"300\":1}}],[\"err\",{\"1\":{\"22\":2,\"42\":1,\"126\":1,\"263\":1,\"330\":1}}],[\"erroring\",{\"1\":{\"132\":1,\"136\":1}}],[\"errors\",{\"1\":{\"92\":1,\"109\":1,\"114\":2,\"130\":1,\"135\":1,\"136\":2,\"157\":1,\"162\":1,\"178\":2,\"280\":1,\"305\":1,\"330\":1,\"332\":1,\"337\":1,\"341\":1}}],[\"error\",{\"0\":{\"351\":1},\"1\":{\"14\":2,\"22\":1,\"90\":1,\"95\":1,\"109\":1,\"110\":1,\"114\":1,\"118\":2,\"121\":1,\"122\":1,\"123\":1,\"130\":1,\"134\":2,\"135\":1,\"136\":1,\"142\":1,\"144\":1,\"157\":2,\"170\":1,\"174\":2,\"183\":1,\"303\":1,\"332\":1,\"337\":1,\"351\":2}}],[\"egmurex\",{\"1\":{\"253\":1}}],[\"egrep\",{\"1\":{\"136\":2}}],[\"eg\",{\"1\":{\"15\":1,\"28\":1,\"42\":1,\"77\":1,\"105\":2,\"108\":3,\"109\":3,\"110\":1,\"119\":1,\"123\":2,\"126\":5,\"128\":1,\"130\":7,\"136\":5,\"142\":6,\"150\":1,\"154\":1,\"166\":1,\"178\":1,\"258\":1,\"266\":3,\"302\":1,\"308\":2,\"311\":1,\"330\":19,\"331\":2,\"334\":2,\"336\":1,\"347\":1,\"349\":1,\"357\":3,\"363\":1}}],[\"enabling\",{\"0\":{\"262\":1}}],[\"enables\",{\"1\":{\"105\":1}}],[\"enabled\",{\"1\":{\"101\":2,\"110\":1,\"128\":1,\"130\":1,\"134\":1,\"136\":4,\"138\":5,\"262\":1,\"274\":3,\"284\":2,\"341\":1,\"344\":1,\"345\":4}}],[\"enable\",{\"0\":{\"345\":1},\"1\":{\"86\":2,\"102\":1,\"105\":1,\"109\":1,\"110\":1,\"123\":2,\"138\":2,\"255\":1,\"275\":1,\"280\":1,\"285\":1,\"341\":1,\"345\":1}}],[\"en\",{\"0\":{\"351\":1},\"1\":{\"244\":1,\"351\":3}}],[\"enrich\",{\"1\":{\"195\":1}}],[\"ensure\",{\"1\":{\"126\":1,\"253\":1,\"286\":2}}],[\"enough\",{\"1\":{\"126\":1,\"346\":1}}],[\"env\",{\"1\":{\"114\":1}}],[\"environment\",{\"1\":{\"63\":1,\"66\":1,\"110\":1,\"286\":1}}],[\"environments\",{\"1\":{\"49\":1,\"52\":1,\"59\":1,\"70\":1}}],[\"environmental\",{\"0\":{\"16\":1},\"1\":{\"3\":1,\"16\":3,\"86\":1,\"114\":1,\"138\":1,\"166\":1,\"252\":1,\"308\":2,\"311\":1,\"312\":1,\"324\":1,\"330\":1,\"331\":1,\"364\":1}}],[\"enjoy\",{\"1\":{\"64\":1}}],[\"enforced\",{\"1\":{\"63\":1}}],[\"entire\",{\"1\":{\"134\":2,\"177\":1,\"335\":1,\"336\":1}}],[\"entirely\",{\"1\":{\"63\":1,\"253\":1,\"305\":1}}],[\"enter\",{\"1\":{\"130\":1}}],[\"entering\",{\"1\":{\"63\":1}}],[\"enhancement\",{\"0\":{\"195\":1,\"196\":1,\"206\":1}}],[\"enhance\",{\"0\":{\"191\":1},\"1\":{\"59\":1,\"186\":1,\"196\":1,\"213\":1}}],[\"encounter\",{\"1\":{\"241\":1}}],[\"encoding\",{\"1\":{\"66\":2}}],[\"encapsulation\",{\"1\":{\"142\":1}}],[\"encapsulated\",{\"1\":{\"150\":1,\"178\":1}}],[\"encapsulate\",{\"1\":{\"27\":1}}],[\"enclose\",{\"1\":{\"18\":1}}],[\"ending\",{\"1\":{\"130\":1}}],[\"ends\",{\"1\":{\"123\":1}}],[\"ended\",{\"1\":{\"63\":1,\"75\":1,\"128\":1}}],[\"endpoints\",{\"1\":{\"105\":1}}],[\"endpoint\",{\"1\":{\"22\":1}}],[\"end\",{\"0\":{\"356\":1},\"1\":{\"13\":1,\"42\":1,\"56\":1,\"66\":1,\"68\":1,\"73\":1,\"118\":1,\"122\":1,\"123\":1,\"137\":1,\"149\":1,\"177\":1,\"210\":1,\"211\":3,\"222\":1,\"259\":2,\"318\":1,\"336\":1,\"352\":1,\"356\":1,\"360\":1,\"363\":5}}],[\"earworm\",{\"1\":{\"75\":1}}],[\"early\",{\"1\":{\"62\":2}}],[\"earlier\",{\"1\":{\"57\":1,\"66\":1}}],[\"eat\",{\"1\":{\"73\":1}}],[\"easier\",{\"1\":{\"73\":1,\"85\":1,\"90\":1,\"123\":1,\"124\":1,\"126\":1,\"134\":1,\"140\":1,\"153\":1,\"157\":1,\"287\":1,\"290\":1}}],[\"easiest\",{\"1\":{\"56\":1,\"289\":1}}],[\"easily\",{\"1\":{\"38\":1,\"105\":1,\"123\":1,\"136\":1,\"191\":1}}],[\"easy\",{\"0\":{\"1\":1},\"1\":{\"49\":1,\"52\":1,\"53\":1,\"55\":1,\"59\":1,\"70\":1,\"73\":1,\"76\":1,\"252\":1,\"286\":4,\"292\":1,\"351\":1}}],[\"each\",{\"1\":{\"9\":1,\"54\":5,\"72\":5,\"75\":1,\"77\":1,\"105\":1,\"109\":1,\"110\":2,\"128\":1,\"134\":1,\"135\":1,\"193\":1,\"260\":1,\"264\":1,\"266\":1,\"287\":1,\"304\":1,\"305\":1,\"332\":1,\"336\":1,\"337\":1}}],[\"exe\",{\"0\":{\"324\":1},\"1\":{\"128\":1,\"239\":3,\"253\":1}}],[\"execs\",{\"1\":{\"110\":1}}],[\"exec\",{\"1\":{\"34\":4,\"110\":1,\"118\":1,\"177\":1,\"179\":1}}],[\"executing\",{\"1\":{\"136\":1,\"138\":1,\"304\":1,\"331\":1,\"334\":1}}],[\"execution\",{\"0\":{\"40\":1},\"1\":{\"3\":1,\"41\":1,\"42\":1,\"137\":1,\"307\":1,\"361\":2}}],[\"executable\",{\"1\":{\"34\":1,\"62\":1,\"105\":1,\"113\":1,\"144\":1,\"179\":1,\"244\":1,\"253\":1,\"327\":1}}],[\"executables\",{\"0\":{\"30\":1,\"34\":1},\"1\":{\"3\":2,\"34\":1,\"62\":1,\"128\":1,\"283\":1}}],[\"executes\",{\"1\":{\"266\":1}}],[\"executed\",{\"1\":{\"8\":1,\"105\":1,\"177\":1,\"266\":4,\"304\":1,\"333\":1,\"334\":1}}],[\"execute\",{\"1\":{\"7\":1,\"70\":1,\"126\":1,\"179\":1,\"266\":1,\"329\":1,\"340\":1}}],[\"extra\",{\"1\":{\"76\":1,\"105\":1}}],[\"extendability\",{\"0\":{\"290\":1}}],[\"extends\",{\"1\":{\"196\":1}}],[\"extend\",{\"1\":{\"67\":1,\"286\":1}}],[\"extended\",{\"1\":{\"62\":1,\"63\":1,\"195\":1,\"255\":1,\"286\":1}}],[\"extensions\",{\"1\":{\"128\":2,\"130\":1,\"194\":1,\"195\":2,\"286\":1}}],[\"extension\",{\"0\":{\"194\":1},\"1\":{\"17\":1,\"62\":1,\"299\":1,\"330\":1}}],[\"external\",{\"0\":{\"34\":1,\"255\":1},\"1\":{\"3\":1,\"34\":2,\"62\":1,\"101\":1,\"118\":3,\"245\":1,\"255\":1}}],[\"exhibit\",{\"1\":{\"42\":1}}],[\"excerpt\",{\"1\":{\"220\":1}}],[\"exceptions\",{\"1\":{\"178\":1}}],[\"exception\",{\"1\":{\"138\":1}}],[\"except\",{\"1\":{\"16\":1,\"33\":1,\"57\":1,\"110\":1,\"335\":1,\"357\":1}}],[\"exclusion\",{\"1\":{\"136\":1}}],[\"exclude\",{\"1\":{\"9\":1}}],[\"exciting\",{\"1\":{\"69\":1}}],[\"excuse\",{\"1\":{\"63\":1,\"75\":1}}],[\"exactly\",{\"1\":{\"8\":1,\"21\":1,\"58\":1}}],[\"example=before\",{\"1\":{\"181\":1}}],[\"examples\",{\"0\":{\"303\":1},\"1\":{\"27\":1,\"28\":1,\"57\":1,\"63\":1,\"74\":1}}],[\"example\",{\"1\":{\"7\":1,\"9\":1,\"18\":1,\"31\":1,\"34\":1,\"42\":2,\"54\":4,\"55\":2,\"56\":1,\"57\":1,\"62\":1,\"63\":4,\"66\":1,\"72\":4,\"73\":2,\"77\":2,\"126\":1,\"165\":2,\"243\":1,\"260\":1,\"264\":1,\"266\":5,\"274\":3,\"277\":1,\"280\":1,\"289\":1,\"303\":4,\"314\":2,\"322\":3,\"323\":2,\"328\":1,\"338\":5,\"341\":1,\"347\":1,\"351\":1,\"365\":1}}],[\"exists\",{\"1\":{\"123\":1,\"135\":2,\"332\":2}}],[\"existed\",{\"1\":{\"110\":1}}],[\"exist\",{\"1\":{\"14\":1,\"15\":1,\"43\":1,\"68\":1,\"128\":1,\"130\":2,\"261\":2}}],[\"existing\",{\"1\":{\"4\":2,\"73\":1,\"103\":1,\"104\":1,\"112\":1,\"113\":1,\"165\":1,\"244\":1,\"275\":1}}],[\"exited\",{\"1\":{\"177\":1}}],[\"exitnum\",{\"1\":{\"157\":1,\"330\":1}}],[\"exits\",{\"1\":{\"109\":1,\"135\":1,\"332\":1,\"335\":1,\"336\":1,\"337\":1}}],[\"exit\",{\"0\":{\"43\":1},\"1\":{\"3\":1,\"42\":2,\"43\":1,\"114\":1,\"118\":2,\"136\":1,\"265\":1,\"330\":1,\"335\":2,\"336\":2,\"356\":1}}],[\"expr\",{\"1\":{\"136\":1,\"137\":1}}],[\"expression\",{\"1\":{\"7\":2,\"34\":1,\"144\":1,\"331\":1}}],[\"expressions\",{\"0\":{\"7\":1},\"1\":{\"3\":1,\"7\":3,\"12\":1,\"14\":1,\"17\":1,\"53\":1,\"57\":1,\"75\":1,\"136\":2,\"137\":1,\"138\":1,\"142\":2,\"330\":1,\"357\":1}}],[\"exposes\",{\"1\":{\"118\":1,\"134\":1}}],[\"export\",{\"1\":{\"16\":1,\"142\":1,\"308\":1,\"312\":1,\"330\":3,\"331\":1}}],[\"expensive\",{\"1\":{\"136\":1}}],[\"expect\",{\"1\":{\"168\":1,\"177\":1,\"240\":1,\"275\":1}}],[\"expects\",{\"1\":{\"168\":1,\"279\":1}}],[\"expected\",{\"1\":{\"118\":1,\"162\":1,\"166\":1,\"178\":1}}],[\"expectations\",{\"1\":{\"66\":1}}],[\"expectation\",{\"1\":{\"7\":1,\"132\":1}}],[\"experimental\",{\"1\":{\"86\":3,\"91\":1,\"130\":1,\"132\":4,\"138\":6,\"144\":1,\"239\":1,\"240\":2,\"244\":1,\"246\":1}}],[\"experiences\",{\"1\":{\"275\":1}}],[\"experienced\",{\"1\":{\"253\":1}}],[\"experience\",{\"1\":{\"85\":1,\"101\":1,\"105\":1,\"130\":1,\"140\":1,\"239\":1,\"241\":1,\"244\":1,\"256\":1}}],[\"explicit\",{\"1\":{\"124\":1}}],[\"explicitly\",{\"1\":{\"58\":1}}],[\"explore\",{\"1\":{\"49\":1,\"50\":1,\"52\":1,\"53\":1,\"55\":1,\"61\":1,\"70\":1}}],[\"expands\",{\"1\":{\"18\":1}}],[\"expanded\",{\"1\":{\"18\":1,\"19\":1,\"29\":1,\"136\":1}}],[\"expand\",{\"1\":{\"4\":1,\"27\":1,\"29\":1,\"131\":1,\"136\":3,\"145\":1,\"329\":2,\"332\":2}}],[\"expansion\",{\"0\":{\"29\":1},\"1\":{\"3\":1,\"28\":2,\"29\":1}}],[\"oof\",{\"1\":{\"338\":2}}],[\"obviously\",{\"1\":{\"256\":1}}],[\"objects\",{\"1\":{\"39\":1,\"55\":2,\"56\":1,\"58\":1,\"66\":3,\"73\":2,\"76\":1,\"109\":3,\"136\":1,\"142\":1,\"143\":1,\"144\":1,\"330\":2}}],[\"object\",{\"1\":{\"21\":2,\"56\":1,\"105\":2,\"118\":2,\"132\":1,\"142\":2,\"145\":1,\"168\":1,\"299\":1,\"330\":7,\"352\":1}}],[\"occupy\",{\"1\":{\"338\":1}}],[\"occasionally\",{\"1\":{\"136\":1}}],[\"october\",{\"1\":{\"75\":2}}],[\"oss\",{\"1\":{\"351\":1}}],[\"os\",{\"1\":{\"110\":1,\"178\":1,\"243\":2,\"299\":1,\"342\":2}}],[\"ostensibly\",{\"1\":{\"6\":1}}],[\"oil\",{\"0\":{\"67\":1},\"1\":{\"67\":7,\"69\":1}}],[\"okay\",{\"1\":{\"66\":1}}],[\"overridden\",{\"1\":{\"324\":1}}],[\"overriding\",{\"0\":{\"311\":1},\"1\":{\"311\":1}}],[\"overall\",{\"1\":{\"256\":1}}],[\"overdue\",{\"1\":{\"138\":1}}],[\"overwrite\",{\"1\":{\"130\":1,\"134\":1,\"166\":1,\"338\":1}}],[\"overwriting\",{\"1\":{\"114\":2,\"135\":1,\"332\":1}}],[\"overview\",{\"0\":{\"274\":1},\"1\":{\"109\":1,\"127\":1,\"135\":1,\"265\":1,\"266\":1,\"267\":2,\"273\":1,\"285\":1,\"302\":1,\"306\":1,\"329\":1,\"333\":1,\"337\":1,\"352\":1}}],[\"overhauled\",{\"1\":{\"101\":1}}],[\"overhaul\",{\"1\":{\"87\":1,\"136\":1}}],[\"over\",{\"1\":{\"59\":2,\"63\":3,\"66\":1,\"68\":1,\"87\":1,\"136\":2}}],[\"o\",{\"1\":{\"50\":1,\"330\":1}}],[\"older\",{\"1\":{\"55\":1,\"73\":1,\"87\":1,\"91\":1,\"128\":1,\"132\":1,\"136\":1,\"232\":1}}],[\"old\",{\"1\":{\"39\":1,\"53\":1,\"68\":1,\"130\":1,\"330\":1}}],[\"owned\",{\"1\":{\"360\":1}}],[\"owners\",{\"1\":{\"150\":1}}],[\"own\",{\"0\":{\"347\":1},\"1\":{\"22\":1,\"33\":1,\"55\":1,\"63\":1,\"123\":1,\"136\":1,\"256\":1,\"268\":1,\"274\":1,\"277\":1,\"286\":1,\"287\":2,\"311\":1,\"347\":1,\"348\":1}}],[\"outside\",{\"1\":{\"105\":1,\"314\":1,\"338\":4}}],[\"out>\",{\"1\":{\"22\":2,\"330\":1}}],[\"outputting\",{\"1\":{\"123\":1,\"128\":1}}],[\"outputs\",{\"1\":{\"109\":1,\"111\":1,\"133\":2,\"135\":1,\"136\":1,\"137\":2,\"272\":1,\"332\":3}}],[\"output\",{\"1\":{\"21\":1,\"22\":2,\"60\":1,\"75\":1,\"77\":1,\"79\":1,\"105\":2,\"118\":1,\"126\":1,\"128\":1,\"136\":1,\"304\":1,\"305\":1,\"330\":1,\"347\":1}}],[\"out\",{\"1\":{\"13\":1,\"15\":3,\"22\":2,\"23\":2,\"25\":2,\"26\":1,\"37\":4,\"38\":1,\"39\":1,\"41\":1,\"42\":1,\"57\":4,\"63\":2,\"73\":1,\"123\":2,\"136\":1,\"141\":3,\"162\":1,\"261\":2,\"263\":1,\"265\":1,\"266\":4,\"281\":1,\"283\":1,\"303\":1,\"305\":1,\"314\":1,\"322\":1,\"323\":1,\"330\":15,\"338\":2,\"347\":1}}],[\"ourselves\",{\"1\":{\"243\":1}}],[\"our\",{\"1\":{\"6\":1,\"10\":1,\"56\":2,\"67\":1,\"244\":1,\"274\":1}}],[\"orforeach\",{\"1\":{\"314\":1,\"338\":1}}],[\"orfalse\",{\"1\":{\"264\":1}}],[\"order\",{\"1\":{\"134\":1,\"144\":1,\"170\":1,\"179\":1,\"260\":1,\"307\":1,\"311\":1}}],[\"ordering\",{\"1\":{\"130\":1}}],[\"org\",{\"1\":{\"101\":4,\"249\":2}}],[\"origin\",{\"1\":{\"283\":1}}],[\"originating\",{\"1\":{\"168\":1}}],[\"original\",{\"1\":{\"127\":1,\"136\":1,\"286\":1,\"352\":1}}],[\"originallyfork\",{\"1\":{\"62\":1}}],[\"originally\",{\"1\":{\"58\":1,\"62\":2,\"63\":1,\"68\":1}}],[\"orientated\",{\"1\":{\"21\":1,\"118\":1}}],[\"oranges\",{\"1\":{\"7\":1,\"14\":1,\"38\":1}}],[\"or\",{\"1\":{\"7\":1,\"8\":1,\"13\":2,\"16\":1,\"17\":2,\"18\":1,\"22\":5,\"38\":1,\"54\":1,\"55\":2,\"56\":1,\"59\":2,\"60\":2,\"62\":1,\"63\":1,\"67\":1,\"72\":1,\"73\":2,\"76\":1,\"79\":1,\"86\":1,\"92\":1,\"102\":1,\"105\":3,\"109\":3,\"111\":1,\"118\":1,\"123\":2,\"125\":3,\"126\":6,\"127\":2,\"128\":2,\"129\":1,\"130\":2,\"131\":2,\"132\":1,\"133\":1,\"134\":3,\"135\":2,\"136\":3,\"137\":3,\"138\":1,\"141\":1,\"145\":1,\"179\":3,\"184\":1,\"191\":1,\"231\":1,\"246\":1,\"252\":1,\"253\":1,\"254\":1,\"255\":1,\"264\":1,\"265\":5,\"266\":1,\"267\":2,\"268\":2,\"277\":1,\"285\":2,\"287\":1,\"289\":1,\"291\":1,\"299\":1,\"300\":1,\"305\":1,\"306\":1,\"310\":1,\"311\":1,\"317\":1,\"318\":1,\"319\":1,\"329\":1,\"330\":1,\"331\":1,\"332\":2,\"333\":2,\"334\":1,\"335\":1,\"336\":2,\"340\":1,\"342\":1,\"345\":1,\"348\":1,\"352\":2,\"357\":3,\"361\":1}}],[\"onprompt\",{\"1\":{\"181\":1,\"182\":1,\"184\":1}}],[\"onfilesystemchange\",{\"1\":{\"130\":2}}],[\"onkeypress\",{\"1\":{\"130\":1,\"181\":1}}],[\"oncommandcompletion\",{\"1\":{\"130\":1,\"138\":1}}],[\"once\",{\"1\":{\"50\":1,\"61\":1,\"63\":2,\"64\":2,\"66\":1,\"69\":2,\"363\":1}}],[\"only\",{\"1\":{\"21\":1,\"28\":1,\"33\":1,\"61\":1,\"62\":1,\"64\":1,\"68\":1,\"75\":2,\"109\":1,\"110\":1,\"114\":2,\"118\":2,\"123\":2,\"128\":5,\"130\":1,\"131\":1,\"134\":1,\"169\":1,\"266\":3,\"299\":1,\"308\":2,\"310\":1,\"311\":1,\"330\":2,\"331\":1,\"332\":1,\"334\":1,\"347\":1,\"357\":2}}],[\"on\",{\"1\":{\"6\":1,\"8\":1,\"27\":1,\"41\":1,\"54\":2,\"55\":3,\"56\":2,\"57\":1,\"58\":1,\"62\":1,\"66\":2,\"67\":1,\"68\":1,\"70\":1,\"72\":2,\"73\":3,\"78\":1,\"82\":1,\"83\":1,\"84\":2,\"88\":1,\"90\":1,\"102\":1,\"109\":2,\"110\":6,\"111\":1,\"114\":2,\"118\":2,\"120\":1,\"125\":2,\"126\":1,\"128\":2,\"130\":1,\"132\":1,\"134\":4,\"135\":1,\"136\":2,\"144\":1,\"146\":2,\"162\":1,\"170\":1,\"175\":1,\"177\":1,\"178\":1,\"180\":1,\"188\":1,\"232\":1,\"239\":1,\"240\":1,\"241\":1,\"244\":3,\"252\":1,\"253\":4,\"255\":1,\"263\":1,\"264\":1,\"265\":2,\"272\":1,\"275\":1,\"277\":1,\"285\":1,\"289\":1,\"293\":1,\"299\":1,\"304\":1,\"305\":1,\"307\":1,\"311\":1,\"314\":1,\"329\":1,\"332\":1,\"336\":1,\"337\":1,\"340\":1,\"351\":1,\"352\":2,\"356\":1,\"365\":1}}],[\"ones\",{\"1\":{\"256\":1,\"265\":1,\"349\":1}}],[\"one\",{\"1\":{\"6\":1,\"54\":2,\"57\":1,\"66\":1,\"67\":1,\"72\":2,\"75\":1,\"82\":1,\"97\":1,\"107\":1,\"110\":1,\"112\":1,\"113\":1,\"123\":2,\"130\":1,\"180\":1,\"211\":2,\"243\":1,\"265\":1,\"275\":1,\"279\":1,\"287\":1,\"299\":1,\"304\":1,\"305\":2}}],[\"opportunity\",{\"1\":{\"123\":1}}],[\"opposing\",{\"0\":{\"63\":1},\"1\":{\"50\":1,\"61\":1}}],[\"opposite\",{\"1\":{\"9\":1}}],[\"opens\",{\"1\":{\"363\":1}}],[\"openbsd\",{\"0\":{\"237\":1},\"1\":{\"230\":1,\"237\":4}}],[\"openagent\",{\"1\":{\"123\":1,\"125\":1,\"130\":1,\"131\":1,\"340\":1}}],[\"open\",{\"1\":{\"102\":3,\"125\":2,\"126\":1,\"128\":2,\"177\":1,\"179\":2,\"303\":1,\"339\":1}}],[\"operator\",{\"1\":{\"68\":1,\"109\":2,\"131\":2,\"134\":1,\"154\":1,\"157\":1,\"161\":1,\"264\":1,\"332\":2}}],[\"operators\",{\"1\":{\"63\":1,\"64\":1,\"126\":1,\"137\":1}}],[\"operate\",{\"1\":{\"55\":1,\"73\":1}}],[\"operations\",{\"1\":{\"54\":1,\"72\":1,\"154\":1,\"170\":1,\"264\":1}}],[\"operation\",{\"1\":{\"7\":1,\"109\":4,\"131\":4,\"332\":4}}],[\"operating\",{\"1\":{\"4\":1,\"54\":1,\"56\":1,\"72\":1,\"241\":1,\"252\":2,\"264\":1,\"304\":1,\"331\":1,\"351\":1}}],[\"opt\",{\"1\":{\"86\":1,\"110\":1,\"123\":2,\"138\":1,\"253\":1}}],[\"optimisations\",{\"1\":{\"170\":1}}],[\"optimized\",{\"1\":{\"63\":1}}],[\"optionals\",{\"1\":{\"105\":2}}],[\"optional\",{\"0\":{\"254\":1,\"255\":1},\"1\":{\"63\":1,\"68\":1,\"94\":1,\"103\":1,\"105\":3,\"112\":1,\"126\":1,\"132\":1,\"136\":2,\"245\":2,\"253\":3,\"254\":1,\"331\":2}}],[\"option\",{\"1\":{\"54\":1,\"72\":1,\"126\":1,\"130\":1,\"136\":2,\"138\":1,\"177\":1,\"274\":1,\"344\":1,\"345\":2}}],[\"options\",{\"1\":{\"1\":1,\"59\":1,\"223\":1,\"357\":1}}],[\"opinion\",{\"1\":{\"62\":1}}],[\"others\",{\"1\":{\"63\":1,\"64\":1,\"75\":1,\"254\":1,\"286\":1,\"331\":1}}],[\"otherwise\",{\"1\":{\"63\":2,\"93\":1,\"128\":1}}],[\"other\",{\"1\":{\"4\":1,\"16\":1,\"18\":1,\"22\":1,\"42\":1,\"57\":1,\"60\":1,\"63\":1,\"64\":4,\"66\":1,\"74\":1,\"76\":1,\"79\":1,\"107\":1,\"108\":2,\"113\":1,\"118\":1,\"126\":1,\"128\":1,\"134\":1,\"142\":1,\"157\":1,\"177\":1,\"179\":1,\"183\":1,\"240\":1,\"246\":1,\"277\":1,\"308\":1,\"346\":1,\"347\":1}}],[\"off\",{\"1\":{\"256\":1,\"274\":1,\"279\":1}}],[\"officially\",{\"1\":{\"253\":1}}],[\"offset\",{\"1\":{\"183\":1}}],[\"offer\",{\"1\":{\"56\":1,\"59\":1,\"77\":1,\"277\":1,\"311\":1}}],[\"often\",{\"1\":{\"8\":1,\"62\":1,\"63\":2,\"64\":1,\"66\":1,\"73\":1,\"302\":1}}],[\"of\",{\"0\":{\"50\":1,\"61\":1,\"356\":1},\"1\":{\"3\":1,\"4\":2,\"6\":4,\"7\":1,\"9\":2,\"13\":1,\"15\":1,\"16\":1,\"17\":1,\"21\":5,\"22\":2,\"27\":3,\"28\":1,\"29\":1,\"36\":2,\"37\":1,\"38\":1,\"39\":1,\"41\":1,\"42\":2,\"47\":1,\"49\":1,\"52\":2,\"53\":1,\"54\":11,\"55\":6,\"56\":4,\"57\":2,\"59\":2,\"60\":2,\"62\":2,\"63\":3,\"64\":2,\"66\":11,\"67\":2,\"68\":3,\"69\":2,\"70\":4,\"72\":11,\"73\":5,\"75\":1,\"77\":1,\"78\":1,\"79\":2,\"83\":1,\"84\":1,\"87\":2,\"91\":1,\"93\":1,\"94\":1,\"104\":1,\"105\":4,\"108\":3,\"109\":5,\"110\":3,\"111\":1,\"113\":1,\"114\":1,\"115\":1,\"117\":1,\"118\":3,\"119\":1,\"120\":3,\"121\":1,\"122\":1,\"123\":5,\"124\":2,\"125\":3,\"126\":6,\"127\":1,\"128\":2,\"130\":4,\"131\":1,\"132\":3,\"134\":5,\"135\":4,\"136\":11,\"137\":6,\"138\":2,\"139\":2,\"144\":1,\"145\":1,\"146\":1,\"150\":1,\"158\":1,\"162\":1,\"168\":1,\"175\":1,\"177\":3,\"178\":2,\"179\":3,\"184\":1,\"188\":1,\"215\":1,\"222\":1,\"223\":1,\"230\":1,\"243\":3,\"244\":2,\"245\":1,\"253\":5,\"254\":1,\"255\":1,\"258\":1,\"260\":2,\"263\":1,\"264\":1,\"265\":2,\"266\":8,\"267\":2,\"270\":2,\"271\":1,\"272\":2,\"273\":1,\"274\":4,\"275\":4,\"276\":1,\"277\":2,\"281\":1,\"283\":3,\"285\":4,\"286\":4,\"287\":1,\"289\":2,\"295\":2,\"296\":1,\"297\":1,\"298\":1,\"299\":3,\"302\":2,\"303\":1,\"304\":7,\"305\":2,\"306\":5,\"307\":2,\"308\":2,\"311\":2,\"313\":1,\"314\":2,\"315\":1,\"316\":1,\"318\":1,\"322\":1,\"323\":1,\"326\":1,\"327\":1,\"329\":4,\"330\":3,\"331\":3,\"332\":5,\"333\":1,\"335\":1,\"336\":3,\"337\":7,\"338\":4,\"340\":4,\"341\":1,\"347\":2,\"349\":3,\"351\":1,\"352\":3,\"353\":1,\"356\":1,\"357\":5,\"361\":1,\"363\":7}}],[\"😉\",{\"1\":{\"126\":1}}],[\"🚀\",{\"0\":{\"2\":1}}],[\"🛠\",{\"0\":{\"1\":1}}],[\"tb\",{\"1\":{\"211\":1}}],[\"tfstate\",{\"1\":{\"128\":1}}],[\"tty\",{\"0\":{\"317\":1},\"1\":{\"128\":1,\"130\":1,\"136\":1,\"138\":3,\"144\":1,\"314\":1,\"317\":2}}],[\"tmp\",{\"1\":{\"126\":1}}],[\"tmux\",{\"1\":{\"123\":1,\"130\":2,\"178\":2}}],[\"typical\",{\"1\":{\"303\":1}}],[\"typically\",{\"1\":{\"264\":1,\"281\":1,\"287\":1}}],[\"typing\",{\"1\":{\"126\":1,\"274\":1}}],[\"typeface\",{\"0\":{\"256\":1},\"1\":{\"245\":1,\"256\":1}}],[\"types\",{\"1\":{\"14\":1,\"17\":1,\"27\":1,\"58\":1,\"66\":1,\"85\":1,\"108\":1,\"118\":3,\"119\":1,\"120\":1,\"123\":1,\"128\":1,\"140\":1,\"143\":1,\"154\":1,\"179\":1,\"277\":2,\"285\":1,\"330\":1,\"347\":1}}],[\"typed\",{\"1\":{\"4\":2,\"58\":1,\"63\":1,\"136\":1,\"304\":1}}],[\"type\",{\"0\":{\"17\":1,\"24\":1},\"1\":{\"3\":2,\"4\":1,\"7\":1,\"17\":2,\"28\":2,\"38\":1,\"57\":1,\"58\":2,\"60\":1,\"63\":1,\"75\":1,\"79\":1,\"105\":1,\"107\":3,\"110\":1,\"114\":3,\"118\":2,\"125\":1,\"126\":1,\"127\":1,\"128\":6,\"132\":3,\"136\":7,\"137\":1,\"138\":1,\"142\":2,\"149\":1,\"157\":1,\"168\":1,\"169\":1,\"177\":1,\"209\":3,\"263\":1,\"281\":1,\"313\":1,\"330\":2,\"347\":1,\"352\":1}}],[\"twice\",{\"1\":{\"270\":1,\"295\":1}}],[\"tweaking\",{\"1\":{\"346\":1}}],[\"tweaks\",{\"1\":{\"105\":1,\"118\":1,\"128\":1}}],[\"tweaked\",{\"1\":{\"105\":1,\"114\":1,\"136\":1,\"138\":1}}],[\"two\",{\"1\":{\"21\":1,\"27\":1,\"34\":1,\"63\":1,\"66\":1,\"68\":1,\"104\":1,\"118\":1,\"132\":1,\"211\":4,\"258\":1,\"270\":1,\"295\":1,\"365\":2}}],[\"tip\",{\"1\":{\"197\":1}}],[\"title\",{\"1\":{\"130\":1,\"178\":1,\"197\":5,\"207\":1,\"211\":1,\"223\":1}}],[\"titlebar\",{\"1\":{\"130\":3}}],[\"timing\",{\"1\":{\"114\":2}}],[\"timestamped\",{\"1\":{\"358\":1}}],[\"times\",{\"1\":{\"136\":1,\"363\":1}}],[\"timeout\",{\"1\":{\"104\":4,\"105\":1}}],[\"time\",{\"1\":{\"54\":1,\"63\":1,\"72\":1,\"107\":1,\"110\":1,\"123\":1,\"125\":2,\"126\":1,\"134\":1,\"144\":1,\"177\":3,\"188\":1,\"223\":1,\"266\":1,\"270\":2,\"283\":1,\"293\":1,\"295\":2,\"308\":1}}],[\"tightly\",{\"1\":{\"66\":1}}],[\"tied\",{\"1\":{\"66\":1}}],[\"tcsh\",{\"1\":{\"63\":1}}],[\"tue\",{\"1\":{\"209\":1}}],[\"tuesday\",{\"1\":{\"56\":2,\"57\":1,\"58\":1}}],[\"turned\",{\"1\":{\"266\":2,\"274\":1}}],[\"turn\",{\"1\":{\"62\":1,\"118\":1,\"304\":1}}],[\"tutorial\",{\"0\":{\"2\":1},\"1\":{\"2\":1}}],[\"technologies\",{\"1\":{\"244\":1}}],[\"technically\",{\"1\":{\"134\":1}}],[\"techniques\",{\"1\":{\"53\":1}}],[\"tex\",{\"0\":{\"212\":1}}],[\"texttoencode\",{\"1\":{\"66\":1}}],[\"text\",{\"0\":{\"281\":1,\"282\":1,\"283\":1,\"284\":1},\"1\":{\"28\":2,\"54\":1,\"66\":1,\"72\":1,\"110\":1,\"119\":1,\"123\":1,\"158\":1,\"203\":1,\"222\":1,\"259\":2,\"266\":1,\"273\":4,\"274\":2,\"281\":2,\"282\":4,\"283\":2,\"284\":1,\"304\":1,\"365\":1}}],[\"tell\",{\"1\":{\"153\":1}}],[\"tells\",{\"1\":{\"54\":1,\"56\":1,\"72\":1}}],[\"tee\",{\"1\":{\"128\":1}}],[\"templates\",{\"1\":{\"119\":1}}],[\"test\",{\"1\":{\"119\":1,\"123\":1,\"124\":1,\"130\":1,\"134\":1,\"253\":2,\"297\":2,\"301\":2}}],[\"tests\",{\"1\":{\"105\":1,\"106\":1,\"110\":4,\"115\":1,\"119\":1,\"124\":2,\"126\":1,\"128\":2,\"134\":3,\"136\":2,\"253\":2,\"290\":1,\"297\":2,\"301\":2}}],[\"testing\",{\"1\":{\"90\":1,\"105\":3,\"114\":1,\"126\":1,\"130\":1,\"134\":1,\"136\":2,\"243\":1,\"290\":1}}],[\"tendencies\",{\"1\":{\"69\":1}}],[\"terraform\",{\"1\":{\"108\":1,\"128\":1}}],[\"terse\",{\"1\":{\"64\":1}}],[\"terseness\",{\"1\":{\"6\":1}}],[\"term\",{\"1\":{\"136\":1,\"157\":1,\"182\":1,\"302\":1,\"357\":1}}],[\"terminates\",{\"1\":{\"43\":1,\"267\":1,\"285\":1,\"352\":1}}],[\"terminate\",{\"1\":{\"41\":1,\"42\":1,\"45\":1,\"63\":1,\"137\":2}}],[\"terminals\",{\"1\":{\"62\":1,\"64\":1,\"259\":11}}],[\"terminal\",{\"0\":{\"256\":1,\"353\":1},\"1\":{\"6\":1,\"63\":2,\"64\":1,\"69\":1,\"75\":1,\"96\":1,\"102\":1,\"117\":2,\"118\":1,\"123\":3,\"128\":1,\"130\":1,\"138\":1,\"145\":2,\"174\":1,\"179\":2,\"244\":1,\"245\":1,\"256\":1,\"276\":1,\"279\":1,\"289\":1,\"317\":1,\"330\":1,\"332\":2,\"353\":1,\"365\":1}}],[\"terms\",{\"1\":{\"8\":1,\"66\":1,\"357\":2}}],[\"txt$\",{\"1\":{\"128\":1}}],[\"txt|md\",{\"1\":{\"28\":1}}],[\"txt\",{\"1\":{\"18\":2,\"19\":5,\"23\":2,\"28\":5,\"54\":4,\"72\":4,\"109\":2,\"128\":1,\"142\":1,\"303\":1,\"330\":10,\"357\":5}}],[\"tags\",{\"1\":{\"221\":1}}],[\"tasklist\",{\"0\":{\"205\":1}}],[\"tasks\",{\"1\":{\"54\":1,\"72\":1}}],[\"ta\",{\"1\":{\"125\":1}}],[\"talk\",{\"1\":{\"66\":1,\"253\":1}}],[\"tabs\",{\"0\":{\"198\":1,\"199\":1}}],[\"tabwriter\",{\"1\":{\"114\":1}}],[\"tabulated\",{\"1\":{\"70\":1,\"105\":1,\"128\":1,\"139\":1,\"330\":1}}],[\"tab\",{\"0\":{\"354\":1},\"1\":{\"21\":1,\"101\":1,\"109\":1,\"110\":1,\"111\":1,\"118\":1,\"127\":1,\"129\":1,\"133\":1,\"135\":1,\"136\":1,\"162\":1,\"184\":1,\"274\":3,\"277\":1,\"285\":1,\"340\":1}}],[\"tables\",{\"1\":{\"107\":1,\"126\":3}}],[\"table\",{\"1\":{\"3\":1,\"52\":1,\"132\":1,\"133\":1,\"137\":1,\"223\":1,\"230\":1,\"245\":1,\"273\":1,\"330\":1,\"332\":1}}],[\"taken\",{\"1\":{\"62\":1}}],[\"takes\",{\"1\":{\"26\":1,\"68\":1,\"282\":1}}],[\"take\",{\"1\":{\"8\":1,\"27\":2,\"66\":1,\"123\":1,\"126\":1,\"128\":1,\"266\":1}}],[\"t\",{\"0\":{\"55\":1,\"73\":1},\"1\":{\"8\":1,\"25\":1,\"28\":1,\"34\":2,\"37\":1,\"42\":1,\"52\":1,\"55\":2,\"56\":2,\"57\":1,\"62\":1,\"63\":3,\"64\":1,\"66\":3,\"68\":2,\"73\":2,\"75\":3,\"110\":1,\"123\":2,\"124\":1,\"126\":1,\"128\":4,\"130\":4,\"134\":1,\"136\":9,\"162\":1,\"168\":1,\"178\":1,\"192\":1,\"193\":1,\"253\":1,\"261\":1,\"266\":1,\"274\":1,\"281\":1,\"304\":1,\"330\":2,\"346\":1,\"348\":1,\"351\":1,\"360\":1,\"365\":1}}],[\"trivial\",{\"1\":{\"268\":1}}],[\"tricky\",{\"1\":{\"252\":1}}],[\"triggered\",{\"1\":{\"182\":1}}],[\"treating\",{\"1\":{\"66\":1}}],[\"treat\",{\"1\":{\"57\":1,\"75\":1}}],[\"treated\",{\"1\":{\"7\":1,\"55\":1,\"73\":1,\"239\":1,\"240\":1,\"330\":1}}],[\"true<\",{\"1\":{\"123\":1}}],[\"true\",{\"1\":{\"36\":1,\"66\":1,\"77\":1,\"110\":1,\"130\":1,\"134\":1,\"138\":3,\"144\":1,\"177\":1,\"264\":1,\"265\":2,\"266\":1,\"314\":1,\"338\":1,\"344\":1,\"345\":1}}],[\"truncate\",{\"1\":{\"23\":1,\"134\":1,\"135\":1,\"330\":1,\"332\":1}}],[\"trypipe\",{\"1\":{\"92\":1,\"108\":1,\"109\":1,\"130\":2,\"134\":2,\"135\":1,\"283\":1,\"330\":2,\"332\":1,\"337\":1}}],[\"try\",{\"0\":{\"335\":1,\"336\":1},\"1\":{\"17\":1,\"92\":1,\"108\":1,\"109\":1,\"130\":3,\"134\":2,\"135\":1,\"253\":1,\"332\":1,\"336\":2,\"337\":1}}],[\"trailing\",{\"1\":{\"263\":1}}],[\"traverse\",{\"1\":{\"177\":1}}],[\"trace\",{\"1\":{\"123\":1}}],[\"tracking\",{\"0\":{\"293\":1}}],[\"track\",{\"1\":{\"75\":1,\"80\":1,\"109\":1,\"125\":1,\"268\":1,\"286\":1,\"297\":1}}],[\"tradition\",{\"1\":{\"27\":1}}],[\"traditionalposix\",{\"1\":{\"277\":1}}],[\"traditional\",{\"0\":{\"64\":1},\"1\":{\"4\":1,\"16\":1,\"18\":1,\"28\":1,\"55\":1,\"64\":2,\"73\":1,\"299\":3,\"331\":1,\"334\":1}}],[\"transfer\",{\"1\":{\"64\":1}}],[\"transform\",{\"1\":{\"24\":1}}],[\"translates\",{\"1\":{\"64\":1}}],[\"translate\",{\"1\":{\"10\":1}}],[\"than\",{\"1\":{\"58\":1,\"66\":4,\"85\":1,\"88\":1,\"89\":1,\"105\":2,\"108\":1,\"110\":2,\"123\":2,\"126\":1,\"130\":1,\"134\":2,\"136\":2,\"140\":1,\"144\":1,\"157\":1,\"178\":2,\"240\":1,\"259\":1,\"266\":2,\"305\":1,\"311\":2,\"335\":1,\"336\":2,\"347\":1,\"365\":1}}],[\"that\",{\"1\":{\"4\":2,\"6\":3,\"8\":2,\"12\":1,\"16\":1,\"17\":1,\"18\":1,\"21\":2,\"22\":4,\"25\":1,\"27\":1,\"29\":1,\"43\":1,\"54\":1,\"55\":2,\"56\":3,\"57\":5,\"58\":4,\"62\":8,\"63\":4,\"64\":6,\"66\":3,\"67\":2,\"68\":4,\"69\":1,\"72\":1,\"73\":2,\"75\":4,\"77\":4,\"87\":1,\"91\":1,\"104\":1,\"106\":1,\"108\":1,\"113\":1,\"114\":2,\"115\":1,\"118\":3,\"123\":6,\"125\":1,\"126\":3,\"127\":1,\"128\":2,\"130\":1,\"132\":2,\"134\":2,\"136\":3,\"141\":1,\"142\":1,\"168\":2,\"177\":2,\"188\":1,\"191\":1,\"243\":2,\"244\":2,\"253\":3,\"256\":1,\"258\":1,\"260\":3,\"261\":1,\"264\":1,\"266\":5,\"267\":1,\"274\":2,\"277\":1,\"281\":1,\"282\":2,\"283\":1,\"285\":1,\"287\":1,\"299\":1,\"304\":2,\"305\":2,\"308\":1,\"311\":2,\"315\":1,\"324\":2,\"330\":2,\"335\":1,\"336\":2,\"338\":3,\"342\":1,\"345\":1,\"347\":1,\"349\":5,\"352\":2,\"356\":1,\"357\":4}}],[\"thu\",{\"1\":{\"209\":1}}],[\"thursday\",{\"1\":{\"56\":2,\"57\":1,\"58\":1}}],[\"thus\",{\"1\":{\"4\":1,\"7\":1,\"8\":1,\"34\":1,\"41\":1,\"42\":1,\"56\":1,\"58\":1,\"67\":1,\"77\":1,\"105\":2,\"123\":1,\"126\":1,\"128\":1,\"253\":1,\"264\":1,\"270\":1,\"295\":1,\"328\":1,\"347\":1,\"349\":1}}],[\"though\",{\"1\":{\"76\":1}}],[\"thought\",{\"1\":{\"69\":1}}],[\"thoughts\",{\"1\":{\"47\":1}}],[\"thompson\",{\"1\":{\"62\":4,\"67\":1,\"304\":1}}],[\"those\",{\"1\":{\"9\":1,\"50\":1,\"57\":1,\"61\":1,\"64\":2,\"66\":1,\"69\":1,\"75\":1,\"104\":1,\"110\":2,\"126\":1,\"134\":1,\"177\":1,\"256\":1,\"266\":1,\"286\":1,\"311\":2}}],[\"thread\",{\"1\":{\"124\":1}}],[\"three\",{\"1\":{\"12\":1,\"27\":1,\"211\":2,\"365\":2}}],[\"throwing\",{\"1\":{\"73\":1}}],[\"throughout\",{\"1\":{\"53\":1}}],[\"through\",{\"1\":{\"38\":1,\"53\":2,\"56\":1,\"57\":1,\"60\":2,\"78\":1,\"79\":2,\"107\":1,\"137\":1,\"179\":2,\"244\":1,\"253\":1,\"274\":1,\"328\":1,\"329\":1,\"330\":2,\"340\":1,\"357\":1}}],[\"thirteenth\",{\"1\":{\"130\":1}}],[\"third\",{\"1\":{\"55\":1,\"73\":1,\"77\":1}}],[\"thing\",{\"1\":{\"75\":1}}],[\"things\",{\"1\":{\"56\":1}}],[\"think\",{\"1\":{\"21\":1,\"66\":1,\"69\":1,\"124\":1}}],[\"this\",{\"1\":{\"4\":2,\"7\":1,\"9\":1,\"12\":3,\"13\":3,\"17\":1,\"18\":2,\"27\":1,\"28\":3,\"41\":1,\"42\":1,\"44\":1,\"45\":1,\"46\":1,\"49\":1,\"50\":1,\"52\":1,\"53\":1,\"54\":4,\"55\":4,\"56\":3,\"57\":1,\"61\":1,\"62\":1,\"63\":2,\"66\":4,\"67\":2,\"68\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":4,\"73\":3,\"75\":1,\"77\":2,\"82\":1,\"83\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"89\":1,\"90\":1,\"91\":2,\"92\":1,\"93\":3,\"94\":1,\"95\":1,\"96\":1,\"97\":1,\"98\":1,\"99\":1,\"101\":3,\"103\":2,\"104\":2,\"105\":9,\"108\":1,\"110\":8,\"112\":2,\"113\":2,\"114\":2,\"117\":2,\"118\":4,\"121\":2,\"123\":12,\"124\":1,\"126\":6,\"128\":13,\"130\":7,\"132\":5,\"134\":9,\"136\":12,\"138\":6,\"140\":1,\"141\":1,\"153\":1,\"157\":1,\"162\":1,\"168\":2,\"169\":1,\"170\":1,\"175\":1,\"177\":3,\"178\":3,\"180\":1,\"188\":1,\"203\":1,\"217\":1,\"223\":1,\"240\":1,\"253\":5,\"254\":1,\"255\":1,\"256\":1,\"259\":1,\"262\":1,\"266\":4,\"268\":1,\"270\":1,\"274\":2,\"275\":1,\"277\":1,\"279\":1,\"280\":1,\"282\":1,\"283\":2,\"286\":2,\"289\":2,\"293\":1,\"295\":1,\"299\":1,\"302\":1,\"303\":1,\"304\":1,\"305\":3,\"308\":4,\"309\":1,\"310\":1,\"311\":2,\"314\":1,\"315\":2,\"321\":1,\"322\":1,\"323\":1,\"324\":1,\"325\":1,\"326\":1,\"327\":1,\"328\":1,\"331\":2,\"333\":1,\"334\":1,\"335\":1,\"336\":2,\"339\":1,\"341\":1,\"342\":2,\"344\":1,\"345\":3,\"346\":2,\"347\":2,\"351\":2,\"355\":1,\"356\":1,\"357\":1,\"358\":1,\"360\":2,\"365\":1}}],[\"theoretical\",{\"1\":{\"347\":1}}],[\"thede\",{\"1\":{\"311\":1}}],[\"thegcc\",{\"1\":{\"253\":1}}],[\"thelinux\",{\"1\":{\"244\":1}}],[\"they\",{\"1\":{\"15\":1,\"16\":1,\"33\":1,\"55\":1,\"63\":3,\"64\":1,\"66\":2,\"73\":1,\"123\":1,\"166\":1,\"266\":2,\"304\":1,\"338\":1,\"344\":1}}],[\"theme\",{\"0\":{\"196\":1},\"1\":{\"196\":1,\"214\":1,\"222\":1,\"223\":1}}],[\"themselves\",{\"1\":{\"64\":1}}],[\"them\",{\"1\":{\"14\":1,\"18\":1,\"28\":2,\"50\":1,\"61\":1,\"64\":1,\"66\":1,\"68\":1,\"76\":1,\"130\":1,\"134\":1,\"169\":1,\"177\":1,\"191\":1,\"222\":2,\"223\":1,\"241\":1,\"254\":1,\"277\":1,\"305\":2}}],[\"their\",{\"1\":{\"9\":2,\"14\":1,\"33\":1,\"59\":1,\"64\":5,\"66\":3,\"70\":1,\"104\":1,\"117\":1,\"119\":1,\"126\":1,\"134\":1,\"136\":1,\"139\":1,\"145\":1,\"179\":1,\"182\":1,\"243\":1,\"256\":1,\"304\":2,\"313\":1,\"314\":1,\"330\":2,\"332\":1,\"338\":1,\"353\":1}}],[\"these\",{\"1\":{\"8\":1,\"19\":1,\"53\":1,\"62\":1,\"63\":1,\"65\":1,\"66\":1,\"87\":1,\"105\":1,\"132\":1,\"134\":2,\"136\":1,\"195\":1,\"239\":1,\"243\":1,\"252\":1,\"253\":2,\"262\":1,\"304\":1,\"348\":1,\"357\":1}}],[\"thereafter\",{\"1\":{\"114\":2}}],[\"there\",{\"1\":{\"5\":1,\"12\":1,\"18\":1,\"21\":1,\"22\":1,\"25\":1,\"27\":1,\"28\":1,\"56\":1,\"58\":1,\"59\":1,\"63\":1,\"64\":1,\"66\":1,\"78\":1,\"91\":2,\"121\":1,\"132\":2,\"136\":1,\"207\":2,\"253\":1,\"254\":1,\"266\":2,\"274\":1,\"281\":1,\"283\":2,\"287\":1,\"300\":1,\"328\":1,\"333\":1,\"341\":1}}],[\"then\",{\"1\":{\"5\":1,\"7\":1,\"9\":1,\"10\":1,\"14\":1,\"34\":1,\"36\":1,\"41\":1,\"42\":2,\"43\":1,\"49\":1,\"52\":1,\"54\":2,\"57\":1,\"63\":2,\"64\":1,\"68\":5,\"70\":1,\"72\":2,\"73\":1,\"77\":1,\"105\":1,\"118\":1,\"123\":1,\"128\":2,\"130\":1,\"134\":1,\"141\":1,\"231\":1,\"241\":1,\"244\":2,\"247\":1,\"253\":1,\"256\":1,\"261\":1,\"266\":6,\"282\":1,\"283\":1,\"305\":1,\"315\":1,\"328\":2,\"335\":1,\"336\":1,\"338\":2,\"342\":1,\"346\":1,\"351\":1,\"356\":1,\"361\":1}}],[\"the\",{\"0\":{\"9\":1,\"41\":1,\"42\":1,\"43\":1,\"49\":1,\"50\":1,\"52\":1,\"61\":1,\"64\":1,\"65\":1,\"75\":1,\"76\":1,\"260\":1,\"311\":1,\"351\":1},\"1\":{\"1\":1,\"3\":4,\"4\":1,\"5\":1,\"6\":2,\"7\":1,\"8\":2,\"9\":4,\"10\":1,\"13\":1,\"15\":3,\"16\":5,\"17\":3,\"18\":1,\"21\":10,\"22\":4,\"24\":1,\"25\":3,\"26\":1,\"27\":9,\"28\":1,\"29\":1,\"34\":3,\"36\":1,\"39\":1,\"41\":3,\"42\":1,\"43\":1,\"45\":1,\"49\":1,\"50\":3,\"52\":1,\"53\":1,\"54\":26,\"55\":6,\"56\":7,\"57\":9,\"58\":6,\"59\":3,\"60\":2,\"61\":3,\"62\":12,\"63\":22,\"64\":8,\"66\":12,\"67\":6,\"68\":6,\"69\":5,\"70\":4,\"71\":1,\"72\":26,\"73\":4,\"74\":2,\"75\":4,\"76\":1,\"77\":6,\"79\":2,\"80\":1,\"82\":1,\"84\":4,\"85\":1,\"86\":1,\"87\":3,\"91\":2,\"92\":1,\"93\":3,\"94\":3,\"96\":1,\"101\":1,\"103\":1,\"105\":12,\"106\":2,\"107\":4,\"108\":3,\"109\":4,\"110\":6,\"111\":3,\"112\":1,\"114\":2,\"115\":2,\"116\":1,\"117\":3,\"118\":14,\"119\":2,\"120\":5,\"122\":2,\"123\":13,\"124\":2,\"125\":3,\"126\":12,\"127\":3,\"128\":18,\"129\":1,\"130\":16,\"131\":1,\"132\":8,\"133\":1,\"134\":13,\"135\":4,\"136\":16,\"137\":4,\"138\":5,\"140\":1,\"142\":2,\"145\":1,\"146\":4,\"150\":2,\"154\":2,\"157\":3,\"168\":1,\"169\":1,\"177\":7,\"178\":2,\"179\":2,\"180\":1,\"182\":1,\"184\":2,\"188\":4,\"194\":1,\"196\":1,\"221\":2,\"222\":2,\"231\":3,\"232\":2,\"239\":1,\"240\":2,\"241\":1,\"243\":4,\"244\":6,\"247\":1,\"253\":16,\"254\":2,\"256\":1,\"258\":2,\"259\":3,\"260\":6,\"261\":2,\"262\":1,\"263\":5,\"264\":7,\"265\":1,\"266\":17,\"267\":1,\"270\":8,\"271\":1,\"272\":1,\"274\":12,\"275\":3,\"277\":3,\"279\":1,\"280\":1,\"281\":5,\"282\":4,\"283\":5,\"285\":6,\"286\":3,\"287\":3,\"289\":4,\"293\":1,\"295\":8,\"296\":1,\"299\":11,\"301\":2,\"302\":3,\"304\":7,\"305\":5,\"306\":10,\"307\":2,\"308\":5,\"309\":1,\"310\":2,\"311\":8,\"313\":1,\"314\":2,\"315\":4,\"316\":4,\"317\":1,\"318\":2,\"319\":1,\"320\":2,\"321\":2,\"322\":2,\"323\":2,\"324\":5,\"326\":2,\"327\":2,\"328\":2,\"329\":2,\"330\":3,\"331\":10,\"332\":2,\"333\":2,\"334\":2,\"335\":4,\"336\":9,\"337\":9,\"338\":6,\"340\":3,\"342\":3,\"345\":2,\"346\":4,\"347\":7,\"348\":1,\"349\":4,\"351\":4,\"352\":4,\"353\":1,\"355\":1,\"356\":2,\"357\":8,\"359\":1,\"360\":2,\"361\":3,\"362\":1,\"364\":3,\"365\":3}}],[\"tojson\",{\"1\":{\"347\":1}}],[\"todo\",{\"1\":{\"325\":1}}],[\"today\",{\"1\":{\"275\":1}}],[\"tour\",{\"1\":{\"330\":1}}],[\"tout\",{\"1\":{\"263\":1}}],[\"touch\",{\"1\":{\"18\":1,\"19\":1,\"27\":2}}],[\"toc\",{\"1\":{\"223\":1}}],[\"top\",{\"1\":{\"178\":1,\"188\":1,\"223\":1,\"244\":1,\"303\":1,\"316\":1,\"334\":1}}],[\"token\",{\"1\":{\"118\":1,\"119\":1,\"120\":2,\"135\":1,\"145\":1,\"277\":2,\"285\":2,\"302\":1,\"306\":4,\"329\":2,\"332\":3,\"337\":4}}],[\"tokens\",{\"1\":{\"13\":1,\"18\":1,\"21\":1,\"22\":1,\"63\":1,\"68\":1,\"118\":1,\"138\":1,\"174\":1,\"267\":1,\"285\":1,\"352\":1}}],[\"towards\",{\"1\":{\"66\":1,\"134\":1}}],[\"tobase64string\",{\"1\":{\"66\":1}}],[\"took\",{\"1\":{\"62\":1}}],[\"too\",{\"1\":{\"56\":1,\"57\":2,\"58\":1,\"64\":1,\"74\":1,\"75\":1,\"84\":1,\"124\":1,\"126\":1,\"142\":1,\"146\":1,\"244\":1,\"339\":1,\"347\":1,\"360\":1}}],[\"toolbox\",{\"1\":{\"304\":1}}],[\"tool\",{\"1\":{\"56\":2,\"108\":1,\"118\":1,\"125\":1,\"253\":1,\"254\":1,\"287\":1}}],[\"tooling\",{\"1\":{\"53\":1,\"299\":1}}],[\"tools\",{\"1\":{\"4\":2,\"21\":1,\"55\":1,\"56\":1,\"66\":2,\"73\":2,\"137\":1,\"289\":1,\"290\":1}}],[\"together\",{\"1\":{\"28\":1,\"118\":1,\"126\":1,\"287\":1,\"302\":1,\"304\":1}}],[\"toml\",{\"1\":{\"53\":1}}],[\"tom\",{\"1\":{\"15\":3,\"37\":2,\"330\":1}}],[\"to\",{\"0\":{\"1\":1,\"23\":1,\"260\":1,\"347\":1},\"1\":{\"3\":1,\"4\":2,\"5\":1,\"6\":3,\"7\":6,\"8\":1,\"9\":2,\"10\":1,\"12\":2,\"13\":1,\"15\":1,\"16\":2,\"17\":2,\"18\":6,\"19\":1,\"21\":5,\"22\":8,\"25\":1,\"27\":1,\"28\":2,\"31\":3,\"34\":2,\"36\":1,\"37\":2,\"38\":1,\"41\":3,\"42\":3,\"49\":2,\"50\":3,\"52\":2,\"53\":1,\"54\":9,\"55\":2,\"56\":5,\"57\":6,\"58\":4,\"59\":2,\"60\":1,\"61\":3,\"62\":4,\"63\":15,\"64\":2,\"66\":11,\"67\":3,\"68\":6,\"69\":2,\"70\":3,\"72\":9,\"73\":2,\"75\":6,\"76\":4,\"77\":1,\"78\":1,\"84\":2,\"85\":1,\"86\":2,\"87\":2,\"90\":1,\"91\":2,\"92\":1,\"93\":3,\"94\":1,\"96\":1,\"101\":1,\"102\":2,\"103\":1,\"104\":1,\"105\":19,\"108\":5,\"109\":3,\"110\":8,\"111\":1,\"112\":1,\"113\":1,\"114\":5,\"115\":1,\"117\":2,\"118\":13,\"119\":2,\"120\":2,\"123\":11,\"124\":3,\"125\":5,\"126\":15,\"127\":1,\"128\":21,\"130\":14,\"131\":1,\"132\":7,\"134\":11,\"135\":3,\"136\":15,\"137\":4,\"138\":11,\"140\":1,\"141\":1,\"142\":5,\"143\":1,\"144\":3,\"146\":2,\"150\":1,\"153\":3,\"154\":1,\"157\":4,\"162\":1,\"165\":3,\"168\":1,\"169\":2,\"170\":1,\"174\":1,\"177\":14,\"178\":5,\"188\":1,\"191\":3,\"192\":1,\"193\":1,\"195\":1,\"222\":1,\"223\":1,\"231\":3,\"232\":1,\"243\":2,\"244\":3,\"247\":3,\"252\":6,\"253\":8,\"254\":4,\"256\":1,\"262\":4,\"263\":4,\"264\":5,\"266\":5,\"268\":2,\"270\":2,\"272\":1,\"274\":4,\"275\":2,\"277\":2,\"279\":1,\"280\":1,\"281\":3,\"283\":3,\"285\":3,\"286\":7,\"287\":1,\"289\":1,\"290\":2,\"295\":2,\"297\":1,\"299\":3,\"301\":1,\"302\":1,\"304\":3,\"305\":2,\"306\":5,\"308\":3,\"309\":1,\"310\":2,\"311\":7,\"312\":1,\"314\":1,\"317\":2,\"318\":1,\"320\":1,\"324\":2,\"328\":1,\"329\":4,\"330\":11,\"332\":3,\"335\":1,\"337\":4,\"338\":1,\"340\":2,\"341\":3,\"342\":3,\"344\":1,\"345\":4,\"346\":1,\"347\":6,\"348\":3,\"351\":2,\"352\":1,\"354\":1,\"355\":1,\"357\":4,\"358\":1,\"360\":3,\"361\":1,\"362\":2,\"363\":11,\"364\":1}}],[\"aka\",{\"0\":{\"362\":1}}],[\"a1\",{\"1\":{\"211\":1}}],[\"ahead\",{\"1\":{\"144\":1,\"266\":1}}],[\"amd64\",{\"1\":{\"232\":2,\"234\":1,\"235\":1,\"236\":1,\"237\":1,\"238\":1,\"239\":1,\"240\":1,\"241\":1,\"243\":4,\"244\":1}}],[\"am\",{\"1\":{\"201\":2}}],[\"amongst\",{\"1\":{\"128\":1}}],[\"amount\",{\"1\":{\"64\":1,\"68\":1}}],[\"ambiguous\",{\"1\":{\"124\":1,\"136\":1}}],[\"aesthetic\",{\"1\":{\"110\":1}}],[\"aur\",{\"1\":{\"249\":5}}],[\"august\",{\"1\":{\"75\":2}}],[\"authored\",{\"1\":{\"286\":1}}],[\"author\",{\"1\":{\"221\":1,\"283\":1,\"286\":1}}],[\"authors\",{\"1\":{\"62\":1}}],[\"automate\",{\"1\":{\"254\":1}}],[\"automated\",{\"1\":{\"253\":1}}],[\"automatic\",{\"1\":{\"134\":1}}],[\"automatically\",{\"1\":{\"34\":1,\"126\":1,\"134\":1,\"255\":1,\"289\":1,\"345\":1}}],[\"autoglob\",{\"1\":{\"108\":1,\"130\":1,\"131\":1}}],[\"autocompletes\",{\"1\":{\"108\":2,\"110\":1,\"339\":1}}],[\"autocomplete\",{\"0\":{\"354\":1,\"357\":1},\"1\":{\"104\":2,\"109\":1,\"110\":1,\"111\":1,\"118\":1,\"123\":1,\"126\":3,\"127\":1,\"128\":3,\"129\":1,\"132\":4,\"133\":1,\"134\":5,\"135\":1,\"144\":1,\"153\":1,\"157\":2,\"165\":1,\"178\":1,\"182\":1,\"184\":1,\"277\":1,\"285\":1,\"340\":1,\"358\":1,\"362\":1}}],[\"autocompletions\",{\"1\":{\"101\":1,\"104\":1,\"105\":3,\"110\":2,\"134\":1,\"182\":2}}],[\"autocompletion\",{\"0\":{\"277\":1},\"1\":{\"21\":2,\"118\":3,\"123\":1,\"130\":5,\"132\":1,\"136\":2,\"142\":1,\"143\":1,\"162\":1,\"268\":1,\"273\":1,\"277\":1,\"354\":1,\"357\":1}}],[\"auto\",{\"1\":{\"28\":1,\"110\":1,\"126\":6,\"134\":1,\"136\":1,\"144\":1,\"177\":2,\"271\":1,\"278\":1,\"296\":1}}],[\"apt\",{\"1\":{\"351\":1}}],[\"apis\",{\"1\":{\"118\":1,\"170\":1}}],[\"api\",{\"1\":{\"105\":1,\"106\":1,\"115\":1,\"136\":1}}],[\"april\",{\"1\":{\"75\":2}}],[\"approximately\",{\"1\":{\"231\":1}}],[\"appropriate\",{\"1\":{\"128\":1,\"243\":1,\"253\":1}}],[\"approach\",{\"1\":{\"66\":1,\"68\":1,\"253\":1}}],[\"approaches\",{\"1\":{\"6\":1,\"59\":1}}],[\"appears\",{\"1\":{\"123\":1,\"124\":1,\"281\":1,\"299\":1}}],[\"appear\",{\"1\":{\"66\":1,\"282\":1}}],[\"appearing\",{\"1\":{\"53\":1,\"123\":1}}],[\"appending\",{\"1\":{\"110\":1,\"135\":1,\"332\":1}}],[\"appended\",{\"1\":{\"84\":1,\"146\":1,\"311\":1}}],[\"append\",{\"1\":{\"23\":1,\"126\":2,\"134\":1,\"135\":3,\"136\":1,\"137\":1,\"330\":1,\"332\":3,\"348\":1,\"352\":1}}],[\"apple\",{\"1\":{\"243\":1}}],[\"apples\",{\"1\":{\"7\":1,\"14\":1,\"38\":1}}],[\"applicable\",{\"1\":{\"254\":1}}],[\"application\",{\"1\":{\"166\":1,\"342\":1}}],[\"applications\",{\"1\":{\"62\":1,\"66\":2}}],[\"applies\",{\"1\":{\"21\":1,\"123\":1}}],[\"aforementioned\",{\"1\":{\"274\":1}}],[\"affected\",{\"1\":{\"123\":1,\"128\":2}}],[\"affects\",{\"1\":{\"118\":1}}],[\"affect\",{\"1\":{\"110\":1,\"136\":1}}],[\"afraid\",{\"1\":{\"68\":1}}],[\"after\",{\"1\":{\"62\":1,\"110\":2,\"123\":1,\"128\":1,\"136\":1,\"138\":1,\"177\":2,\"270\":1,\"277\":1,\"295\":1,\"305\":1,\"363\":2}}],[\"aims\",{\"1\":{\"67\":1}}],[\"aimed\",{\"1\":{\"63\":1,\"123\":1}}],[\"avoid\",{\"1\":{\"67\":1,\"115\":1,\"136\":1,\"142\":1}}],[\"available\",{\"1\":{\"1\":1,\"4\":1,\"33\":1,\"57\":1,\"59\":1,\"84\":1,\"118\":3,\"146\":1,\"154\":1,\"232\":1,\"249\":1,\"274\":1,\"275\":1,\"276\":1}}],[\"aws\",{\"1\":{\"134\":2}}],[\"away\",{\"1\":{\"56\":1,\"58\":1,\"64\":1,\"311\":1}}],[\"aware\",{\"1\":{\"43\":1,\"119\":1,\"126\":1,\"136\":2,\"137\":1,\"169\":1}}],[\"awk\",{\"1\":{\"56\":1,\"64\":1}}],[\"absence\",{\"1\":{\"331\":1}}],[\"absolute\",{\"1\":{\"222\":1,\"311\":1}}],[\"abc\",{\"1\":{\"322\":2,\"323\":2}}],[\"able\",{\"1\":{\"56\":1,\"66\":1}}],[\"ability\",{\"1\":{\"54\":2,\"63\":1,\"72\":2}}],[\"above\",{\"0\":{\"260\":1},\"1\":{\"42\":1,\"57\":1,\"63\":1,\"118\":1,\"243\":1,\"244\":1,\"260\":1,\"261\":1,\"266\":2,\"270\":1,\"274\":1,\"282\":1,\"295\":1,\"311\":1,\"334\":1,\"345\":1}}],[\"about\",{\"1\":{\"5\":1,\"25\":1,\"66\":1,\"70\":1,\"76\":1,\"102\":1,\"145\":1,\"170\":1,\"177\":1,\"179\":1,\"266\":1,\"273\":1,\"293\":1,\"314\":1,\"330\":1,\"352\":1,\"366\":1}}],[\"again\",{\"1\":{\"63\":1,\"66\":1}}],[\"against\",{\"1\":{\"28\":1,\"39\":1,\"105\":2,\"110\":2,\"118\":1,\"126\":1,\"132\":1,\"134\":1,\"144\":1,\"290\":1}}],[\"agents\",{\"1\":{\"339\":1}}],[\"agent\",{\"1\":{\"268\":1}}],[\"age\",{\"1\":{\"14\":1,\"39\":4,\"134\":1,\"330\":4}}],[\"activated\",{\"1\":{\"358\":1}}],[\"action\",{\"1\":{\"264\":1,\"363\":1}}],[\"actions\",{\"1\":{\"264\":1,\"306\":1,\"329\":1}}],[\"actual\",{\"1\":{\"266\":1}}],[\"actually\",{\"1\":{\"54\":1,\"68\":1,\"72\":1,\"124\":1,\"136\":2}}],[\"acceptance\",{\"1\":{\"243\":1}}],[\"accessing\",{\"1\":{\"142\":1,\"330\":3}}],[\"according\",{\"1\":{\"191\":1}}],[\"accidental\",{\"1\":{\"18\":1,\"28\":1}}],[\"achievable\",{\"1\":{\"69\":1}}],[\"achieve\",{\"1\":{\"274\":1}}],[\"achieves\",{\"1\":{\"67\":1}}],[\"achieved\",{\"1\":{\"13\":1,\"28\":1}}],[\"across\",{\"1\":{\"67\":1,\"136\":1,\"286\":2}}],[\"attach\",{\"1\":{\"299\":1}}],[\"attached\",{\"1\":{\"21\":1}}],[\"attention\",{\"1\":{\"243\":1}}],[\"attempting\",{\"1\":{\"68\":1}}],[\"attempts\",{\"1\":{\"68\":1,\"253\":1}}],[\"attempt\",{\"1\":{\"63\":1}}],[\"attrs\",{\"0\":{\"202\":1}}],[\"at\",{\"1\":{\"17\":1,\"54\":1,\"56\":1,\"58\":1,\"59\":1,\"63\":1,\"69\":2,\"72\":1,\"78\":1,\"84\":1,\"101\":1,\"105\":1,\"106\":1,\"107\":1,\"108\":1,\"109\":1,\"110\":2,\"115\":1,\"118\":1,\"119\":1,\"123\":2,\"124\":1,\"126\":1,\"128\":1,\"130\":1,\"132\":1,\"134\":1,\"135\":1,\"136\":1,\"138\":1,\"144\":1,\"146\":1,\"170\":1,\"174\":1,\"177\":3,\"178\":1,\"182\":1,\"183\":1,\"222\":1,\"240\":1,\"241\":1,\"244\":1,\"253\":2,\"266\":1,\"276\":1,\"283\":1,\"287\":1,\"289\":1,\"293\":1,\"304\":1,\"318\":1,\"332\":1,\"336\":1,\"337\":1,\"363\":2}}],[\"asked\",{\"1\":{\"256\":1}}],[\"asts\",{\"1\":{\"266\":4}}],[\"ast\",{\"1\":{\"130\":1,\"266\":4}}],[\"asterisks\",{\"1\":{\"13\":1}}],[\"ascii\",{\"1\":{\"259\":3}}],[\"asciinema\",{\"1\":{\"101\":4}}],[\"asciicast\",{\"1\":{\"101\":2}}],[\"aspell\",{\"0\":{\"350\":1},\"1\":{\"101\":1,\"255\":3,\"342\":5,\"345\":1,\"346\":2,\"347\":1,\"351\":3}}],[\"aside\",{\"1\":{\"24\":1,\"231\":1,\"274\":1}}],[\"associated\",{\"1\":{\"266\":1}}],[\"assuming\",{\"1\":{\"253\":1}}],[\"assumed\",{\"1\":{\"128\":1,\"136\":1}}],[\"assumes\",{\"1\":{\"7\":1,\"34\":1,\"123\":1,\"305\":1}}],[\"assets\",{\"1\":{\"222\":1}}],[\"assigning\",{\"1\":{\"331\":1}}],[\"assignees\",{\"1\":{\"142\":1}}],[\"assigned\",{\"1\":{\"16\":1,\"77\":1,\"313\":1}}],[\"assign\",{\"1\":{\"111\":1,\"127\":1,\"128\":2,\"329\":1,\"330\":3,\"340\":1}}],[\"assigns\",{\"1\":{\"57\":1,\"154\":2}}],[\"assignments\",{\"1\":{\"15\":1}}],[\"assignment\",{\"1\":{\"7\":1,\"15\":1,\"330\":1}}],[\"as\",{\"1\":{\"7\":2,\"8\":1,\"14\":1,\"16\":2,\"18\":2,\"21\":1,\"27\":2,\"42\":3,\"55\":2,\"57\":4,\"58\":4,\"62\":2,\"63\":4,\"64\":5,\"66\":2,\"67\":2,\"73\":1,\"74\":1,\"75\":3,\"76\":2,\"85\":2,\"93\":1,\"104\":2,\"105\":1,\"108\":4,\"110\":1,\"111\":1,\"118\":1,\"123\":2,\"126\":2,\"128\":5,\"131\":1,\"132\":3,\"134\":1,\"136\":8,\"137\":1,\"140\":2,\"141\":1,\"142\":4,\"145\":1,\"162\":1,\"166\":1,\"177\":2,\"178\":2,\"220\":1,\"239\":1,\"240\":1,\"243\":2,\"244\":1,\"249\":1,\"252\":2,\"253\":1,\"254\":1,\"261\":1,\"264\":4,\"266\":1,\"270\":1,\"274\":1,\"277\":4,\"281\":1,\"287\":2,\"295\":1,\"299\":8,\"300\":5,\"304\":2,\"311\":1,\"314\":2,\"315\":1,\"317\":1,\"329\":2,\"330\":2,\"331\":3,\"332\":2,\"338\":2,\"339\":2,\"342\":1,\"347\":3,\"348\":1,\"358\":1,\"363\":1}}],[\"adhere\",{\"1\":{\"311\":1}}],[\"administrating\",{\"1\":{\"287\":1}}],[\"adapted\",{\"1\":{\"253\":1}}],[\"adjusted\",{\"1\":{\"110\":1}}],[\"adjacent\",{\"1\":{\"91\":1,\"132\":1}}],[\"advantage\",{\"1\":{\"126\":1}}],[\"advantages\",{\"1\":{\"66\":1}}],[\"advancements\",{\"1\":{\"62\":1,\"84\":1,\"146\":1}}],[\"advanced\",{\"1\":{\"4\":1}}],[\"addeventlistener\",{\"1\":{\"214\":1}}],[\"added\",{\"1\":{\"63\":1,\"105\":1,\"106\":1,\"108\":2,\"110\":4,\"114\":1,\"115\":1,\"123\":1,\"124\":1,\"126\":2,\"128\":4,\"130\":5,\"134\":3,\"136\":4,\"138\":4,\"142\":4,\"143\":1,\"153\":1,\"157\":1,\"161\":1,\"165\":2,\"177\":5,\"178\":1,\"256\":1}}],[\"adds\",{\"1\":{\"170\":1}}],[\"addheading\",{\"1\":{\"126\":1}}],[\"adding\",{\"1\":{\"110\":1,\"123\":1,\"126\":1,\"130\":1,\"281\":1}}],[\"additional\",{\"1\":{\"19\":1,\"56\":1,\"101\":1,\"128\":2,\"134\":2,\"136\":2,\"255\":1}}],[\"addition\",{\"1\":{\"4\":1,\"128\":1,\"157\":1,\"275\":1}}],[\"addresses\",{\"1\":{\"83\":1,\"175\":1}}],[\"addressing\",{\"1\":{\"65\":1,\"69\":1}}],[\"address\",{\"1\":{\"50\":1,\"61\":1,\"286\":1}}],[\"add\",{\"1\":{\"4\":1,\"105\":1,\"124\":1,\"128\":1,\"132\":1,\"137\":2,\"253\":1,\"254\":1,\"262\":1,\"277\":2,\"345\":1,\"348\":1,\"352\":1}}],[\"analogy\",{\"1\":{\"304\":1}}],[\"ancestral\",{\"1\":{\"304\":1}}],[\"answer\",{\"1\":{\"286\":1}}],[\"ansi\",{\"0\":{\"258\":1,\"262\":1,\"344\":1},\"1\":{\"123\":1,\"125\":2,\"144\":1,\"258\":3,\"259\":2,\"267\":2,\"282\":1,\"285\":2,\"344\":1,\"352\":2}}],[\"anti\",{\"1\":{\"168\":1}}],[\"annoying\",{\"1\":{\"63\":1,\"136\":1}}],[\"annotating\",{\"1\":{\"24\":1}}],[\"annotations\",{\"1\":{\"4\":1,\"57\":2,\"58\":1,\"75\":2}}],[\"annotate\",{\"1\":{\"17\":1,\"76\":1}}],[\"another\",{\"1\":{\"26\":1,\"54\":1,\"56\":1,\"66\":1,\"72\":1,\"92\":1,\"105\":1,\"123\":1,\"130\":1,\"157\":1,\"272\":1,\"277\":1,\"297\":1,\"305\":1,\"340\":1,\"342\":1}}],[\"angle\",{\"1\":{\"22\":1,\"300\":1}}],[\"anywhere\",{\"1\":{\"336\":1}}],[\"anyway\",{\"1\":{\"64\":1}}],[\"anyone\",{\"1\":{\"64\":1,\"128\":1,\"136\":1,\"291\":2}}],[\"anything\",{\"1\":{\"42\":1,\"305\":1,\"308\":1,\"334\":1,\"339\":1}}],[\"any\",{\"1\":{\"8\":1,\"9\":1,\"14\":1,\"15\":1,\"16\":1,\"21\":1,\"22\":2,\"28\":1,\"34\":1,\"38\":1,\"63\":1,\"66\":1,\"67\":1,\"80\":1,\"86\":1,\"105\":2,\"118\":1,\"123\":1,\"124\":1,\"126\":1,\"128\":3,\"130\":1,\"134\":2,\"136\":1,\"138\":1,\"141\":1,\"168\":2,\"177\":2,\"178\":1,\"241\":1,\"253\":3,\"266\":2,\"271\":1,\"275\":1,\"277\":2,\"289\":3,\"296\":1,\"302\":2,\"308\":3,\"331\":1,\"334\":1,\"335\":1,\"339\":1,\"349\":3,\"357\":5,\"360\":1}}],[\"an\",{\"1\":{\"6\":1,\"7\":3,\"14\":1,\"19\":1,\"21\":1,\"34\":2,\"38\":1,\"41\":1,\"60\":2,\"63\":2,\"75\":1,\"76\":1,\"79\":1,\"101\":1,\"102\":1,\"105\":2,\"107\":1,\"109\":1,\"110\":2,\"111\":1,\"118\":1,\"122\":2,\"125\":3,\"126\":1,\"128\":2,\"130\":1,\"132\":4,\"133\":3,\"134\":2,\"136\":3,\"137\":6,\"142\":1,\"162\":1,\"168\":1,\"178\":1,\"179\":3,\"188\":1,\"244\":1,\"249\":1,\"266\":1,\"271\":1,\"272\":2,\"274\":1,\"277\":1,\"279\":1,\"286\":5,\"290\":1,\"296\":1,\"299\":2,\"311\":1,\"312\":2,\"314\":1,\"329\":3,\"330\":7,\"331\":1,\"332\":4,\"338\":2,\"339\":1,\"340\":1,\"346\":1,\"347\":1,\"351\":1,\"352\":1,\"358\":1,\"360\":1}}],[\"andkill\",{\"1\":{\"274\":1}}],[\"andmurex\",{\"1\":{\"69\":1}}],[\"andnull\",{\"1\":{\"22\":1}}],[\"and\",{\"0\":{\"7\":1,\"8\":1,\"20\":1,\"54\":1,\"188\":1,\"200\":1,\"286\":1,\"287\":1,\"288\":1,\"338\":1},\"1\":{\"3\":3,\"4\":4,\"6\":3,\"7\":3,\"8\":3,\"10\":1,\"13\":1,\"14\":1,\"16\":1,\"18\":1,\"21\":3,\"22\":2,\"26\":1,\"27\":5,\"28\":1,\"29\":1,\"34\":1,\"41\":2,\"43\":1,\"47\":1,\"50\":2,\"52\":1,\"53\":2,\"54\":4,\"55\":1,\"56\":5,\"57\":4,\"58\":2,\"59\":3,\"61\":2,\"62\":3,\"63\":7,\"64\":8,\"66\":4,\"67\":6,\"68\":2,\"69\":3,\"70\":1,\"72\":4,\"73\":3,\"75\":4,\"78\":1,\"80\":1,\"83\":1,\"84\":1,\"85\":2,\"86\":1,\"87\":2,\"88\":1,\"89\":1,\"90\":1,\"94\":1,\"95\":1,\"98\":1,\"99\":1,\"101\":1,\"102\":2,\"103\":1,\"104\":1,\"105\":4,\"106\":1,\"107\":3,\"108\":5,\"109\":5,\"110\":4,\"111\":2,\"115\":1,\"117\":1,\"118\":5,\"119\":3,\"121\":1,\"122\":1,\"123\":10,\"124\":2,\"125\":5,\"126\":8,\"127\":3,\"128\":4,\"130\":4,\"131\":2,\"132\":2,\"134\":7,\"135\":2,\"136\":8,\"137\":1,\"138\":1,\"139\":1,\"140\":2,\"142\":3,\"143\":1,\"144\":3,\"145\":1,\"146\":1,\"154\":1,\"157\":1,\"162\":1,\"169\":1,\"170\":1,\"175\":1,\"177\":2,\"179\":1,\"181\":1,\"182\":1,\"183\":1,\"188\":1,\"191\":1,\"192\":2,\"196\":1,\"206\":1,\"221\":1,\"223\":3,\"232\":1,\"240\":1,\"241\":1,\"243\":2,\"244\":2,\"246\":2,\"252\":1,\"253\":7,\"256\":2,\"259\":2,\"260\":2,\"263\":1,\"264\":3,\"265\":4,\"266\":7,\"268\":4,\"270\":3,\"271\":1,\"272\":2,\"274\":2,\"277\":5,\"282\":1,\"283\":1,\"286\":5,\"287\":3,\"289\":2,\"290\":1,\"293\":2,\"295\":3,\"296\":1,\"297\":2,\"299\":6,\"300\":1,\"301\":1,\"304\":2,\"305\":2,\"310\":2,\"311\":3,\"312\":3,\"313\":1,\"314\":1,\"322\":1,\"329\":5,\"330\":3,\"331\":4,\"332\":4,\"335\":1,\"336\":1,\"337\":1,\"338\":3,\"339\":2,\"340\":2,\"347\":2,\"349\":1,\"351\":2,\"352\":2,\"353\":1,\"357\":3}}],[\"alert\",{\"1\":{\"214\":1}}],[\"although\",{\"1\":{\"299\":1}}],[\"alt\",{\"1\":{\"259\":20}}],[\"alt+5\",{\"1\":{\"365\":1}}],[\"alt+9\",{\"1\":{\"365\":1}}],[\"alt+2\",{\"1\":{\"365\":1}}],[\"alt+1\",{\"1\":{\"365\":2}}],[\"alt+b\",{\"1\":{\"177\":1}}],[\"alt+f\",{\"1\":{\"177\":1}}],[\"altered\",{\"1\":{\"134\":1,\"166\":1}}],[\"alternatives\",{\"1\":{\"138\":1}}],[\"alternative\",{\"1\":{\"67\":1,\"69\":1,\"110\":1,\"123\":1,\"346\":1}}],[\"altering\",{\"1\":{\"60\":1,\"79\":1,\"127\":1,\"352\":1}}],[\"alter\",{\"1\":{\"25\":1,\"57\":1,\"75\":1,\"109\":1,\"126\":1,\"127\":1,\"135\":1,\"166\":1,\"332\":1,\"333\":1,\"337\":1,\"348\":1,\"352\":1}}],[\"alters\",{\"1\":{\"9\":1,\"60\":1,\"79\":1}}],[\"align\",{\"0\":{\"201\":1},\"1\":{\"114\":1,\"201\":1}}],[\"aliased\",{\"1\":{\"57\":1}}],[\"aliases\",{\"0\":{\"31\":1},\"1\":{\"3\":1,\"31\":1,\"66\":1,\"110\":1,\"114\":1,\"118\":2,\"126\":2,\"153\":1,\"349\":1}}],[\"alias\",{\"1\":{\"31\":2,\"34\":1,\"110\":1,\"111\":2,\"126\":1,\"136\":1,\"177\":3,\"179\":2}}],[\"al\",{\"1\":{\"110\":1,\"122\":1,\"123\":1,\"128\":1,\"136\":1,\"154\":1,\"177\":1,\"266\":1,\"278\":1,\"310\":1}}],[\"algol\",{\"1\":{\"62\":1,\"63\":1,\"68\":1}}],[\"albeit\",{\"1\":{\"57\":1,\"138\":1,\"256\":1,\"274\":1}}],[\"always\",{\"1\":{\"56\":1,\"64\":1,\"76\":1,\"108\":1,\"126\":2,\"331\":1}}],[\"almost\",{\"1\":{\"55\":1,\"73\":1,\"136\":1,\"170\":1}}],[\"already\",{\"1\":{\"10\":1,\"58\":1,\"63\":1,\"64\":2,\"135\":2,\"253\":1,\"332\":2,\"342\":1}}],[\"also\",{\"0\":{\"60\":1,\"70\":1,\"79\":1,\"102\":1,\"107\":1,\"109\":1,\"111\":1,\"116\":1,\"120\":1,\"125\":1,\"127\":1,\"129\":1,\"131\":1,\"133\":1,\"135\":1,\"137\":1,\"139\":1,\"145\":1,\"179\":1,\"184\":1,\"263\":1,\"265\":1,\"267\":1,\"272\":1,\"285\":1,\"297\":1,\"301\":1,\"306\":1,\"312\":1,\"329\":1,\"332\":1,\"337\":1,\"340\":1,\"352\":1,\"366\":1},\"1\":{\"6\":1,\"13\":2,\"15\":1,\"16\":1,\"22\":1,\"24\":1,\"25\":1,\"28\":1,\"54\":1,\"55\":1,\"56\":1,\"57\":2,\"63\":1,\"67\":1,\"68\":1,\"72\":1,\"76\":1,\"90\":1,\"92\":1,\"93\":1,\"104\":1,\"105\":1,\"110\":1,\"123\":1,\"124\":1,\"126\":2,\"128\":1,\"130\":2,\"134\":1,\"232\":1,\"244\":2,\"256\":1,\"266\":1,\"274\":2,\"282\":2,\"290\":1,\"299\":2,\"303\":1,\"330\":2,\"339\":1,\"349\":3}}],[\"allocating\",{\"1\":{\"58\":1}}],[\"allowed\",{\"1\":{\"154\":1}}],[\"allowing\",{\"1\":{\"57\":1,\"128\":1,\"357\":1}}],[\"allow\",{\"1\":{\"7\":1,\"119\":1,\"130\":1,\"136\":1,\"142\":1,\"266\":1,\"357\":1,\"360\":1}}],[\"allows\",{\"1\":{\"4\":1,\"38\":1,\"66\":1,\"68\":1,\"105\":1,\"110\":1,\"123\":1,\"128\":1,\"136\":1,\"138\":1,\"157\":1,\"177\":2,\"290\":2,\"299\":1,\"304\":1}}],[\"all\",{\"0\":{\"360\":1},\"1\":{\"4\":1,\"7\":1,\"12\":1,\"14\":1,\"21\":1,\"28\":4,\"45\":1,\"54\":1,\"55\":2,\"56\":1,\"62\":1,\"64\":1,\"68\":1,\"72\":1,\"73\":2,\"86\":1,\"87\":1,\"105\":1,\"106\":1,\"107\":1,\"110\":1,\"111\":1,\"115\":1,\"118\":3,\"125\":1,\"126\":1,\"136\":2,\"138\":1,\"145\":1,\"154\":1,\"177\":1,\"179\":1,\"231\":1,\"286\":1,\"289\":1,\"293\":1,\"309\":1,\"310\":1,\"328\":1,\"330\":3,\"332\":1,\"341\":1,\"353\":1,\"357\":2,\"360\":1,\"365\":1}}],[\"along\",{\"1\":{\"4\":1,\"24\":1,\"66\":1,\"127\":1,\"137\":1,\"352\":1}}],[\"a\",{\"0\":{\"62\":1,\"71\":1,\"248\":1,\"339\":1},\"1\":{\"4\":2,\"5\":1,\"7\":6,\"8\":4,\"9\":2,\"12\":1,\"13\":7,\"17\":1,\"18\":1,\"21\":3,\"22\":1,\"25\":1,\"27\":4,\"28\":2,\"29\":5,\"31\":1,\"34\":1,\"36\":2,\"37\":1,\"41\":1,\"42\":2,\"43\":1,\"45\":1,\"49\":3,\"52\":3,\"53\":2,\"54\":7,\"55\":4,\"56\":7,\"57\":3,\"58\":3,\"59\":3,\"60\":3,\"62\":8,\"63\":7,\"64\":4,\"66\":9,\"67\":4,\"68\":3,\"69\":2,\"70\":4,\"71\":1,\"72\":7,\"73\":5,\"75\":2,\"76\":1,\"77\":3,\"78\":1,\"79\":1,\"83\":1,\"87\":4,\"89\":1,\"91\":1,\"92\":1,\"93\":1,\"94\":1,\"95\":2,\"97\":1,\"98\":1,\"101\":4,\"102\":2,\"103\":1,\"105\":6,\"107\":3,\"108\":6,\"109\":4,\"110\":2,\"111\":6,\"112\":1,\"116\":1,\"118\":6,\"119\":1,\"120\":1,\"121\":3,\"122\":1,\"123\":7,\"125\":11,\"126\":9,\"127\":7,\"128\":9,\"130\":5,\"131\":4,\"132\":5,\"133\":2,\"134\":5,\"135\":6,\"136\":19,\"137\":9,\"138\":2,\"139\":1,\"141\":3,\"145\":4,\"149\":1,\"150\":4,\"153\":1,\"157\":1,\"166\":1,\"168\":1,\"170\":2,\"175\":1,\"177\":8,\"179\":7,\"192\":1,\"193\":1,\"197\":6,\"202\":1,\"205\":1,\"209\":1,\"214\":1,\"215\":1,\"222\":2,\"231\":1,\"239\":1,\"243\":1,\"244\":1,\"245\":1,\"247\":1,\"252\":1,\"253\":3,\"254\":2,\"256\":4,\"258\":1,\"260\":2,\"261\":2,\"263\":6,\"264\":6,\"265\":2,\"266\":7,\"267\":2,\"270\":2,\"271\":1,\"272\":1,\"274\":1,\"275\":2,\"276\":1,\"277\":3,\"281\":1,\"282\":1,\"283\":5,\"284\":1,\"285\":2,\"286\":4,\"287\":4,\"289\":1,\"295\":2,\"296\":1,\"297\":1,\"298\":1,\"299\":8,\"300\":6,\"301\":1,\"302\":4,\"303\":2,\"304\":9,\"306\":1,\"307\":1,\"311\":3,\"313\":2,\"314\":3,\"317\":3,\"318\":3,\"319\":2,\"320\":1,\"322\":2,\"323\":2,\"324\":1,\"329\":6,\"330\":20,\"331\":6,\"332\":8,\"333\":1,\"334\":4,\"335\":1,\"337\":4,\"338\":5,\"339\":4,\"340\":5,\"341\":1,\"342\":2,\"347\":4,\"348\":2,\"352\":7,\"353\":1,\"355\":1,\"357\":3,\"360\":1,\"363\":2}}],[\"arises\",{\"1\":{\"351\":1}}],[\"arithmetic\",{\"1\":{\"330\":1}}],[\"args\",{\"0\":{\"322\":1,\"325\":1}}],[\"arguably\",{\"1\":{\"66\":1}}],[\"argue\",{\"1\":{\"66\":1}}],[\"arguments\",{\"1\":{\"18\":1,\"128\":1}}],[\"architecture\",{\"1\":{\"243\":1,\"244\":1}}],[\"archlinux\",{\"0\":{\"249\":1},\"1\":{\"110\":1,\"245\":1,\"249\":2}}],[\"arm\",{\"1\":{\"232\":1,\"235\":1,\"236\":1,\"237\":1,\"238\":1,\"239\":1,\"241\":1}}],[\"arm64\",{\"1\":{\"134\":1,\"232\":2,\"235\":1,\"236\":1,\"237\":1,\"238\":1}}],[\"arr\",{\"1\":{\"330\":1}}],[\"arrow\",{\"1\":{\"120\":1,\"183\":1,\"277\":1,\"285\":1,\"306\":1,\"337\":1}}],[\"array\",{\"1\":{\"27\":1,\"38\":1,\"49\":1,\"52\":1,\"56\":2,\"57\":3,\"59\":1,\"60\":3,\"70\":1,\"75\":1,\"79\":2,\"105\":1,\"107\":2,\"122\":1,\"125\":3,\"126\":1,\"127\":1,\"133\":1,\"136\":1,\"137\":6,\"142\":2,\"145\":2,\"177\":1,\"179\":1,\"311\":1,\"322\":1,\"323\":1,\"329\":3,\"330\":19,\"332\":3,\"340\":1,\"347\":2,\"348\":1,\"352\":2}}],[\"arrays\",{\"0\":{\"19\":1,\"58\":1},\"1\":{\"3\":1,\"19\":2,\"27\":1,\"52\":1,\"57\":1,\"59\":1,\"60\":1,\"75\":1,\"76\":2,\"79\":1,\"92\":1,\"105\":1,\"110\":1,\"130\":3,\"136\":3,\"137\":1,\"144\":1,\"145\":1,\"330\":3}}],[\"art\",{\"1\":{\"59\":1}}],[\"article\",{\"1\":{\"50\":1,\"56\":2,\"57\":1,\"61\":1,\"66\":1,\"71\":1}}],[\"articles\",{\"0\":{\"48\":1,\"81\":1}}],[\"around\",{\"1\":{\"55\":1,\"56\":1,\"63\":1,\"66\":1,\"73\":2,\"77\":1,\"101\":1,\"108\":1,\"119\":1,\"126\":1,\"136\":1,\"170\":1,\"174\":1,\"274\":1,\"299\":1}}],[\"areas\",{\"1\":{\"66\":1}}],[\"aren\",{\"0\":{\"55\":1,\"73\":1},\"1\":{\"52\":1,\"68\":1,\"330\":1}}],[\"are\",{\"0\":{\"287\":1},\"1\":{\"1\":1,\"6\":2,\"7\":2,\"8\":2,\"12\":2,\"14\":2,\"16\":3,\"18\":2,\"19\":1,\"21\":2,\"22\":1,\"27\":1,\"33\":2,\"34\":2,\"37\":2,\"39\":1,\"56\":1,\"59\":1,\"63\":2,\"65\":1,\"66\":1,\"68\":1,\"69\":1,\"76\":4,\"78\":1,\"86\":1,\"91\":1,\"104\":1,\"105\":3,\"108\":1,\"110\":4,\"114\":4,\"118\":4,\"121\":1,\"122\":1,\"126\":5,\"128\":4,\"130\":1,\"132\":1,\"134\":4,\"138\":1,\"142\":2,\"144\":2,\"166\":1,\"169\":2,\"174\":1,\"177\":3,\"183\":1,\"192\":1,\"221\":1,\"222\":1,\"231\":3,\"243\":1,\"246\":1,\"253\":2,\"254\":1,\"260\":1,\"262\":1,\"265\":1,\"266\":5,\"279\":1,\"280\":1,\"285\":1,\"286\":2,\"287\":2,\"289\":1,\"290\":1,\"299\":1,\"300\":2,\"304\":2,\"305\":1,\"307\":1,\"308\":1,\"309\":1,\"311\":1,\"314\":1,\"317\":1,\"328\":1,\"330\":1,\"331\":1,\"333\":3,\"335\":1,\"338\":1,\"341\":1,\"344\":1,\"347\":1,\"349\":6,\"351\":1,\"352\":1,\"362\":1}}],[\"mcilroy\",{\"1\":{\"304\":1}}],[\"mkdir\",{\"1\":{\"253\":1}}],[\"mkarray\",{\"1\":{\"60\":1,\"79\":1,\"122\":1,\"123\":2,\"125\":3,\"136\":1,\"137\":2}}],[\"m1\",{\"1\":{\"232\":1}}],[\"mb\",{\"1\":{\"231\":2}}],[\"ms\",{\"1\":{\"221\":1}}],[\"mrhope\",{\"1\":{\"207\":2}}],[\"mr\",{\"1\":{\"207\":1,\"215\":1}}],[\"md\",{\"1\":{\"196\":1,\"276\":1,\"357\":2}}],[\"mx\",{\"1\":{\"178\":1,\"253\":1,\"268\":2}}],[\"myword\",{\"1\":{\"348\":1}}],[\"myself\",{\"1\":{\"66\":1}}],[\"my\",{\"0\":{\"55\":1,\"73\":1},\"1\":{\"52\":1,\"63\":1,\"66\":1,\"134\":1,\"256\":1,\"286\":2,\"289\":1}}],[\"micro\",{\"1\":{\"170\":1}}],[\"microsoft\",{\"1\":{\"58\":1,\"66\":1,\"244\":1,\"299\":1}}],[\"mirror\",{\"1\":{\"165\":1}}],[\"mime\",{\"1\":{\"128\":1}}],[\"mimic\",{\"1\":{\"119\":1}}],[\"mix\",{\"1\":{\"126\":1}}],[\"mind\",{\"1\":{\"274\":1}}],[\"minor\",{\"1\":{\"89\":1,\"101\":1,\"105\":1,\"108\":2,\"110\":1,\"124\":1,\"130\":1,\"132\":1,\"134\":1,\"153\":1,\"170\":1,\"178\":1}}],[\"minimal\",{\"1\":{\"284\":1}}],[\"minimum\",{\"1\":{\"134\":1,\"136\":1}}],[\"minimize\",{\"1\":{\"63\":1}}],[\"minified\",{\"1\":{\"75\":2}}],[\"migrating\",{\"1\":{\"87\":1,\"136\":1}}],[\"might\",{\"1\":{\"8\":1,\"9\":1,\"63\":2,\"69\":1,\"76\":1,\"91\":1,\"104\":1,\"105\":2,\"113\":1,\"126\":1,\"132\":1,\"266\":1,\"280\":1,\"302\":1,\"303\":1,\"308\":1,\"311\":1,\"342\":1,\"347\":2}}],[\"misspelling\",{\"1\":{\"347\":1}}],[\"misspelt\",{\"1\":{\"347\":2}}],[\"missing\",{\"1\":{\"118\":1,\"136\":1,\"138\":2,\"178\":1}}],[\"mission\",{\"1\":{\"68\":1}}],[\"misbehaving\",{\"1\":{\"45\":1}}],[\"middle\",{\"1\":{\"336\":1}}],[\"mid\",{\"1\":{\"13\":1,\"126\":1,\"318\":1,\"330\":1}}],[\"must\",{\"1\":{\"347\":1}}],[\"muscle\",{\"1\":{\"55\":1,\"73\":1}}],[\"mutable\",{\"1\":{\"157\":1,\"330\":3}}],[\"mutex\",{\"1\":{\"108\":1,\"138\":1}}],[\"much\",{\"1\":{\"29\":1,\"55\":1,\"62\":2,\"73\":1,\"157\":1,\"168\":1,\"274\":1,\"277\":1}}],[\"multiline\",{\"1\":{\"123\":2,\"136\":1}}],[\"multitude\",{\"1\":{\"63\":1,\"78\":1}}],[\"multics\",{\"1\":{\"62\":1}}],[\"multi\",{\"1\":{\"13\":1}}],[\"multiple\",{\"1\":{\"13\":1,\"21\":1,\"126\":2,\"132\":1,\"136\":1,\"174\":1,\"265\":2,\"274\":1,\"286\":2,\"287\":1,\"330\":3,\"334\":1}}],[\"murexout\",{\"1\":{\"330\":1}}],[\"murex\",{\"0\":{\"0\":1,\"57\":1,\"68\":1,\"74\":1,\"82\":1,\"83\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"89\":1,\"90\":1,\"91\":1,\"92\":1,\"93\":1,\"94\":1,\"95\":1,\"96\":1,\"97\":1,\"98\":1,\"99\":1,\"101\":1,\"103\":1,\"108\":1,\"110\":1,\"112\":1,\"117\":1,\"121\":1,\"126\":1,\"128\":1,\"130\":1,\"132\":1,\"134\":1,\"136\":1,\"138\":1,\"140\":1,\"146\":1,\"175\":1,\"180\":1,\"273\":1,\"298\":1,\"300\":1,\"307\":1,\"308\":1,\"309\":1,\"310\":1,\"324\":1,\"325\":1,\"343\":1,\"346\":1},\"1\":{\"1\":1,\"4\":3,\"5\":1,\"6\":1,\"7\":2,\"8\":2,\"9\":1,\"10\":2,\"12\":1,\"13\":3,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"21\":2,\"22\":1,\"27\":2,\"29\":1,\"32\":1,\"34\":1,\"37\":1,\"43\":1,\"45\":1,\"47\":1,\"52\":1,\"57\":7,\"58\":3,\"59\":2,\"63\":1,\"68\":2,\"70\":3,\"73\":1,\"74\":1,\"75\":1,\"76\":1,\"77\":1,\"83\":1,\"84\":2,\"86\":1,\"101\":1,\"102\":6,\"107\":1,\"109\":3,\"110\":1,\"111\":2,\"120\":1,\"123\":5,\"125\":5,\"126\":4,\"127\":3,\"128\":9,\"129\":1,\"130\":1,\"131\":2,\"133\":1,\"134\":4,\"135\":5,\"136\":4,\"137\":5,\"138\":1,\"139\":1,\"144\":1,\"145\":2,\"146\":2,\"175\":1,\"178\":1,\"179\":3,\"182\":1,\"184\":1,\"232\":3,\"234\":1,\"235\":4,\"236\":4,\"237\":4,\"238\":4,\"239\":3,\"240\":1,\"241\":5,\"243\":5,\"244\":1,\"249\":1,\"250\":1,\"251\":1,\"253\":10,\"255\":2,\"256\":1,\"258\":1,\"262\":2,\"263\":1,\"265\":2,\"266\":4,\"267\":1,\"268\":6,\"271\":1,\"272\":5,\"273\":1,\"274\":2,\"275\":2,\"277\":2,\"278\":1,\"280\":1,\"283\":2,\"285\":2,\"286\":5,\"287\":5,\"289\":3,\"290\":1,\"291\":4,\"292\":1,\"293\":1,\"296\":1,\"297\":4,\"298\":1,\"299\":1,\"300\":1,\"301\":2,\"302\":1,\"303\":2,\"304\":2,\"306\":1,\"307\":4,\"308\":3,\"309\":2,\"310\":1,\"311\":15,\"312\":3,\"313\":2,\"314\":3,\"325\":1,\"326\":1,\"329\":3,\"330\":18,\"331\":1,\"332\":2,\"333\":3,\"335\":1,\"338\":3,\"340\":3,\"341\":1,\"345\":2,\"347\":1,\"348\":4,\"349\":1,\"352\":4,\"360\":1,\"366\":2}}],[\"m\",{\"1\":{\"9\":2,\"32\":1,\"66\":1,\"69\":1,\"330\":1}}],[\"moment\",{\"1\":{\"305\":1}}],[\"morgan\",{\"1\":{\"286\":1}}],[\"more\",{\"1\":{\"1\":1,\"5\":1,\"12\":3,\"16\":1,\"17\":1,\"18\":1,\"21\":2,\"22\":1,\"28\":3,\"29\":1,\"31\":1,\"32\":1,\"33\":1,\"34\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"41\":1,\"42\":1,\"43\":1,\"50\":1,\"55\":1,\"57\":1,\"58\":2,\"59\":1,\"61\":1,\"62\":1,\"63\":1,\"64\":2,\"66\":4,\"67\":1,\"68\":1,\"69\":1,\"73\":1,\"99\":1,\"101\":2,\"106\":2,\"110\":2,\"114\":3,\"115\":2,\"118\":1,\"124\":1,\"126\":2,\"130\":1,\"132\":1,\"136\":2,\"138\":1,\"142\":4,\"149\":1,\"157\":3,\"177\":1,\"182\":1,\"196\":1,\"220\":1,\"239\":1,\"252\":1,\"256\":1,\"264\":1,\"280\":1,\"284\":1,\"286\":1,\"287\":1,\"293\":1,\"299\":2,\"304\":1,\"305\":3,\"311\":1,\"314\":1,\"330\":1,\"331\":2,\"361\":1}}],[\"mock\",{\"1\":{\"266\":1}}],[\"mounts\",{\"1\":{\"128\":1}}],[\"move\",{\"1\":{\"126\":1}}],[\"mon\",{\"1\":{\"209\":1}}],[\"months\",{\"1\":{\"75\":1}}],[\"monday\",{\"1\":{\"56\":3,\"57\":3,\"58\":1}}],[\"motivation\",{\"1\":{\"71\":1}}],[\"modify\",{\"1\":{\"105\":1}}],[\"modifying\",{\"1\":{\"105\":1}}],[\"modified\",{\"1\":{\"54\":1,\"72\":1,\"270\":1,\"295\":1}}],[\"modulerunmode\",{\"1\":{\"330\":1}}],[\"module\",{\"0\":{\"269\":2,\"294\":2,\"321\":1},\"1\":{\"101\":1,\"108\":1,\"134\":4,\"150\":4,\"157\":1,\"268\":3,\"270\":3,\"271\":1,\"286\":1,\"287\":2,\"291\":1,\"295\":3,\"296\":1,\"309\":1,\"311\":1,\"314\":1,\"321\":1}}],[\"modules=\",{\"1\":{\"311\":1}}],[\"modules\",{\"0\":{\"286\":1,\"287\":1,\"288\":1,\"309\":1},\"1\":{\"33\":1,\"102\":2,\"108\":1,\"109\":2,\"125\":2,\"126\":1,\"134\":1,\"157\":1,\"268\":3,\"272\":2,\"286\":2,\"287\":4,\"289\":1,\"307\":1,\"308\":3,\"309\":1,\"310\":1,\"311\":1,\"312\":2,\"329\":2}}],[\"mode\",{\"1\":{\"95\":1,\"121\":1,\"134\":1,\"162\":1,\"274\":1,\"362\":2,\"363\":2,\"364\":1}}],[\"modes\",{\"1\":{\"90\":1,\"109\":1,\"134\":1,\"135\":1,\"267\":1,\"306\":1,\"333\":2}}],[\"modern\",{\"0\":{\"65\":1},\"1\":{\"55\":1,\"62\":1,\"65\":1,\"66\":1,\"73\":1}}],[\"mostly\",{\"1\":{\"86\":1,\"138\":1}}],[\"most\",{\"1\":{\"4\":1,\"6\":1,\"36\":1,\"53\":1,\"54\":1,\"56\":1,\"67\":1,\"72\":1,\"243\":2,\"252\":1,\"253\":1,\"278\":1,\"308\":1,\"346\":1,\"347\":1,\"351\":1}}],[\"madeupword\",{\"1\":{\"347\":2}}],[\"malicious\",{\"1\":{\"268\":1}}],[\"magenta\",{\"1\":{\"259\":4}}],[\"max\",{\"1\":{\"110\":1}}],[\"machine\",{\"1\":{\"289\":2,\"310\":1,\"326\":1}}],[\"machines\",{\"1\":{\"110\":2,\"286\":1}}],[\"macports\",{\"0\":{\"251\":1},\"1\":{\"232\":1,\"245\":1}}],[\"macs\",{\"1\":{\"232\":1}}],[\"macro\",{\"1\":{\"130\":2,\"136\":1}}],[\"macos\",{\"0\":{\"232\":1,\"243\":1},\"1\":{\"4\":1,\"58\":1,\"230\":2,\"243\":2,\"246\":1,\"253\":1}}],[\"major\",{\"1\":{\"87\":1,\"98\":1,\"101\":1,\"103\":2,\"112\":1,\"117\":1,\"136\":1}}],[\"marshal\",{\"1\":{\"149\":1}}],[\"marshaller\",{\"1\":{\"149\":1}}],[\"marshallers\",{\"1\":{\"136\":1}}],[\"marshalled\",{\"1\":{\"118\":1}}],[\"march\",{\"1\":{\"75\":2}}],[\"mark\",{\"0\":{\"204\":1},\"1\":{\"204\":1}}],[\"markdown\",{\"0\":{\"191\":1,\"192\":1,\"193\":1,\"194\":1},\"1\":{\"28\":1,\"186\":1,\"191\":2,\"192\":3,\"193\":1,\"194\":3,\"195\":2,\"196\":1,\"197\":1,\"213\":1,\"221\":1,\"222\":2,\"357\":2},\"2\":{\"219\":1}}],[\"marks\",{\"1\":{\"27\":1,\"56\":1,\"63\":3}}],[\"masked\",{\"1\":{\"63\":1}}],[\"massively\",{\"1\":{\"101\":1}}],[\"massive\",{\"1\":{\"63\":1,\"134\":1,\"136\":1}}],[\"mastering\",{\"1\":{\"59\":1}}],[\"matter\",{\"1\":{\"256\":1}}],[\"math\",{\"1\":{\"166\":1}}],[\"mathematical\",{\"1\":{\"111\":1,\"127\":1,\"137\":1,\"329\":1,\"340\":1}}],[\"maturity\",{\"1\":{\"136\":1}}],[\"mature\",{\"1\":{\"62\":1}}],[\"matcher\",{\"1\":{\"357\":1}}],[\"matched\",{\"1\":{\"136\":1}}],[\"matches\",{\"1\":{\"9\":1,\"128\":1,\"144\":1,\"243\":1,\"244\":1}}],[\"match\",{\"1\":{\"66\":1,\"105\":1,\"126\":1,\"130\":1,\"357\":5}}],[\"matching\",{\"1\":{\"28\":3,\"77\":1,\"109\":2,\"142\":1,\"277\":1,\"330\":2,\"363\":1}}],[\"making\",{\"1\":{\"59\":1,\"123\":1}}],[\"makes\",{\"1\":{\"6\":1,\"63\":1,\"64\":1,\"68\":1,\"106\":1,\"115\":1,\"124\":1,\"126\":1,\"137\":1,\"268\":1,\"331\":2}}],[\"make\",{\"1\":{\"6\":1,\"55\":1,\"62\":1,\"63\":1,\"64\":1,\"67\":1,\"68\":1,\"73\":1,\"85\":1,\"90\":1,\"123\":1,\"124\":1,\"134\":1,\"138\":1,\"140\":1,\"153\":1,\"157\":1,\"256\":1,\"262\":1,\"287\":1,\"345\":1,\"348\":1}}],[\"mapped\",{\"1\":{\"128\":1}}],[\"maps\",{\"1\":{\"76\":1,\"138\":1,\"149\":1,\"166\":1,\"330\":1}}],[\"map\",{\"1\":{\"39\":1,\"60\":1,\"79\":1,\"126\":2,\"127\":1,\"133\":1,\"137\":1,\"145\":1,\"179\":1,\"259\":2,\"330\":1,\"332\":1}}],[\"managing\",{\"1\":{\"287\":1}}],[\"management\",{\"1\":{\"287\":1,\"330\":1}}],[\"manage\",{\"1\":{\"127\":1}}],[\"managed\",{\"1\":{\"110\":1,\"136\":1,\"309\":1}}],[\"manager\",{\"0\":{\"248\":1},\"1\":{\"1\":1,\"63\":1,\"102\":1,\"231\":1,\"245\":1,\"252\":1,\"272\":1,\"286\":1,\"287\":1,\"297\":1,\"312\":1}}],[\"manual\",{\"1\":{\"280\":1}}],[\"manually\",{\"1\":{\"271\":1,\"296\":1}}],[\"man\",{\"1\":{\"110\":1,\"126\":1,\"134\":2,\"135\":1,\"137\":1}}],[\"many\",{\"1\":{\"54\":1,\"56\":1,\"59\":1,\"63\":2,\"64\":3,\"66\":5,\"67\":2,\"69\":2,\"72\":1,\"114\":2,\"136\":1,\"311\":1,\"328\":1,\"363\":1}}],[\"manipulate\",{\"1\":{\"21\":1}}],[\"maintainable\",{\"1\":{\"106\":1,\"115\":1}}],[\"maintenance\",{\"0\":{\"106\":1,\"115\":1,\"119\":1,\"124\":1,\"143\":1},\"1\":{\"136\":1,\"138\":1}}],[\"mainly\",{\"1\":{\"88\":1,\"97\":1,\"110\":1,\"112\":1}}],[\"mainframes\",{\"1\":{\"55\":1,\"73\":1}}],[\"main\",{\"1\":{\"21\":1,\"136\":1}}],[\"may\",{\"1\":{\"17\":1,\"66\":2,\"75\":2,\"123\":1,\"241\":1,\"253\":2,\"254\":1,\"351\":1}}],[\"mechanism\",{\"1\":{\"304\":1}}],[\"mechanical\",{\"1\":{\"110\":1}}],[\"mermaid\",{\"0\":{\"211\":1}}],[\"merge\",{\"1\":{\"154\":2,\"157\":1,\"161\":1,\"166\":2,\"348\":1}}],[\"merged\",{\"1\":{\"118\":1,\"126\":1,\"177\":1}}],[\"me\",{\"1\":{\"64\":1,\"66\":1,\"286\":2,\"347\":1}}],[\"memory\",{\"1\":{\"55\":1,\"73\":1,\"105\":1,\"128\":1,\"130\":1,\"170\":1,\"293\":1}}],[\"meet\",{\"1\":{\"37\":1}}],[\"met\",{\"1\":{\"265\":1}}],[\"metric\",{\"1\":{\"123\":1}}],[\"metadata\",{\"1\":{\"293\":1}}],[\"meta\",{\"1\":{\"25\":1,\"177\":3,\"223\":1,\"314\":1}}],[\"method\",{\"0\":{\"318\":1},\"1\":{\"8\":2,\"108\":2,\"118\":2,\"120\":1,\"126\":1,\"130\":1,\"136\":1,\"166\":1,\"178\":1,\"179\":1,\"277\":3,\"285\":1,\"300\":2,\"314\":1,\"318\":1}}],[\"methods\",{\"0\":{\"8\":1},\"1\":{\"3\":1,\"8\":2,\"21\":3,\"110\":2,\"118\":1,\"120\":1,\"128\":1,\"179\":1,\"277\":2,\"285\":1,\"299\":1}}],[\"messages\",{\"1\":{\"95\":1,\"121\":1,\"123\":1,\"136\":1,\"142\":1,\"170\":1,\"174\":1}}],[\"message\",{\"1\":{\"22\":1,\"23\":2,\"32\":1,\"118\":1,\"123\":1,\"126\":1,\"128\":1,\"157\":1,\"158\":1,\"304\":1,\"308\":1}}],[\"meaning\",{\"1\":{\"154\":1}}],[\"means\",{\"1\":{\"22\":1,\"41\":1,\"55\":1,\"73\":1,\"128\":3,\"266\":1,\"333\":1,\"351\":1}}],[\"mean\",{\"1\":{\"4\":1,\"123\":1}}],[\"fb7b79d592672d90ecb733944e144d722f77fdee\",{\"1\":{\"289\":1}}],[\"f9\",{\"1\":{\"259\":1}}],[\"f8\",{\"1\":{\"259\":1}}],[\"f7\",{\"1\":{\"259\":1}}],[\"f6\",{\"1\":{\"259\":1}}],[\"f5\",{\"1\":{\"259\":1}}],[\"f4\",{\"1\":{\"259\":2}}],[\"f3\",{\"1\":{\"259\":2}}],[\"f2\",{\"1\":{\"259\":2}}],[\"f12\",{\"1\":{\"259\":1}}],[\"f11\",{\"1\":{\"259\":1}}],[\"f10\",{\"1\":{\"259\":1}}],[\"f1\",{\"1\":{\"259\":2}}],[\"fg\",{\"1\":{\"105\":1,\"107\":1,\"114\":1,\"116\":1,\"330\":2}}],[\"fuubar\",{\"1\":{\"347\":2}}],[\"further\",{\"1\":{\"231\":1,\"252\":2,\"253\":1}}],[\"furthermore\",{\"1\":{\"62\":1}}],[\"fuzzy\",{\"1\":{\"153\":1,\"357\":3}}],[\"fuzzing\",{\"1\":{\"130\":1}}],[\"fuzz\",{\"1\":{\"130\":1}}],[\"fully\",{\"1\":{\"246\":1}}],[\"full\",{\"0\":{\"364\":1},\"1\":{\"123\":1,\"276\":1,\"283\":1,\"324\":1}}],[\"func\",{\"0\":{\"347\":1},\"1\":{\"113\":1,\"130\":2,\"177\":2,\"181\":2,\"283\":1,\"346\":1,\"347\":1}}],[\"functiontrypipe\",{\"1\":{\"330\":1}}],[\"functionality\",{\"1\":{\"104\":1,\"165\":1,\"299\":1}}],[\"function\",{\"1\":{\"8\":2,\"29\":1,\"32\":2,\"34\":1,\"42\":2,\"43\":2,\"60\":1,\"62\":1,\"79\":1,\"105\":1,\"109\":1,\"111\":1,\"125\":1,\"126\":1,\"127\":1,\"128\":1,\"130\":2,\"131\":3,\"132\":2,\"133\":2,\"134\":1,\"135\":4,\"136\":1,\"137\":1,\"142\":1,\"144\":1,\"145\":2,\"179\":1,\"186\":1,\"188\":1,\"213\":1,\"259\":1,\"266\":5,\"268\":1,\"283\":2,\"293\":1,\"297\":1,\"300\":2,\"314\":2,\"315\":2,\"316\":2,\"319\":1,\"322\":2,\"323\":2,\"329\":4,\"332\":1,\"337\":1,\"338\":4,\"339\":1,\"340\":5,\"347\":2,\"349\":1,\"360\":1}}],[\"functions\",{\"0\":{\"8\":1,\"32\":1,\"33\":1},\"1\":{\"3\":3,\"8\":2,\"21\":2,\"32\":1,\"33\":2,\"45\":1,\"107\":1,\"118\":2,\"125\":1,\"126\":4,\"128\":2,\"130\":1,\"134\":3,\"136\":1,\"157\":1,\"196\":1,\"266\":1,\"268\":1,\"271\":1,\"277\":1,\"290\":3,\"296\":1,\"304\":1,\"339\":1,\"349\":1}}],[\"future\",{\"1\":{\"105\":1,\"110\":1,\"114\":1,\"119\":1,\"123\":3,\"126\":1}}],[\"flexibility\",{\"1\":{\"311\":1}}],[\"flexible\",{\"1\":{\"36\":1,\"37\":1}}],[\"float\",{\"1\":{\"330\":1}}],[\"float64\",{\"1\":{\"118\":1}}],[\"flowchart\",{\"0\":{\"210\":1},\"1\":{\"211\":2}}],[\"flicker\",{\"1\":{\"158\":1}}],[\"flickering\",{\"1\":{\"142\":1}}],[\"flip\",{\"1\":{\"123\":1}}],[\"flat\",{\"1\":{\"66\":1}}],[\"flagvalues\",{\"1\":{\"132\":1}}],[\"flagged\",{\"1\":{\"106\":1,\"115\":1}}],[\"flags\",{\"1\":{\"66\":1,\"118\":4,\"126\":1,\"130\":1,\"134\":2,\"330\":1}}],[\"flag\",{\"1\":{\"56\":1,\"132\":1,\"142\":1,\"157\":2,\"165\":1,\"177\":1,\"178\":1}}],[\"fast\",{\"1\":{\"118\":1,\"119\":2,\"144\":1}}],[\"faster\",{\"1\":{\"110\":1}}],[\"facing\",{\"0\":{\"105\":1,\"106\":1,\"114\":1,\"115\":1,\"118\":1,\"119\":1,\"123\":1,\"124\":1,\"143\":1},\"1\":{\"126\":1,\"128\":1,\"136\":1,\"138\":1}}],[\"facto\",{\"1\":{\"311\":1}}],[\"fact\",{\"1\":{\"57\":1,\"62\":1}}],[\"fails\",{\"1\":{\"109\":1,\"131\":1,\"332\":1}}],[\"fail\",{\"1\":{\"92\":2,\"93\":1,\"110\":1,\"123\":1,\"128\":2,\"130\":5,\"134\":1,\"157\":1,\"330\":1}}],[\"fair\",{\"1\":{\"55\":1,\"73\":1}}],[\"false\",{\"1\":{\"77\":1,\"118\":1,\"128\":1,\"129\":1,\"130\":3,\"144\":1,\"154\":1,\"179\":1,\"182\":1,\"262\":1,\"265\":2,\"282\":1,\"284\":1,\"314\":3}}],[\"fallback\",{\"1\":{\"177\":1,\"283\":1}}],[\"falling\",{\"1\":{\"68\":1}}],[\"fall\",{\"1\":{\"63\":1,\"64\":1,\"105\":2,\"118\":1,\"349\":1}}],[\"falls\",{\"1\":{\"63\":1,\"66\":1}}],[\"fanbase\",{\"1\":{\"64\":1}}],[\"fantastic\",{\"1\":{\"56\":1}}],[\"familiarity\",{\"1\":{\"68\":1,\"118\":1,\"177\":3}}],[\"familiar\",{\"1\":{\"63\":1,\"68\":1}}],[\"fault\",{\"1\":{\"55\":1,\"73\":1}}],[\"favorite\",{\"1\":{\"1\":1}}],[\"fexec\",{\"1\":{\"150\":1,\"177\":2,\"179\":1}}],[\"fe\",{\"1\":{\"105\":1}}],[\"february\",{\"1\":{\"75\":2}}],[\"feel\",{\"1\":{\"66\":1}}],[\"feels\",{\"1\":{\"62\":1}}],[\"feature\",{\"0\":{\"367\":1,\"371\":1},\"1\":{\"54\":1,\"62\":2,\"72\":1,\"83\":1,\"93\":1,\"105\":1,\"119\":1,\"123\":1,\"128\":1,\"132\":1,\"136\":1,\"175\":1,\"304\":1,\"368\":1,\"370\":1,\"372\":1,\"374\":1}}],[\"features\",{\"0\":{\"142\":1,\"149\":1,\"153\":1,\"157\":1,\"161\":1,\"165\":1,\"169\":1,\"173\":1,\"177\":1,\"182\":1,\"185\":1,\"188\":1,\"227\":1},\"1\":{\"4\":1,\"5\":1,\"54\":1,\"57\":1,\"72\":1,\"80\":1,\"86\":3,\"87\":1,\"88\":1,\"89\":1,\"91\":2,\"101\":1,\"103\":1,\"108\":2,\"110\":2,\"112\":1,\"121\":1,\"126\":1,\"128\":1,\"130\":1,\"132\":3,\"134\":1,\"136\":2,\"138\":4,\"173\":1,\"188\":1,\"255\":1,\"274\":1,\"275\":1}}],[\"fewer\",{\"1\":{\"240\":1}}],[\"few\",{\"1\":{\"31\":1,\"53\":1,\"62\":1,\"68\":1,\"89\":1,\"108\":1,\"118\":1,\"130\":1,\"170\":1,\"256\":1,\"313\":1,\"333\":1,\"341\":1}}],[\"f\",{\"0\":{\"357\":1},\"1\":{\"28\":4,\"108\":2,\"109\":1,\"142\":2,\"157\":1,\"158\":1,\"253\":1,\"274\":1,\"330\":3}}],[\"fd2\",{\"1\":{\"22\":1}}],[\"fd1\",{\"1\":{\"22\":1}}],[\"four\",{\"1\":{\"300\":1,\"365\":2}}],[\"found\",{\"0\":{\"351\":1},\"1\":{\"118\":1,\"244\":1,\"255\":1,\"299\":1,\"303\":1,\"344\":1,\"345\":1,\"349\":1}}],[\"font\",{\"1\":{\"259\":9}}],[\"focus\",{\"1\":{\"136\":1}}],[\"focused\",{\"1\":{\"134\":1}}],[\"focuses\",{\"1\":{\"88\":1,\"90\":1,\"110\":1,\"134\":1}}],[\"focusing\",{\"1\":{\"84\":1,\"146\":1}}],[\"follows\",{\"1\":{\"260\":1}}],[\"followed\",{\"1\":{\"58\":1,\"274\":1}}],[\"follow\",{\"1\":{\"54\":1,\"63\":1,\"72\":1,\"253\":1,\"277\":1,\"311\":2,\"346\":1}}],[\"following\",{\"1\":{\"29\":1,\"34\":1,\"55\":1,\"57\":2,\"63\":1,\"67\":1,\"74\":1,\"75\":2,\"150\":1,\"188\":1,\"244\":1,\"253\":2,\"262\":1,\"274\":1,\"283\":2,\"289\":1,\"299\":1,\"307\":1,\"313\":1,\"338\":1,\"342\":1,\"347\":1,\"349\":1}}],[\"foo=oof\",{\"1\":{\"338\":1}}],[\"foo=\",{\"1\":{\"330\":3}}],[\"foo=bar\",{\"1\":{\"338\":1}}],[\"foo=bar<\",{\"1\":{\"114\":1}}],[\"foo=bar>\",{\"1\":{\"114\":1,\"166\":1}}],[\"footnotes\",{\"0\":{\"331\":1}}],[\"footnote\",{\"0\":{\"203\":1},\"1\":{\"203\":1,\"217\":1}}],[\"footer\",{\"1\":{\"188\":1,\"223\":1}}],[\"footprint\",{\"1\":{\"136\":2}}],[\"foo\",{\"0\":{\"229\":1,\"371\":1},\"1\":{\"15\":1,\"16\":1,\"54\":3,\"72\":3,\"114\":1,\"136\":2,\"330\":7,\"338\":2,\"372\":1}}],[\"foobar\",{\"1\":{\"14\":1,\"63\":2,\"136\":1,\"142\":1,\"178\":1,\"266\":2,\"330\":2,\"331\":3}}],[\"fork\",{\"1\":{\"124\":1,\"128\":1}}],[\"forked\",{\"1\":{\"66\":1,\"134\":1}}],[\"forwards\",{\"1\":{\"177\":1,\"178\":1,\"259\":1}}],[\"forward\",{\"1\":{\"118\":1,\"126\":1}}],[\"forcing\",{\"1\":{\"118\":1,\"130\":1}}],[\"forcetty\",{\"1\":{\"130\":1}}],[\"force\",{\"1\":{\"15\":1,\"16\":1,\"130\":1,\"150\":1}}],[\"formers\",{\"1\":{\"118\":1}}],[\"formap\",{\"0\":{\"39\":1,\"76\":1},\"1\":{\"3\":1,\"39\":2,\"41\":1,\"60\":1,\"76\":3,\"79\":1,\"168\":1,\"169\":1,\"177\":1,\"179\":1,\"330\":3}}],[\"formatting\",{\"1\":{\"282\":3}}],[\"formats\",{\"1\":{\"53\":1,\"55\":1,\"57\":1,\"73\":1,\"74\":1,\"76\":1}}],[\"format\",{\"0\":{\"26\":1},\"1\":{\"3\":1,\"26\":3,\"57\":1,\"74\":1,\"75\":1,\"123\":2,\"287\":1}}],[\"forget\",{\"1\":{\"348\":1}}],[\"forgetting\",{\"1\":{\"18\":1}}],[\"forgo\",{\"1\":{\"63\":1}}],[\"fortunately\",{\"1\":{\"347\":1}}],[\"fortran\",{\"1\":{\"63\":1}}],[\"forth\",{\"1\":{\"56\":1}}],[\"foreground\",{\"0\":{\"355\":1,\"361\":1},\"1\":{\"105\":1,\"107\":1,\"116\":1,\"320\":1,\"355\":1,\"361\":2}}],[\"foremost\",{\"1\":{\"62\":1}}],[\"foreach\",{\"0\":{\"38\":1,\"57\":1,\"75\":1},\"1\":{\"3\":1,\"25\":2,\"38\":2,\"39\":1,\"41\":2,\"42\":4,\"52\":1,\"57\":2,\"58\":2,\"60\":1,\"75\":3,\"79\":1,\"105\":1,\"107\":1,\"136\":1,\"137\":1,\"177\":4,\"179\":1,\"253\":1,\"329\":1,\"330\":3,\"339\":1,\"340\":1}}],[\"for\",{\"0\":{\"269\":1,\"294\":1,\"351\":1},\"1\":{\"7\":1,\"8\":1,\"9\":3,\"10\":1,\"12\":3,\"18\":1,\"19\":1,\"22\":1,\"31\":1,\"32\":1,\"34\":2,\"53\":2,\"54\":5,\"55\":2,\"56\":3,\"58\":2,\"62\":3,\"63\":5,\"64\":6,\"66\":2,\"67\":1,\"68\":4,\"72\":5,\"73\":2,\"76\":2,\"77\":2,\"85\":1,\"87\":2,\"92\":1,\"94\":1,\"95\":1,\"97\":2,\"98\":3,\"101\":1,\"103\":3,\"104\":1,\"105\":2,\"108\":5,\"109\":3,\"110\":10,\"111\":2,\"112\":2,\"114\":1,\"118\":3,\"119\":2,\"121\":1,\"123\":4,\"125\":2,\"126\":4,\"127\":1,\"128\":4,\"129\":1,\"130\":8,\"131\":2,\"132\":2,\"133\":1,\"134\":12,\"135\":2,\"136\":14,\"137\":3,\"138\":2,\"140\":1,\"141\":2,\"142\":3,\"143\":2,\"144\":2,\"157\":1,\"177\":4,\"179\":1,\"184\":2,\"193\":1,\"195\":1,\"222\":3,\"231\":1,\"239\":2,\"243\":2,\"244\":1,\"253\":3,\"255\":1,\"264\":2,\"266\":1,\"275\":1,\"277\":2,\"280\":2,\"285\":1,\"287\":1,\"289\":1,\"290\":1,\"293\":1,\"299\":3,\"302\":1,\"304\":2,\"305\":1,\"308\":1,\"311\":2,\"314\":1,\"320\":1,\"321\":1,\"324\":1,\"328\":1,\"330\":1,\"331\":4,\"338\":1,\"340\":3,\"341\":1,\"342\":2,\"346\":1,\"351\":4,\"357\":1,\"365\":1}}],[\"five\",{\"1\":{\"363\":1,\"365\":3}}],[\"fits\",{\"1\":{\"305\":1}}],[\"fifo\",{\"1\":{\"299\":1}}],[\"finished\",{\"1\":{\"266\":2}}],[\"finish\",{\"1\":{\"128\":1}}],[\"finding\",{\"1\":{\"357\":2}}],[\"finder\",{\"1\":{\"357\":2}}],[\"find\",{\"0\":{\"357\":1},\"1\":{\"8\":1,\"64\":1,\"66\":1,\"75\":1,\"153\":1,\"162\":1}}],[\"fids\",{\"1\":{\"128\":1}}],[\"fid\",{\"1\":{\"123\":1,\"125\":1,\"315\":1,\"330\":3}}],[\"fields\",{\"1\":{\"144\":1}}],[\"field\",{\"1\":{\"110\":2,\"132\":1}}],[\"filtering\",{\"1\":{\"303\":1}}],[\"filters\",{\"1\":{\"109\":1,\"142\":1}}],[\"filter\",{\"1\":{\"108\":2,\"182\":1}}],[\"filename\",{\"1\":{\"268\":2,\"271\":1,\"296\":1}}],[\"fileregexp\",{\"1\":{\"128\":1}}],[\"filerefdefine\",{\"1\":{\"123\":1}}],[\"filerefset\",{\"1\":{\"123\":1}}],[\"fileref\",{\"0\":{\"268\":1},\"1\":{\"108\":1,\"109\":1,\"123\":1,\"125\":1,\"130\":1,\"134\":1,\"268\":2,\"270\":1,\"293\":2,\"295\":1,\"297\":1}}],[\"file3\",{\"1\":{\"19\":1}}],[\"file2\",{\"1\":{\"19\":2}}],[\"file1\",{\"1\":{\"19\":2}}],[\"file\",{\"0\":{\"356\":1},\"1\":{\"9\":1,\"17\":1,\"18\":4,\"23\":2,\"27\":1,\"28\":1,\"54\":12,\"55\":1,\"62\":1,\"72\":12,\"73\":1,\"75\":1,\"76\":1,\"102\":1,\"108\":2,\"109\":3,\"110\":1,\"111\":1,\"125\":1,\"126\":2,\"128\":2,\"130\":3,\"132\":1,\"134\":2,\"135\":5,\"138\":1,\"179\":1,\"191\":1,\"243\":1,\"249\":1,\"254\":1,\"268\":1,\"270\":2,\"272\":1,\"289\":1,\"293\":1,\"295\":2,\"297\":1,\"299\":2,\"303\":1,\"308\":4,\"310\":1,\"311\":4,\"330\":4,\"332\":5,\"340\":1,\"356\":1}}],[\"filesystem\",{\"0\":{\"28\":1},\"1\":{\"3\":1}}],[\"files\",{\"0\":{\"23\":1,\"55\":1,\"73\":1,\"213\":1,\"307\":1},\"1\":{\"3\":1,\"19\":2,\"22\":1,\"27\":1,\"28\":2,\"52\":1,\"54\":3,\"57\":2,\"66\":1,\"72\":3,\"75\":2,\"105\":2,\"107\":1,\"109\":3,\"111\":2,\"125\":2,\"126\":1,\"128\":4,\"138\":1,\"150\":1,\"191\":2,\"222\":1,\"231\":1,\"263\":2,\"270\":2,\"295\":2,\"299\":1,\"307\":2,\"330\":1,\"352\":2,\"357\":5}}],[\"fixed\",{\"1\":{\"105\":1,\"106\":1,\"110\":2,\"114\":1,\"115\":1,\"123\":2,\"126\":1,\"136\":1,\"138\":2,\"150\":1,\"162\":3,\"166\":1,\"178\":1}}],[\"fixes\",{\"0\":{\"144\":1,\"150\":1,\"154\":1,\"158\":1,\"162\":1,\"166\":1,\"170\":1,\"174\":1,\"178\":1,\"183\":1},\"1\":{\"84\":1,\"86\":1,\"89\":1,\"94\":1,\"98\":1,\"101\":1,\"103\":2,\"108\":2,\"110\":2,\"112\":1,\"118\":2,\"123\":1,\"126\":2,\"128\":2,\"130\":1,\"132\":1,\"134\":1,\"136\":1,\"138\":2,\"144\":1,\"146\":1}}],[\"fix\",{\"1\":{\"97\":1,\"110\":1,\"112\":1,\"119\":1,\"130\":3,\"138\":1,\"183\":1,\"351\":1}}],[\"fi\",{\"1\":{\"68\":1}}],[\"firstly\",{\"1\":{\"64\":1}}],[\"first\",{\"1\":{\"7\":1,\"22\":1,\"56\":2,\"58\":1,\"62\":1,\"63\":1,\"64\":1,\"77\":1,\"108\":1,\"114\":2,\"130\":1,\"136\":1,\"252\":1,\"253\":1,\"266\":2,\"304\":1,\"308\":1,\"331\":1,\"357\":1,\"365\":1}}],[\"fraktur\",{\"1\":{\"259\":1}}],[\"framework\",{\"1\":{\"124\":1,\"297\":1,\"301\":1}}],[\"freebsd\",{\"0\":{\"235\":1},\"1\":{\"230\":1,\"235\":4}}],[\"free\",{\"1\":{\"222\":1}}],[\"frequently\",{\"1\":{\"50\":1,\"61\":1}}],[\"frontmatter\",{\"1\":{\"188\":1,\"193\":3,\"221\":1,\"223\":1}}],[\"fro\",{\"1\":{\"130\":1}}],[\"frombuiltins\",{\"1\":{\"105\":1,\"254\":1}}],[\"from\",{\"0\":{\"49\":1,\"52\":1,\"248\":1,\"252\":1,\"253\":1},\"1\":{\"1\":1,\"8\":1,\"14\":1,\"16\":1,\"21\":1,\"22\":1,\"24\":1,\"27\":3,\"41\":1,\"49\":1,\"52\":1,\"55\":1,\"56\":1,\"58\":1,\"59\":1,\"62\":4,\"64\":1,\"66\":1,\"67\":1,\"68\":1,\"70\":2,\"73\":1,\"75\":2,\"82\":1,\"91\":1,\"107\":1,\"108\":3,\"109\":2,\"118\":2,\"120\":2,\"125\":1,\"126\":7,\"127\":1,\"128\":2,\"130\":1,\"131\":1,\"132\":1,\"133\":2,\"134\":1,\"135\":1,\"136\":1,\"137\":2,\"142\":1,\"149\":1,\"150\":1,\"154\":2,\"168\":1,\"177\":2,\"180\":1,\"191\":1,\"231\":1,\"243\":1,\"244\":1,\"245\":3,\"253\":2,\"259\":1,\"260\":1,\"265\":1,\"268\":2,\"272\":2,\"274\":1,\"275\":1,\"279\":1,\"285\":2,\"286\":3,\"289\":1,\"293\":1,\"297\":2,\"299\":1,\"301\":1,\"303\":1,\"304\":1,\"306\":4,\"310\":2,\"326\":1,\"332\":3,\"337\":4,\"340\":1,\"347\":2}}],[\"fri\",{\"1\":{\"209\":1}}],[\"friendly\",{\"1\":{\"105\":1,\"114\":1,\"138\":1,\"299\":1,\"347\":1}}],[\"friday\",{\"1\":{\"56\":2,\"57\":1,\"58\":1}}],[\"fruit\",{\"1\":{\"7\":1,\"14\":1,\"38\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(st(t,v[s],n)):e==="search"?self.postMessage(et(t,v[s],n)):self.postMessage({suggestions:st(t,v[s],n),results:et(t,v[s],n)})};
//# sourceMappingURL=index.js.map
